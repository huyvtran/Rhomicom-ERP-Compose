@02-Nov-2020 09:10:24
UPDATE rpt.rpt_reports SET report_name = ''Inventory Trns Sum/Bals Mismatch'', report_desc = ''Inventory Trns. Sum/Bals Mismatch'', rpt_sql_query = ''SELECT tbl1.itm_id mt,tbl1.item_code "Item Code ",tbl1.item_desc "Description ",z.subinv_id m, 
 z.subinv_name "Store ",k.stock_id m,SUM(tbl1.qnty) "Transaction Total Qty ",
 scm.get_ltst_stock_avlbl_bals(k.stock_id, 
 to_char(now(),''''YYYY-MM-DD'''')) "System Stock Balance ", tbl1.uom  "UOM "
 FROM (SELECT a.invc_type,a.invc_number, a.comments_desc
        , c.item_code, 
        c.item_desc, 
        CASE WHEN a.invc_type=''''Sales Return'''' THEN 
 b.doc_qty ELSE  -1*b.doc_qty END qnty, 
        d.uom_name uom,
        a.last_update_date,  
        b.itm_id,
        b.store_id
        FROM scm.scm_sales_invc_hdr a, sec.sec_users y, scm.scm_sales_invc_det b, 
        inv.inv_itm_list c, inv.unit_of_measure d
        WHERE ((a.invc_hdr_id = b.invc_hdr_id AND b.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
        AND (a.approval_status ilike ''''Approved'''' or b.is_itm_delivered=''''1'''') AND (a.org_id ={:orgID}) AND 
        (a.created_by=y.user_id) and (a.invc_type IN 
(''''Sales Invoice'''',''''Sales Order'''',''''Sales Return'''',''''Item Issue-Unbilled''''))) 
 UNION
        select ''''Receipt'''',a.rcpt_id ||'''''''',a.description, c.item_code, 
        c.item_desc, 
        b.quantity_rcvd qnty, 
        d.uom_name uom,
        a.last_update_date,
        b.itm_id,
       b.subinv_id
         from inv.inv_consgmt_rcpt_hdr a, sec.sec_users y, inv.inv_consgmt_rcpt_det b, 
        inv.inv_itm_list c, inv.unit_of_measure d
 WHERE ((a.rcpt_id = b.rcpt_id AND b.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
        AND (a.approval_status ilike ''''Received'''' or a.approval_status ilike ''''%Successful%'''') AND (a.org_id = {:orgID}) AND 
        (a.created_by=y.user_id))
 UNION
        select distinct ''''Quantity Adjustment'''',a.adjstmnt_hdr_id ||'''''''',a.description, c.item_code, 
        c.item_desc, 
        (chartodouble(b.new_ttl_qty)-b.new_ttl_qty_old) qnty, 
        d.uom_name uom,
        a.last_update_date,
        f.itm_id,
       f.subinv_id
         from inv.inv_consgmt_adjstmnt_hdr a, sec.sec_users y, inv.inv_consgmt_adjstmnt_det b, 
         inv.inv_consgmt_rcpt_det f,
        inv.inv_itm_list c, inv.unit_of_measure d
 WHERE ((a.adjstmnt_hdr_id = b.adjstmnt_hdr_id and f.consgmt_id = b.consgmt_id AND f.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
        AND (a.status ilike ''''Adjustment Successful'''') AND (a.org_id = {:orgID}) AND 
        (a.created_by=y.user_id)) 
 UNION
        select ''''Stock Transfer'''',a.transfer_hdr_id ||'''''''',a.description, c.item_code, 
        c.item_desc, 
        -1*b.transfer_qty qnty, 
        d.uom_name uom,
        a.last_update_date,
        b.itm_id,
       b.src_store_id
         from inv.inv_stock_transfer_hdr a, sec.sec_users y, inv.inv_stock_transfer_det b, 
        inv.inv_itm_list c, inv.unit_of_measure d
 WHERE ((a.transfer_hdr_id = b.transfer_hdr_id AND b.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
        AND (a.status ilike ''''Transfer Successful'''') AND (a.org_id = {:orgID}) AND 
        (a.created_by=y.user_id))   
 UNION
        select ''''Stock Transfer'''',a.transfer_hdr_id ||'''''''',a.description, c.item_code, 
        c.item_desc, 
        b.transfer_qty qnty, 
        d.uom_name uom,
        a.last_update_date,
        b.itm_id,
       b.dest_subinv_id
         from inv.inv_stock_transfer_hdr a, sec.sec_users y, inv.inv_stock_transfer_det b, 
        inv.inv_itm_list c, inv.unit_of_measure d
 WHERE ((a.transfer_hdr_id = b.transfer_hdr_id AND b.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
        AND (a.status ilike ''''Transfer Successful'''') AND (a.org_id = {:orgID}) AND 
        (a.created_by=y.user_id)) 
 UNION
        select ''''Receipt Return'''',a.rcpt_rtns_id ||'''''''',a.description, c.item_code, 
        c.item_desc, 
        -1*b.qty_rtnd qnty, 
        d.uom_name uom,
        a.last_update_date,
        b.itm_id,
        b.subinv_id
         from inv.inv_consgmt_rcpt_rtns_hdr a, sec.sec_users y, inv.inv_consgmt_rcpt_rtns_det b, 
        inv.inv_itm_list c, inv.unit_of_measure d, inv.inv_consgmt_rcpt_det e
 WHERE ((b.rcpt_line_id = e.line_id AND a.rcpt_rtns_id = b.rtns_hdr_id AND b.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
        AND (a.approval_status != ''''Incomplete'''' or a.approval_status IS NULL) AND (a.org_id = {:orgID}) AND 
        (a.created_by=y.user_id))) tbl1 
        left outer join inv.inv_stock k on (tbl1.itm_id = k.itm_id and tbl1.store_id = k.subinv_id)
        /*left outer join inv.inv_stock_daily_bals m on (k.stock_id = m.stock_id and substr(tbl1.last_update_date,1,10)=m.bals_date)*/
        left outer join inv.inv_itm_subinventories z on (tbl1.store_id=z.subinv_id)
        WHERE tbl1.store_id>0 
        GROUP BY 1,2,3,4,5,6,8,9
        HAVING (SUM(tbl1.qnty) != scm.get_ltst_stock_avlbl_bals(k.stock_id, 
 to_char(now(),''''YYYY-MM-DD'''')))
         ORDER BY tbl1.item_code ASC, z.subinv_id ASC'', owner_module = ''Stores And Inventory Manager'', is_enabled = ''1'', last_update_by = 130, last_update_date = ''2020-11-02 09:10:24'', rpt_or_sys_prcs = ''SQL Report'', cols_to_group = '''', cols_to_count = ''1'', cols_to_sum = '''', cols_to_average = '''', cols_to_no_frmt = ''6,7'', output_type = ''HTML'', portrait_lndscp = ''Portrait'', rpt_layout=''TABULAR'', imgs_col_nos='''', csv_delimiter=''None'', process_runner=''Standard Process Runner'', jrxml_file_name='''', pre_rpt_sql_query='''', pst_rpt_sql_query='''' WHERE (report_id = 35)
-------------------------Next Msg:-------------------------
