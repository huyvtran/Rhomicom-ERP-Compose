Username:Consultant1|Login Number:144475|myImgFileName:56v723v757444c2PXTmMEF6GzvFQU1R23Uc4Mm01cc2v2889c.png|strlFileNm11:|extnsn:png
-------------------------Next Msg:-------------------------
Username:Consultant1|Login Number:144475|Person:Mr. SYSTEM USER SETUP (RHO0002012)
-------------------------Next Msg:-------------------------
Welcome Mr. SYSTEM USER SETUP to Rhomicom Systems Tech. Ltd.. 
        <br/><br/>Your last successful login was 02-Nov-2020 08:35:53-Machine Details(Unknown/IP:172.21.0.1/Browser:Google Chrome v86.0.4240.111/OS:windows/Session ID:tajb41o32htorl0uf6lcbjdpg2) .
        <br/><br/>Your last failed login was 09-Sep-2020 07:14:55-Machine Details(Unknown/IP:141.101.104.197/Browser:Google Chrome v85.0.4183.83/OS:windows/Session ID:2b7490e92707ada566ca510d795aa15e)
-------------------------Next Msg:-------------------------
@02-Nov-2020 08:59:53
INSERT INTO wkf.wkf_actual_msgs_hdr(
            msg_id, msg_hdr, msg_body, created_by, creation_date, herchy_id, 
            msg_typ, app_id, msg_status, src_doc_type, src_doc_id, last_update_by, 
            last_update_date, attchments, attchments_desc) VALUES (295465, 'Welcome Mr. SYSTEM USER SETUP', 'Welcome Mr. SYSTEM USER SETUP to Rhomicom Systems Tech. Ltd.. 
        <br/><br/>Your last successful login was 02-Nov-2020 08:35:53-Machine Details(Unknown/IP:172.21.0.1/Browser:Google Chrome v86.0.4240.111/OS:windows/Session ID:tajb41o32htorl0uf6lcbjdpg2) .
        <br/><br/>Your last failed login was 09-Sep-2020 07:14:55-Machine Details(Unknown/IP:141.101.104.197/Browser:Google Chrome v85.0.4183.83/OS:windows/Session ID:2b7490e92707ada566ca510d795aa15e)', 
            130, '2020-11-02 08:59:53', -1, 'Informational', 
            1, '0','Login',-1, 
            130, '2020-11-02 08:59:53', '', '')
-------------------------Next Msg:-------------------------
@02-Nov-2020 08:59:53
INSERT INTO wkf.wkf_actual_msgs_routng(
            msg_id, from_prsn_id, to_prsn_id, date_sent, 
            created_by, creation_date, msg_status, action_to_perform, last_update_by, 
            last_update_date, to_prsns_hrchy_level, action_comments) 
            VALUES (295465, -1, 1, '2020-11-02 08:59:53', 130, 
            '2020-11-02 08:59:53', 'Initiated', 'Acknowledge', 130, '2020-11-02 08:59:53', 1, 
                '')
-------------------------Next Msg:-------------------------
orgLogoFileName:dwnlds/tmp/c396vv962PXTmMEF6GzvFQU1R23Uc4Mm01PNX3_c53vc4vvc.png|strlFileNm11:1.png|extnsn:png
-------------------------Next Msg:-------------------------
@02-Nov-2020 08:59:54
UPDATE rpt.rpt_prcss_rnnrs SET 
            shld_rnnr_stop='0', last_update_by=130, last_update_date=to_char(now(),'YYYY-MM-DD HH24:MI:SS') WHERE rnnr_name = 'REQUESTS LISTENER PROGRAM-JAVA'
-------------------------Next Msg:-------------------------
java -jar /opt/apache/adbs/bin/REMSProcessRunner.jar "rho-pgdb" "5432" "postgres" "*****************" "ys_db" "REQUESTS LISTENER PROGRAM-JAVA" "-1" "/opt/apache/adbs/bin" WEB "/opt/apache/adbs" "http://localhost:8000/"
-------------------------Next Msg:-------------------------
/opt/apache/adbs/Logs/cmnd_line_logs_78467398_20201102085954.txt
-------------------------Next Msg:-------------------------
Inside generateReportRun, RPTID=265==686~|687~|688~|689~|690~|691~|692~|693~|694~|695~|-130~Person Basic Data|-190~PDF
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:00:34
INSERT INTO rpt.rpt_report_runs(
            run_by, run_date, rpt_run_output, run_status_txt, 
            run_status_prct, report_id, rpt_rn_param_ids, rpt_rn_param_vals, 
            output_used, orntn_used, last_actv_date_tme, is_this_from_schdler, alert_id) 
            VALUES (130, '2020-11-02 09:00:34', '', 'Not Started!', 0, 265, 
            '', 
            '', 
            '', 
            '', '2020-11-02 09:00:34', '0', -1)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:00:34
INSERT INTO rpt.rpt_run_msgs(log_messages, process_typ, process_id, created_by, creation_date, last_update_by, last_update_date) VALUES ('2020-11-02 09:00:34 .... Report/Process Run is about to Start...(Being run by Consultant1)','Process Run',156568, 130, '2020-11-02 09:00:34', 130, '2020-11-02 09:00:34')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:00:34
UPDATE rpt.rpt_run_msgs SET log_messages=log_messages || '

686|687|688|689|690|691|692|693|694|695|-130|-190
||||||||||Person Basic Data|PDF

OUTPUT FORMAT: PDF
ORIENTATION: ', last_update_by=130, last_update_date='2020-11-02 09:00:34' WHERE msg_id = 156553
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:00:34
UPDATE rpt.rpt_report_runs SET rpt_rn_param_ids = '686|687|688|689|690|691|692|693|694|695|-130|-190', rpt_rn_param_vals = '||||||||||Person Basic Data|PDF', output_used = 'PDF', orntn_used= '' WHERE (rpt_run_id = 156568)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:00:34
UPDATE rpt.rpt_prcss_rnnrs SET 
            shld_rnnr_stop='0', last_update_by=130, last_update_date=to_char(now(),'YYYY-MM-DD HH24:MI:SS') WHERE rnnr_name = 'Standard Process Runner'
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:00:34
UPDATE rpt.rpt_report_runs SET shld_run_stop = '0' WHERE (rpt_run_id = 156568)
-------------------------Next Msg:-------------------------
java -jar /opt/apache/adbs/bin/REMSProcessRunner.jar "rho-pgdb" "5432" "postgres" "***************" "ys_db" "Standard Process Runner" "156568" "/opt/apache/adbs/bin" WEB "/opt/apache/adbs" "http://localhost:8000/"
-------------------------Next Msg:-------------------------
Inside generateReportRun, RPTID=265==686~|687~|688~|689~|690~|691~|692~|693~|694~|695~|-130~Person Basic Data|-190~PDF
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:01:27
INSERT INTO rpt.rpt_report_runs(
            run_by, run_date, rpt_run_output, run_status_txt, 
            run_status_prct, report_id, rpt_rn_param_ids, rpt_rn_param_vals, 
            output_used, orntn_used, last_actv_date_tme, is_this_from_schdler, alert_id) 
            VALUES (130, '2020-11-02 09:01:27', '', 'Not Started!', 0, 265, 
            '', 
            '', 
            '', 
            '', '2020-11-02 09:01:27', '0', -1)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:01:27
INSERT INTO rpt.rpt_run_msgs(log_messages, process_typ, process_id, created_by, creation_date, last_update_by, last_update_date) VALUES ('2020-11-02 09:01:27 .... Report/Process Run is about to Start...(Being run by Consultant1)','Process Run',156569, 130, '2020-11-02 09:01:27', 130, '2020-11-02 09:01:27')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:01:27
UPDATE rpt.rpt_run_msgs SET log_messages=log_messages || '

686|687|688|689|690|691|692|693|694|695|-130|-190
||||||||||Person Basic Data|PDF

OUTPUT FORMAT: PDF
ORIENTATION: ', last_update_by=130, last_update_date='2020-11-02 09:01:27' WHERE msg_id = 156554
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:01:27
UPDATE rpt.rpt_report_runs SET rpt_rn_param_ids = '686|687|688|689|690|691|692|693|694|695|-130|-190', rpt_rn_param_vals = '||||||||||Person Basic Data|PDF', output_used = 'PDF', orntn_used= '' WHERE (rpt_run_id = 156569)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:01:27
UPDATE rpt.rpt_prcss_rnnrs SET 
            shld_rnnr_stop='0', last_update_by=130, last_update_date=to_char(now(),'YYYY-MM-DD HH24:MI:SS') WHERE rnnr_name = 'Standard Process Runner'
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:01:27
UPDATE rpt.rpt_report_runs SET shld_run_stop = '0' WHERE (rpt_run_id = 156569)
-------------------------Next Msg:-------------------------
java -jar /opt/apache/adbs/bin/REMSProcessRunner.jar "rho-pgdb" "5432" "postgres" "***************" "ys_db" "Standard Process Runner" "156569" "/opt/apache/adbs/bin" WEB "/opt/apache/adbs" "http://localhost:8000/"
-------------------------Next Msg:-------------------------
Inside generateReportRun, RPTID=266==727~01-Oct-2020 00:00:06|726~02-Nov-2020 09:00:06|-130~Total Withdrawals Summary|-190~PDF
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:02:22
INSERT INTO rpt.rpt_report_runs(
            run_by, run_date, rpt_run_output, run_status_txt, 
            run_status_prct, report_id, rpt_rn_param_ids, rpt_rn_param_vals, 
            output_used, orntn_used, last_actv_date_tme, is_this_from_schdler, alert_id) 
            VALUES (130, '2020-11-02 09:02:22', '', 'Not Started!', 0, 266, 
            '', 
            '', 
            '', 
            '', '2020-11-02 09:02:22', '0', -1)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:02:22
INSERT INTO rpt.rpt_run_msgs(log_messages, process_typ, process_id, created_by, creation_date, last_update_by, last_update_date) VALUES ('2020-11-02 09:02:22 .... Report/Process Run is about to Start...(Being run by Consultant1)','Process Run',156570, 130, '2020-11-02 09:02:22', 130, '2020-11-02 09:02:22')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:02:22
UPDATE rpt.rpt_run_msgs SET log_messages=log_messages || '

727|726|-130|-190
01-Oct-2020 00:00:06|02-Nov-2020 09:00:06|Total Withdrawals Summary|PDF

OUTPUT FORMAT: PDF
ORIENTATION: ', last_update_by=130, last_update_date='2020-11-02 09:02:22' WHERE msg_id = 156555
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:02:22
UPDATE rpt.rpt_report_runs SET rpt_rn_param_ids = '727|726|-130|-190', rpt_rn_param_vals = '01-Oct-2020 00:00:06|02-Nov-2020 09:00:06|Total Withdrawals Summary|PDF', output_used = 'PDF', orntn_used= '' WHERE (rpt_run_id = 156570)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:02:22
UPDATE rpt.rpt_prcss_rnnrs SET 
            shld_rnnr_stop='0', last_update_by=130, last_update_date=to_char(now(),'YYYY-MM-DD HH24:MI:SS') WHERE rnnr_name = 'Jasper Process Runner'
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:02:22
UPDATE rpt.rpt_report_runs SET shld_run_stop = '0' WHERE (rpt_run_id = 156570)
-------------------------Next Msg:-------------------------
java -jar /opt/apache/adbs/bin/REMSProcessRunner.jar "rho-pgdb" "5432" "postgres" "***************" "ys_db" "Jasper Process Runner" "156570" "/opt/apache/adbs/bin" WEB "/opt/apache/adbs" "http://localhost:8000/"
-------------------------Next Msg:-------------------------
Inside generateReportRun, RPTID=267==728~01-Jul-2020 00:00:00|729~02-Nov-2020 09:03:17|-130~Total Withdrawals For Branches|-190~PDF
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:03:20
INSERT INTO rpt.rpt_report_runs(
            run_by, run_date, rpt_run_output, run_status_txt, 
            run_status_prct, report_id, rpt_rn_param_ids, rpt_rn_param_vals, 
            output_used, orntn_used, last_actv_date_tme, is_this_from_schdler, alert_id) 
            VALUES (130, '2020-11-02 09:03:20', '', 'Not Started!', 0, 267, 
            '', 
            '', 
            '', 
            '', '2020-11-02 09:03:20', '0', -1)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:03:20
INSERT INTO rpt.rpt_run_msgs(log_messages, process_typ, process_id, created_by, creation_date, last_update_by, last_update_date) VALUES ('2020-11-02 09:03:20 .... Report/Process Run is about to Start...(Being run by Consultant1)','Process Run',156571, 130, '2020-11-02 09:03:20', 130, '2020-11-02 09:03:20')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:03:20
UPDATE rpt.rpt_run_msgs SET log_messages=log_messages || '

728|729|-130|-190
01-Jul-2020 00:00:00|02-Nov-2020 09:03:17|Total Withdrawals For Branches|PDF

OUTPUT FORMAT: PDF
ORIENTATION: ', last_update_by=130, last_update_date='2020-11-02 09:03:20' WHERE msg_id = 156556
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:03:20
UPDATE rpt.rpt_report_runs SET rpt_rn_param_ids = '728|729|-130|-190', rpt_rn_param_vals = '01-Jul-2020 00:00:00|02-Nov-2020 09:03:17|Total Withdrawals For Branches|PDF', output_used = 'PDF', orntn_used= '' WHERE (rpt_run_id = 156571)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:03:20
UPDATE rpt.rpt_prcss_rnnrs SET 
            shld_rnnr_stop='0', last_update_by=130, last_update_date=to_char(now(),'YYYY-MM-DD HH24:MI:SS') WHERE rnnr_name = 'Jasper Process Runner'
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:03:20
UPDATE rpt.rpt_report_runs SET shld_run_stop = '0' WHERE (rpt_run_id = 156571)
-------------------------Next Msg:-------------------------
java -jar /opt/apache/adbs/bin/REMSProcessRunner.jar "rho-pgdb" "5432" "postgres" "***************" "ys_db" "Jasper Process Runner" "156571" "/opt/apache/adbs/bin" WEB "/opt/apache/adbs" "http://localhost:8000/"
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:05:56
UPDATE sec.sec_track_user_logins SET last_active_time='2020-11-02 09:03:36', logout_time='' WHERE login_number=144475
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:05:56
UPDATE sec.sec_track_user_logins SET last_active_time='2020-11-02 09:03:36', logout_time='' WHERE login_number=144475
-------------------------Next Msg:-------------------------
Inside generateReportRun, RPTID=267==728~01-Jul-2020 00:00:00|729~02-Nov-2020 09:03:17|-130~Total Withdrawals For Branches|-190~PDF
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:06:01
INSERT INTO rpt.rpt_report_runs(
            run_by, run_date, rpt_run_output, run_status_txt, 
            run_status_prct, report_id, rpt_rn_param_ids, rpt_rn_param_vals, 
            output_used, orntn_used, last_actv_date_tme, is_this_from_schdler, alert_id) 
            VALUES (130, '2020-11-02 09:06:01', '', 'Not Started!', 0, 267, 
            '', 
            '', 
            '', 
            '', '2020-11-02 09:06:01', '0', -1)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:06:01
INSERT INTO rpt.rpt_run_msgs(log_messages, process_typ, process_id, created_by, creation_date, last_update_by, last_update_date) VALUES ('2020-11-02 09:06:01 .... Report/Process Run is about to Start...(Being run by Consultant1)','Process Run',156572, 130, '2020-11-02 09:06:01', 130, '2020-11-02 09:06:01')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:06:01
UPDATE rpt.rpt_run_msgs SET log_messages=log_messages || '

728|729|-130|-190
01-Jul-2020 00:00:00|02-Nov-2020 09:03:17|Total Withdrawals For Branches|PDF

OUTPUT FORMAT: PDF
ORIENTATION: ', last_update_by=130, last_update_date='2020-11-02 09:06:01' WHERE msg_id = 156557
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:06:01
UPDATE rpt.rpt_report_runs SET rpt_rn_param_ids = '728|729|-130|-190', rpt_rn_param_vals = '01-Jul-2020 00:00:00|02-Nov-2020 09:03:17|Total Withdrawals For Branches|PDF', output_used = 'PDF', orntn_used= '' WHERE (rpt_run_id = 156572)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:06:01
UPDATE rpt.rpt_prcss_rnnrs SET 
            shld_rnnr_stop='0', last_update_by=130, last_update_date=to_char(now(),'YYYY-MM-DD HH24:MI:SS') WHERE rnnr_name = 'Jasper Process Runner'
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:06:01
UPDATE rpt.rpt_report_runs SET shld_run_stop = '0' WHERE (rpt_run_id = 156572)
-------------------------Next Msg:-------------------------
java -jar /opt/apache/adbs/bin/REMSProcessRunner.jar "rho-pgdb" "5432" "postgres" "***************" "ys_db" "Jasper Process Runner" "156572" "/opt/apache/adbs/bin" WEB "/opt/apache/adbs" "http://localhost:8000/"
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:09:13
UPDATE sec.sec_track_user_logins SET last_active_time='2020-11-02 09:06:10', logout_time='' WHERE login_number=144475
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:09:47
UPDATE rpt.rpt_reports SET report_name = 'Withdrawal Trend - 2020', report_desc = 'CBR-Total Mobilization Per Relations Officer', rpt_sql_query = 'SELECT tbl1.accnt_name accnt_name, 
tbl1.accnt_num accnt_num, 
tbl1.staff_id, 
tbl1.relations_officer, 
SUM(tbl1.jan) "Jan D", 
SUM(tbl1.janw) "Jan W", 
SUM(tbl1.feb) "Feb D", 
SUM(tbl1.febw) "Feb W",
SUM(tbl1.march) "March D", 
SUM(tbl1.marchw) "March W", 
SUM(tbl1.april) "April D", 
SUM(tbl1.aprilw) "April W", 
SUM(tbl1.may) "May D", 
SUM(tbl1.mayw) "May W", 
SUM(tbl1.june) "June D", 
SUM(tbl1.junew) "June W",
SUM(tbl1.july) "July D", 
SUM(tbl1.julyw) "July W", 
SUM(tbl1.august) "August D", 
SUM(tbl1.augustw) "August W", 
SUM(tbl1.september) "September D", 
SUM(tbl1.septemberw) "September W", 
SUM(tbl1.october) "October D", 
SUM(tbl1.octoberw) "October W", 
SUM(tbl1.november) "November D", 
SUM(tbl1.novemberw) "November W",
SUM(tbl1.december) "December D", 
SUM(tbl1.decemberw) "December W", 
org.get_site_code_desc(-1) branch_param, 
''01-Jan-2020'' P_FROM_DATE, 
''31-Dec-2020'' P_TO_DATE 

FROM (SELECT DISTINCT b.account_id, mcf.get_cust_accnt_num(b.account_id) accnt_num, 
mcf.get_cust_accnt_name(b.account_id) accnt_name, 
a.lnkd_person_id, prs.get_prsn_loc_id(a.lnkd_person_id) staff_id, 
prs.get_prsn_name(a.lnkd_person_id) relations_officer, 

	  round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Jan-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-Jan-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'')), 2) jan, 
	  
round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Jan-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-Jan-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''WITHDRAWAL'')), 2) janw, 	  

round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Feb-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''29-Feb-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'')), 2) feb, 
	  
round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Feb-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''29-Feb-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''WITHDRAWAL'')), 2) febw, 	  

round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Mar-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-Mar-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'')), 2) March, 
	  
round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Mar-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-Mar-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''WITHDRAWAL'')), 2) Marchw, 	  

round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Apr-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''30-Apr-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'')), 2) april, 
	  
round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Apr-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''30-Apr-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''WITHDRAWAL'')), 2) aprilw, 	  

round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-May-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-May-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'')), 2) may, 
	  
round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-May-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-May-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''WITHDRAWAL'')), 2) mayw, 	  

round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Jun-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''30-Jun-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'')), 2) june, 
	  
round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Jun-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''30-Jun-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''WITHDRAWAL'')), 2) junew, 	  
	  

round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Jul-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-Jul-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'')), 2) july, 
	  
round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Jul-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-Jul-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''WITHDRAWAL'')), 2) julyw, 	  

round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Aug-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-Aug-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'')), 2) august, 
	  
round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Aug-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-Aug-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''WITHDRAWAL'')), 2) augustw, 	  

round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Sep-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''30-Sep-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'')), 2) september, 
	  
round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE  z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Sep-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''30-Sep-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''WITHDRAWAL'')), 2) septemberw, 	  

round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Oct-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-Oct-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'')), 2) october, 
	  
round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Oct-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-Oct-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''WITHDRAWAL'')), 2) octoberw, 	  

round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE  z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Nov-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''30-Nov-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'')), 2) november, 
	  
round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE  z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Nov-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''30-Nov-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''WITHDRAWAL'')), 2) novemberw, 	  

round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Dec-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-Dec-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'')), 2) december,
	  
round((SELECT COALESCE(SUM(z.amount), 0) FROM mcf.mcf_cust_account_transactions z 
WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') 
AND z.trns_date >= to_char(to_timestamp(''01-Dec-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') 
||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''31-Dec-2020'',''DD-Mon-YYYY''),
''YYYY-MM-DD'') ||'' 23:59:59'' AND z.trns_type IN (''WITHDRAWAL'')), 2) decemberw	 
	  FROM mcf.mcf_bulk_trns_hdr a, mcf.mcf_cust_account_transactions b 
	  WHERE a.bulk_trns_hdr_id = b.bulk_trns_hdr_id 
	  AND b.trns_date >= to_char(to_timestamp(''01-Jan-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' 
	  AND b.trns_date <= to_char(to_timestamp(''31-Dec-2020'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59'' 
	  AND a.is_batch_cashless != ''1'' 
            AND a.is_batch_cashless != ''1''
	    AND a.lnkd_person_id = COALESCE(NULLIF({:P_PERSON_ID},-1),a.lnkd_person_id)
	    AND a.branch_id = COALESCE(NULLIF({:P_BRNCH_ID},-1),a.branch_id)

	  ORDER BY 4) tbl1 
	  GROUP BY tbl1.staff_id,tbl1.accnt_name,tbl1.accnt_num,tbl1.relations_officer;', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:09:47', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '2,3,4', cols_to_average = '', cols_to_no_frmt = '2,3,4', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='268.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 269)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:09:47
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Sales Executive:', paramtr_rprstn_nm_in_query = '{:P_PERSON_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:09:47', lov_name_id = '211', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Person IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 734)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:09:47
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. Branch ID:', paramtr_rprstn_nm_in_query = '{:P_BRNCH_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:09:47', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 735)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:09:47
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:09:47', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 736)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:09:47
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:09:47', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 737)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:09:59
INSERT INTO rpt.rpt_reports(report_name, report_desc, rpt_sql_query, owner_module, created_by, creation_date, last_update_by, last_update_date, rpt_or_sys_prcs, is_enabled, cols_to_group, cols_to_count, cols_to_sum, cols_to_average, cols_to_no_frmt, output_type, portrait_lndscp, 
            rpt_layout, imgs_col_nos, csv_delimiter, process_runner, jrxml_file_name, pre_rpt_sql_query, pst_rpt_sql_query) VALUES ('Withdrawal Trend - Per Year', 'Withdrawal Trend - Per Year', 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 accnt_num,
  tbl1.gnrl_data3 accnt_name,
  tbl1.gnrl_data4 account_type,
  tbl1.gnrl_data5 tel_number,
  tbl1.gnrl_data6 branch,
  tbl1.gnrl_data8::NUMERIC Jan,
  tbl1.gnrl_data10::NUMERIC Feb,
  tbl1.gnrl_data12::NUMERIC March,
  tbl1.gnrl_data14::NUMERIC April,
  tbl1.gnrl_data16::NUMERIC May,
  tbl1.gnrl_data18::NUMERIC June,
  tbl1.gnrl_data20::NUMERIC July,
  tbl1.gnrl_data22::NUMERIC August,
  tbl1.gnrl_data24::NUMERIC September,
  tbl1.gnrl_data26::NUMERIC October,
  tbl1.gnrl_data28::NUMERIC November,
  tbl1.gnrl_data30::NUMERIC December, 
''01-Jan-{:p_year}'' P_FROM_DATE, 
''31-Dec-{:p_year}'' P_TO_DATE ,
-1 staff_id, 
'''' relations_officer, 
tbl1.gnrl_data6 branch_param 
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', 'Banking', 130, '2020-11-02 09:09:59', 130, '2020-11-02 09:09:59', 'SQL Report', '1', '', '0', '', '', '', 'HTML', 'Portrait', 'None', '', 'None', 'Jasper Process Runner', '269.jrxml', 'select mcf.populate_monthly_trns_sums(
{:rptRunID},
''{:p_year}'',
{:p_branch_id},
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', '')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:09:59
INSERT INTO rpt.rpt_reports(report_name, report_desc, rpt_sql_query, owner_module, created_by, creation_date, last_update_by, last_update_date, rpt_or_sys_prcs, is_enabled, cols_to_group, cols_to_count, cols_to_sum, cols_to_average, cols_to_no_frmt, output_type, portrait_lndscp, 
            rpt_layout, imgs_col_nos, csv_delimiter, process_runner, jrxml_file_name, pre_rpt_sql_query, pst_rpt_sql_query) VALUES ('Deposit Trend - Per Year', 'Deposit Trend - Per Year', 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 accnt_num,
  tbl1.gnrl_data3 accnt_name,
  tbl1.gnrl_data4 account_type,
  tbl1.gnrl_data5 tel_number,
  tbl1.gnrl_data6 branch,
  tbl1.gnrl_data7::NUMERIC Jan,
  tbl1.gnrl_data9::NUMERIC Feb,
  tbl1.gnrl_data11::NUMERIC March,
  tbl1.gnrl_data13::NUMERIC April,
  tbl1.gnrl_data15::NUMERIC May,
  tbl1.gnrl_data17::NUMERIC June,
  tbl1.gnrl_data19::NUMERIC July,
  tbl1.gnrl_data21::NUMERIC August,
  tbl1.gnrl_data23::NUMERIC September,
  tbl1.gnrl_data25::NUMERIC October,
  tbl1.gnrl_data27::NUMERIC November,
  tbl1.gnrl_data29::NUMERIC December, 
''01-Jan-{:p_year}'' P_FROM_DATE, 
''31-Dec-{:p_year}'' P_TO_DATE ,
-1 staff_id, 
'''' relations_officer, 
tbl1.gnrl_data6 branch_param
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', 'Banking', 130, '2020-11-02 09:09:59', 130, '2020-11-02 09:09:59', 'SQL Report', '1', '', '0', '', '', '', 'HTML', 'Portrait', 'None', '268.jrxml', 'None', 'Jasper Process Runner', '268.jrxml', 'select mcf.populate_monthly_trns_sums(
{:rptRunID},
''{:p_year}'',
{:p_branch_id},
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', '')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:09:59
UPDATE rpt.rpt_reports SET report_name = 'Total Withdrawals For Branches', report_desc = 'Total Withdrawals Summary', rpt_sql_query = 'SELECT 
tbl1.transdate,
SUM(tbl1.somanya) "somanya",
SUM(tbl1.nkurakan) "nkurakan",
SUM(tbl1.koforidua) "koforidua",
SUM(tbl1.asesewa) "asesewa",
tbl1.from,
tbl1.tot
FROM ( SELECT distinct acct_trns_id, to_char(to_timestamp( trns_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "transdate", 
	  
	  amount "somanya",0 "nkurakan",0 "koforidua", 0 "asesewa", 
	''{:fromDate}''    "from",
	''{:toDate}''    "tot"
FROM mcf.mcf_cust_account_transactions
where trns_type in (''WITHDRAWAL'')
AND branch_id  = 2
AND (to_timestamp(trns_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:fromDate}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:toDate}'',''DD-Mon-YYYY HH24:MI:SS'')) group by acct_trns_id,trns_date

UNION
SELECT 	distinct acct_trns_id, to_char(to_timestamp( trns_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "transdate",  0 "somanya", amount "nkurakan",0 "koforidua", 0 "asesewa",
	''{:fromDate}''    "from",
	''{:toDate}''    "tot"
FROM mcf.mcf_cust_account_transactions
where trns_type in (''WITHDRAWAL'')
AND branch_id  = 3
AND (to_timestamp(trns_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:fromDate}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:toDate}'',''DD-Mon-YYYY HH24:MI:SS'')) group by acct_trns_id,trns_date
	
UNION
	
SELECT distinct acct_trns_id, to_char(to_timestamp( trns_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "transdate",  0 "somanya",0 "nkurakan", amount "koforidua", 0 "asesewa",
	''{:fromDate}''    "from",
	''{:toDate}''    "tot"
FROM mcf.mcf_cust_account_transactions
where trns_type in (''WITHDRAWAL'')
AND branch_id  = 4
AND (to_timestamp(trns_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:fromDate}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:toDate}'',''DD-Mon-YYYY HH24:MI:SS'')) group by acct_trns_id,trns_date

UNION
SELECT 	distinct acct_trns_id, to_char(to_timestamp( trns_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "transdate",  0 "somanya",0 "nkurakan",0 "koforidua",	amount "asesewa",
	''{:fromDate}''    "from",
	''{:toDate}''    "tot"
FROM mcf.mcf_cust_account_transactions
where trns_type in (''WITHDRAWAL'')
AND branch_id  = 5
AND (to_timestamp(trns_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:fromDate}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:toDate}'',''DD-Mon-YYYY HH24:MI:SS''))group by acct_trns_id,trns_date)tbl1
 Group by
tbl1.transdate,
tbl1.from,
tbl1.tot', owner_module = 'Banking', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:09:59', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='267.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 267)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:09:59
UPDATE rpt.rpt_reports SET report_name = 'Total Withdrawals Summary', report_desc = 'Total Withdrawals Summary', rpt_sql_query = 'SELECT 
tbl1.somanya,  
tbl1.nkurakan, 
tbl1.koforidua,
tbl1.asesewa,
tbl1.from,
tbl1.tot
FROM (
SELECT 	SUM(amount) "somanya",0 "nkurakan",0 "koforidua", 0 "asesewa", 
	''{:fromDate}''    "from",
	''{:toDate}''    "tot"
FROM mcf.mcf_cust_account_transactions
where trns_type in (''WITHDRAWAL'')
AND branch_id  = 2
AND (to_timestamp(trns_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:fromDate}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:toDate}'',''DD-Mon-YYYY HH24:MI:SS''))

UNION
SELECT 	0 "somanya",SUM(amount) "nkurakan",0 "koforidua", 0 "asesewa",
	''{:fromDate}''    "from",
	''{:toDate}''    "tot"
FROM mcf.mcf_cust_account_transactions
where trns_type in (''WITHDRAWAL'')
AND branch_id  = 3
AND (to_timestamp(trns_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:fromDate}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:toDate}'',''DD-Mon-YYYY HH24:MI:SS''))
	
UNION
	
SELECT 0 "somanya",0 "nkurakan",	SUM(amount) "koforidua", 0 "asesewa",
	''{:fromDate}''    "from",
	''{:toDate}''    "tot"
FROM mcf.mcf_cust_account_transactions
where trns_type in (''WITHDRAWAL'')
AND branch_id  = 4
AND (to_timestamp(trns_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:fromDate}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:toDate}'',''DD-Mon-YYYY HH24:MI:SS''))

UNION
SELECT 	0 "somanya",0 "nkurakan",0 "koforidua",	SUM(amount) "asesewa",
	''{:fromDate}''    "from",
	''{:toDate}''    "tot"
FROM mcf.mcf_cust_account_transactions
where trns_type in (''WITHDRAWAL'')
AND branch_id  = 5
AND (to_timestamp(trns_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:fromDate}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:toDate}'',''DD-Mon-YYYY HH24:MI:SS'')))tbl1
 Group by
tbl1.somanya,  
tbl1.nkurakan, 
tbl1.koforidua,
tbl1.asesewa,
tbl1.from,
tbl1.tot', owner_module = 'Banking', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:09:59', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='266.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 266)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:09:59
UPDATE rpt.rpt_reports SET report_name = 'Person Basic Data', report_desc = 'Person Basic Data', rpt_sql_query = 'select row_number() over (order by local_id_no )                           as                   "No. ",
       local_id_no                                                                              "ID No.   ",
       title || '' '' || first_name || '' '' || other_names || '' '' || sur_name as                   "Full Name           ",
       ppt.prsn_type                                                                            "Person Type",
       to_char(to_timestamp(ppt.valid_start_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'')                 "Start Date ",
       gender,
       email,
       cntct_no_mobl,
       COALESCE(NULLIF(scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id), ''''), ''Unknown Workplace'') "Institution "
FROM prs.prsn_names_nos pnn
         left outer join pasn.prsn_grades pg on pnn.person_id = pg.person_id
         left outer join pasn.prsn_jobs pj on pnn.person_id = pj.person_id
         left outer join pasn.prsn_prsntyps ppt on pnn.person_id = ppt.person_id
         left outer join pasn.prsn_divs_groups pdg on pnn.person_id = pdg.person_id
         left outer join pasn.prsn_positions pstn on pnn.person_id = pstn.person_id
         left outer join prs.prsn_extra_data ped on ped.person_id = pnn.person_id

where coalesce('''' || pnn.local_id_no) = coalesce(NULLIF(''{:pers_id}'', ''''), '''' || pnn.local_id_no)
  AND (coalesce('''' || ped.data_col9) = coalesce(NULLIF(''{:instu_nm}'', ''''), '''' || ped.data_col9)
    or scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) =
       coalesce(NULLIF(''{:instu_nm}'', ''''), scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id)))
  AND '''' || coalesce(pg.grade_id, -1) = coalesce(NULLIF(''{:grd_id}'', ''''), '''' || coalesce(pg.grade_id, -1))/*Grades*/
  AND (coalesce(pg.valid_start_date, to_char((select now()), ''YYYY-MM-DD'')) is not null and
       (pg.valid_end_date is null OR ((SELECT NOW())
           between to_timestamp(pg.valid_start_date, ''YYYY-MM-DD HH24:MI:SS'')
           AND to_timestamp(pg.valid_end_date, ''YYYY-MM-DD HH24:MI:SS''))))
  AND '''' || coalesce(pj.job_id, -1) = coalesce(NULLIF(''{:jb_id}'', ''''), '''' || coalesce(pj.job_id, -1))/*Jobs*/
  AND (coalesce(pj.valid_start_date, to_char((select now()), ''YYYY-MM-DD'')) is not null and
       (pj.valid_end_date is null OR ((SELECT NOW())
           between to_timestamp(pj.valid_start_date, ''YYYY-MM-DD HH24:MI:SS'')
           AND to_timestamp(pj.valid_end_date, ''YYYY-MM-DD HH24:MI:SS''))))
  AND '''' || coalesce(ppt.prsn_type, ''-1'') = coalesce(NULLIF(''{:pstntyp}'', ''''), '''' || coalesce(ppt.prsn_type, ''-1''))/*Person Types*/
  AND (coalesce(ppt.valid_start_date, to_char((select now()), ''YYYY-MM-DD'')) is not null and (ppt.valid_end_date is null
    OR to_timestamp(COALESCE(NULLIF(''{:asAtDate}'', ''''), to_char(NOW(), ''YYYY-MM-DD'')), ''YYYY-MM-DD'')
                                                                                                  between to_timestamp(ppt.valid_start_date, ''YYYY-MM-DD HH24:MI:SS'')
                                                                                                  AND to_timestamp(ppt.valid_end_date, ''YYYY-MM-DD HH24:MI:SS'')))
  AND (CASE
           WHEN ''{:fromDate}'' = '''' THEN 1
           WHEN to_timestamp(COALESCE(NULLIF(''{:fromDate}'', ''''), to_char(NOW(), ''YYYY-MM-DD'')), ''YYYY-MM-DD'')
               <= to_timestamp(ppt.valid_start_date, ''YYYY-MM-DD HH24:MI:SS'') THEN 1
           ELSE 0 END) = 1
  AND '''' || coalesce(pdg.div_id, -1) = coalesce(NULLIF(''{:dv_id}'', ''''), '''' || coalesce(pdg.div_id, -1))/*Divisions and Groups*/
  AND (coalesce(pdg.valid_start_date, to_char((select now()), ''YYYY-MM-DD'')) is not null and
       (pdg.valid_end_date is null OR ((SELECT NOW())
           between to_timestamp(pdg.valid_start_date, ''YYYY-MM-DD HH24:MI:SS'')
           AND to_timestamp(pdg.valid_end_date, ''YYYY-MM-DD HH24:MI:SS''))))
  AND '''' || coalesce(pstn.position_id, -1) = coalesce(NULLIF(''{:pstn_id}'', ''''), '''' || coalesce(pstn.position_id, -1))/*Positions*/
  AND (coalesce(pstn.valid_start_date, to_char((select now()), ''YYYY-MM-DD'')) is not null and
       (pstn.valid_end_date is null OR ((SELECT NOW())
           between to_timestamp(pstn.valid_start_date, ''YYYY-MM-DD HH24:MI:SS'')
           AND to_timestamp(pstn.valid_end_date, ''YYYY-MM-DD HH24:MI:SS''))))
  AND '''' || coalesce(ppt.prn_typ_asgnmnt_rsn, ''-1'') =
      coalesce(NULLIF(''{:pstntyp_rsn}'', ''''), '''' || coalesce(ppt.prn_typ_asgnmnt_rsn, ''-1''))
ORDER BY pnn.local_id_no', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:09:59', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='348.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 265)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:09:59
UPDATE rpt.rpt_reports SET report_name = 'Welfare Loan Credit Letter', report_desc = 'Welfare Loan Credit Letter', rpt_sql_query = 'SELECT row_number() OVER ( ORDER BY a.local_id_no )                                                                                                      row_num,
       local_id_no                                                                                                                                       staff_no,
       trim(title || '' '' || first_name || '' '' || other_names || '' '' || sur_name)                                                                         full_nm,
       data_col1                                                                                                                                         account_number,
       d.amount_paid,
       substr(gst.cnvrt_ymdtm_to_dmytm(c.mass_pay_trns_date), 1, 11)                                                                                     trans_date,
       c.mass_pay_desc,
       f.local_clsfctn || '' ('' ||
       (CASE
            WHEN e.item_type_name ilike ''Semi%Month%'' THEN
                ''Till ''||pay.get_tk_loan_end_dte(f.pay_request_id)
            ELSE substr(pay.get_tk_loan_end_dte(f.pay_request_id), 8, 4)
           END) ||
       '')''                                                                                                                                               tied_to,
       f.date_processed,
       c.mass_pay_desc||'' (''||c.mass_pay_name || '')'' pay_desc,
       ''THE REGIONAL MANAGER''                                                                                                                            P_LETTER_TO,
       ''WELFARE LOAN TO STAFF''                                                                                                                           P_SUBJECT,
       TO_CHAR(now(), ''DD-MON-YYYY'')                                                                                                                     P_LTR_DATE,
       ''Kindly credit the under-mentioned number of staff with the amount against each name and debit the Rhomicom Staff Welfare Account XXXXX.'' P_LTR_BODY,
             ''_____________________________''                                                                                                                         P_SIGN_1_NM,
             ''_____________________''                                                                                                                                       P_SIGN_1_POST,
             ''_____________________________''                                                                                                                         P_SIGN_2_NM,
             ''_____________________''                                                                                                                                  P_SIGN_2_POST
FROM prs.prsn_names_nos a,
     prs.prsn_extra_data b,
     pay.pay_mass_pay_run_hdr c,
     pay.pay_itm_trnsctns d,
     pay.loan_pymnt_invstmnt_typs e,
     pay.pay_loan_pymnt_rqsts f
WHERE a.person_id = b.person_id
  and a.person_id = d.person_id
  and c.mass_pay_id = d.mass_pay_id
  and e.main_amnt_itm_id = d.item_id
  and f.pay_request_id = d.pay_request_id
  and c.mass_pay_id={:pay_run_id}
ORDER BY a.local_id_no;', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:09:59', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4,5,6,7,8,9', cols_to_average = '', cols_to_no_frmt = '4,5,6,7,8,9', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='349.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 264)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:00
UPDATE rpt.rpt_reports SET report_name = 'Pay Run Results Details', report_desc = 'Pay Run Results Details', rpt_sql_query = 'SELECT row_number() over (order by c.local_id_no,b.pay_run_priority ) as                                           Num,
       c.local_id_no                                                                            ID_No,
       trim(c.title || '' '' || c.sur_name ||
            '', '' || c.first_name || '' '' || c.other_names)                                       Full_Name,
       b.item_code_name                                                                         Pay_Item,
       CASE WHEN b.item_maj_type = ''Balance Item'' THEN b.item_maj_type ELSE b.item_min_type END m1,
       coalesce((CASE
                     WHEN b.item_maj_type = ''Balance Item'' THEN pay.get_ltst_blsitm_bals(c.person_id,
                                                                                         org.get_payitm_id(b.item_code_name),
                                                                                         ''{:pay_dte}'')
                     ELSE a.amount_paid END), 0)                                                Amount,
       b.pay_run_priority                                                                       m2,
       scm.get_cstmr_splr_name(c.lnkd_firm_org_id),
       e.mass_pay_desc || '' (''|| e.mass_pay_name || '') - ''||gst.cnvrt_ymdtm_to_dmytm(e.mass_pay_trns_date) pay_desc
FROM prs.prsn_names_nos c
         LEFT OUTER JOIN pay.pay_itm_trnsctns a ON (a.person_id = c.person_id)
         LEFT OUTER JOIN pay.pay_mass_pay_run_hdr e ON (a.mass_pay_id= e.mass_pay_id)
         LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = a.item_id)
WHERE ((b.org_id = {:orgID}) and (b.local_classfctn ilike ''{:clsfctn}'')
    AND (b.item_code_name ilike ''{:itmNm}'')
AND b.item_value_uom=''Money'' 
    AND (c.local_id_no IN ({:id_num})))
AND a.mass_pay_id={:pay_run_id}
  AND coalesce((CASE
                    WHEN b.item_maj_type = ''Balance Item'' THEN pay.get_ltst_blsitm_bals(c.person_id,
                                                                                        org.get_payitm_id(b.item_code_name),
                                                                                        ''{:pay_dte}'')
                    ELSE a.amount_paid END), 0) > 0
  AND '''' || c.lnkd_firm_org_id = coalesce(NULLIF(''{:instu_id}'', ''''), '''' || c.lnkd_firm_org_id)
ORDER BY c.local_id_no, b.pay_run_priority', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:00', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '4', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='350.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 263)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:00
UPDATE rpt.rpt_reports SET report_name = 'Semi-Month Welfare Contributions Letter', report_desc = 'Semi-Month Welfare Contributions Letter', rpt_sql_query = 'SELECT row_number() OVER ( ORDER BY a.local_id_no )                                                                                                      row_num,
       local_id_no                                                                                                                                       staff_no,
       trim(title || '' '' || first_name || '' '' || other_names || '' '' || sur_name)                                                                         full_nm,
       data_col1                                                                                                                                         account_number,
       d.amount_paid,
       substr(gst.cnvrt_ymdtm_to_dmytm(c.mass_pay_trns_date), 1, 11)                                                                                     trans_date,
       c.mass_pay_desc,
       (CASE
            WHEN c.mass_pay_trns_date <= substr(c.mass_pay_trns_date, 1, 8) || ''15'' || '' 23:59:59'' THEN ''1ST HALF '' ||
                                                                                                        substr(gst.cnvrt_ymdtm_to_dmytm(c.mass_pay_trns_date), 4, 8)
            ELSE ''2ND HALF '' ||
                 substr(gst.cnvrt_ymdtm_to_dmytm(c.mass_pay_trns_date), 4, 8) END)                                                                       tied_to,
       c.mass_pay_desc || '' ('' || c.mass_pay_name || '')''                                                                                                 pay_desc,
       ''THE REGIONAL MANAGER''                                                                                                                            P_LETTER_TO,
       ''WELFARE CONTRIBUTIONS BY STAFF''                                                                                                                  P_SUBJECT,
       TO_CHAR(now(), ''DD-MON-YYYY'')                                                                                                                     P_LTR_DATE,
       ''Kindly debit the under-mentioned number of staff with the amount against each name and credit the Rhomicom Staff Welfare Account XXXXX.'' P_LTR_BODY,
             ''_____________________________''                                                                                                                         P_SIGN_1_NM,
             ''_____________________''                                                                                                                                       P_SIGN_1_POST,
             ''_____________________________''                                                                                                                         P_SIGN_2_NM,
             ''_____________________''                                                                                                                                  P_SIGN_2_POST,
       c.mass_pay_trns_date date_processed 
FROM prs.prsn_names_nos a,
     prs.prsn_extra_data b,
     pay.pay_mass_pay_run_hdr c,
     pay.pay_itm_trnsctns d
WHERE a.person_id = b.person_id
  and a.person_id = d.person_id
  and c.mass_pay_id = d.mass_pay_id
  and c.mass_pay_id ={:pay_run_id}
ORDER BY a.local_id_no;', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:00', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4,5,6,7,8,9', cols_to_average = '', cols_to_no_frmt = '4,5,6,7,8,9', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='351.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 262)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:00
UPDATE rpt.rpt_reports SET report_name = 'Welfare Loan Repayment Letter', report_desc = 'Welfare Loan Repayment Letter', rpt_sql_query = 'Select row_number() OVER ( ORDER BY tbl1.staff_no)                            row_num,
       tbl1.staff_no,
       tbl1.full_nm,
       tbl1.account_number,
       SUM(tbl1.amount_paid)                                                  amount_paid,
       tbl1.trans_date,
       tbl1.mass_pay_desc,
       MAX(REPLACE(REPLACE(tbl1.tied_to, ''Principal '', ''''), ''Interest '', '''')) tied_to,
       tbl1.pay_desc,
       tbl1.date_processed,
       tbl1.P_LETTER_TO,
       tbl1.P_SUBJECT,
       tbl1.P_LTR_DATE,
       tbl1.P_LTR_BODY,
       tbl1.P_SIGN_1_NM,
       tbl1.P_SIGN_1_POST,
       tbl1.P_SIGN_2_NM,
       tbl1.P_SIGN_2_POST
FROM (SELECT local_id_no                                                                                                                                       staff_no,
             trim(title || '' '' || first_name || '' '' || other_names || '' '' || sur_name)                                                                         full_nm,
             data_col1                                                                                                                                         account_number,
             d.amount_paid,
             substr(gst.cnvrt_ymdtm_to_dmytm(c.mass_pay_trns_date), 1, 11)                                                                                     trans_date,
             c.mass_pay_desc,
             org.get_payitm_nm(d.item_id)                                                                                                                      tied_to,
             c.mass_pay_desc || '' ('' || c.mass_pay_name || '')''                                                                                                 pay_desc,
             c.mass_pay_trns_date                                                                                                                              date_processed,
             ''THE REGIONAL MANAGER''                                                                                                                            P_LETTER_TO,
             ''WELFARE LOAN REPAYMENT BY STAFF''                                                                                                                 P_SUBJECT,
             TO_CHAR(now(), ''DD-MON-YYYY'')                                                                                                                     P_LTR_DATE,
             ''Kindly debit the under-mentioned number of staff with the amount against each name and credit the Rhomicom Staff Welfare Account XXXXX.'' P_LTR_BODY,
             ''_____________________________''                                                                                                                         P_SIGN_1_NM,
             ''_____________________''                                                                                                                                       P_SIGN_1_POST,
             ''_____________________________''                                                                                                                         P_SIGN_2_NM,
             ''_____________________''                                                                                                                                  P_SIGN_2_POST
      FROM prs.prsn_names_nos a,
           prs.prsn_extra_data b,
           pay.pay_mass_pay_run_hdr c,
           pay.pay_itm_trnsctns d
      WHERE a.person_id = b.person_id
        and a.person_id = d.person_id
        and c.mass_pay_id = d.mass_pay_id
        and c.mass_pay_id = {:pay_run_id}
        and org.get_payitm_nm(d.item_id)  not ilike ''%Deffered%''
        AND org.get_payitm_uom(d.item_id) = ''Money'') tbl1
GROUP BY tbl1.staff_no,
         tbl1.full_nm,
         tbl1.account_number,
         tbl1.trans_date,
         tbl1.mass_pay_desc,
         tbl1.pay_desc,
         tbl1.date_processed,
         tbl1.P_LETTER_TO,
         tbl1.P_SUBJECT,
         tbl1.P_LTR_DATE,
         tbl1.P_LTR_BODY,
         tbl1.P_SIGN_1_NM,
         tbl1.P_SIGN_1_POST,
         tbl1.P_SIGN_2_NM,
         tbl1.P_SIGN_2_POST
ORDER BY tbl1.staff_no;', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:00', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4,5,6,7,8,9', cols_to_average = '', cols_to_no_frmt = '4,5,6,7,8,9', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='352.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 261)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:00
UPDATE rpt.rpt_reports SET report_name = 'All Item Run Details-Per Period', report_desc = 'All Item Run Details-Per Period', rpt_sql_query = 'SELECT row_number() OVER ( ORDER BY  to_timestamp(a.paymnt_date, ''YYYY-MM-DD HH24:MI:SS'') ASC)                            row_num,
       a.pay_trns_id                                                                           "m1",
       a.person_id                                                                             "m2",
       a.item_id                                                                               "m3",
       c.local_id_no                                                                           ID_No,
       trim(c.title || '' '' || c.sur_name || '', '' || c.first_name || '' '' || c.other_names)                                              Full_Name,
       b.item_code_name                                                                        Item_Name,
       a.amount_paid                                                                           Amount_Paid,
       to_char(to_timestamp(a.paymnt_date, ''YYYY-MM-DD HH24:MI:SS''), ''DD-Mon-YYYY HH24:MI:SS'') Payment_Date,
       a.paymnt_source                                                                         "m4",
       a.pay_trns_type || '':'' || a.pymnt_desc                                                  Description,
       a.crncy_id                                                                              "m5",
       ''All Item Run Details from '' || substr(gst.cnvrt_ymdtm_to_dmytm(''{:fromDate} 00:00:00''),1,11)|| '' - '' || substr(gst.cnvrt_ymdtm_to_dmytm(''{:toDate} 23:59:59''),1,11) pay_desc
FROM (pay.pay_itm_trnsctns a 
         LEFT OUTER JOIN pay.pay_mass_pay_run_hdr e ON (a.mass_pay_id= e.mass_pay_id)
         LEFT OUTER JOIN org.org_pay_items b ON a.item_id = b.item_id)
         LEFT OUTER JOIN prs.prsn_names_nos c on a.person_id = c.person_id
WHERE ((b.org_id ={:orgID}) and
       (to_timestamp(a.paymnt_date, ''YYYY-MM-DD HH24:MI:SS'') between
           to_timestamp(''{:fromDate} 00:00:00'', ''YYYY-MM-DD HH24:MI:SS'') AND
           to_timestamp(''{:toDate} 23:59:59'', ''YYYY-MM-DD HH24:MI:SS'')))
  AND c.person_id = coalesce(NULLIF({:IDNos},-1), c.person_id)
  AND b.item_id = coalesce(NULLIF({:itemID},-1), b.item_id)
  AND (b.item_value_uom=''Money'' or b.item_id={:itemID})
  AND b.local_classfctn ilike ''{:clsfctn}''
  AND a.pymnt_vldty_status = ''VALID''
  and a.src_py_trns_id <= 0
ORDER BY to_timestamp(a.paymnt_date, ''YYYY-MM-DD HH24:MI:SS'') ASC', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:00', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='353.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 260)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:00
UPDATE rpt.rpt_reports SET report_name = 'Welfare Loan Application Letter', report_desc = 'Welfare Loan Application Letter', rpt_sql_query = 'SELECT
	a.pay_request_id,
	a.RQSTD_FOR_PERSON_ID,
	REPLACE(prs.get_prsn_surname (a.RQSTD_FOR_PERSON_ID) || '' ('' || prs.get_prsn_loc_id (a.RQSTD_FOR_PERSON_ID) || '')'', '' ()'', '''') fullnm,
	a.request_type,
	a.item_type_id,
	b.item_type_name,
	a.local_clsfctn,
	a.REQUEST_REASON,
	to_char(to_timestamp(a.creation_date, ''YYYY-MM-DD HH24:MI:SS''), ''DD-Mon-YYYY HH24:MI:SS'') rqst_sbmt_date,
	round(a.PRNCPL_AMOUNT, 2) PRNCPL_AMOUNT,
	a.MNTHLY_DEDUC,
	a.INTRST_RATE,
	a.intrst_period_type,
	a.REPAY_PERIOD,
	a.repay_period_type,
	round(((a.MNTHLY_DEDUC * a.REPAY_PERIOD) - a.PRNCPL_AMOUNT), 2) ttl_intrst,
	a.net_loan_amount net_credit_amnt,
	a.REQUEST_STATUS is_pstd,
	a.HAS_AGREED,
	a.IS_PROCESSED,
	''THE EXECUTIVES'' P_LETTER_TO,
	CASE WHEN a.request_type = ''SETTLEMENT'' THEN
		''WELFARE LOAN SETTLEMENT REQUEST''
	ELSE
		''WELFARE LOAN APPLICATION''
	END P_SUBJECT,
	TO_CHAR(now(), ''DD-MON-YYYY'') P_LTR_DATE,
	CASE WHEN a.request_type = ''SETTLEMENT'' THEN
		''Kindly find below the details of my request for your consideration. '' || ''I agree that my BOG Account be debited with the Net amount stated below to fulfill this request. ''
	ELSE
		''Kindly find below the details of my request for your consideration. '' || ''I agree that my BOG Account be debited as per the terms and conditions of this loan. ''
	END P_LTR_BODY,
	CASE WHEN a.request_type = ''SETTLEMENT'' THEN
		''Net Amount to Debit''
	ELSE
		''Net Amount to Credit''
	END P_NET_LABEL,
	''_____________________________'' P_SIGN_1_NM,
	''_____________________'' P_SIGN_1_POST,
	''_____________________________'' P_SIGN_2_NM,
	''_____________________'' P_SIGN_2_POST
FROM
	pay.pay_loan_pymnt_rqsts a,
	pay.loan_pymnt_invstmnt_typs b
WHERE (a.item_type_id = b.item_type_id
	AND a.pay_request_id = {:pay_rqst_id});', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:00', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4,5,6,7,8,9', cols_to_average = '', cols_to_no_frmt = '4,5,6,7,8,9', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='354.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 259)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:00
UPDATE rpt.rpt_reports SET report_name = 'Account Credit Letter', report_desc = 'Account Credit Letter', rpt_sql_query = 'SELECT a.smpl_vchr_hdr_id,
       a.supplier_id,
       scm.get_cstmr_splr_name(a.supplier_id)              fullnm,
       a.smpl_vchr_type,
       a.comments_desc,
       to_char(to_timestamp(a.smpl_vchr_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'') trans_date,
       round(a.invoice_amount, 2)                                                                 PRNCPL_AMOUNT,
       a.invoice_amount net_credit_amnt,
       a.ref_doc_number,
       a.approval_status                                                                          is_pstd,
       gst.get_pssbl_val(a.invc_curr_id) crncy,
       ''THE REGIONAL MANAGER''                                                                                                                            P_LETTER_TO,
       ''EXPENSE VOUCHER PAYMENT''                                                                                                                           P_SUBJECT,
       TO_CHAR(now(), ''DD-MON-YYYY'')                                                                                                                     P_LTR_DATE,
       ''Kindly credit the under-mentioned account with the stated amount and debit the Rhomicom Staff Welfare Account XXXXX.'' P_LTR_BODY,
             ''_____________________________''                                                                                                                         P_SIGN_1_NM,
             ''_____________________''                                                                                                                                       P_SIGN_1_POST,
             ''_____________________________''                                                                                                                         P_SIGN_2_NM,
             ''_____________________''                                                                                                                                  P_SIGN_2_POST
FROM accb.accb_smpl_vchr_hdr a
WHERE (a.smpl_vchr_hdr_id = {:pay_rqst_id});', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:00', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4,5,6,7,8,9', cols_to_average = '', cols_to_no_frmt = '4,5,6,7,8,9', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='355.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 258)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:00
UPDATE rpt.rpt_reports SET report_name = 'Simplified Transaction Voucher', report_desc = 'Simplified Transaction Voucher', rpt_sql_query = 'SELECT
	b.smpl_vchr_hdr_id pybls_invc_hdr_id,
	to_char(to_timestamp(b.smpl_vchr_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'') invc_date,
	b.smpl_vchr_number pybls_invc_number,
	b.smpl_vchr_type pybls_invc_type,
	b.comments_desc,
	scm.get_cstmr_splr_name (b.supplier_id) customer_name,
	COALESCE(f.site_name, '' '') site_name,
	COALESCE(f.billing_address, '' '') billing_address,
	COALESCE(f.ship_to_address, '' '') ship_to_address,
	b.comments_desc payment_terms,
	a.smpl_vchr_det_id pybls_smmry_id,
	a.smpl_vchr_det_desc pybls_smmry_desc,
	smpl_vchr_det_amnt amnt,
	to_char(to_timestamp(a.smpl_vchr_line_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'') line_date,
	gst.get_pssbl_val (b.invc_curr_id) curr
FROM
	accb.accb_smpl_vchr_det a,
	accb.accb_smpl_vchr_hdr b
	LEFT OUTER JOIN scm.scm_cstmr_suplr_sites f ON (b.supplier_site_id = f.cust_sup_site_id)
WHERE ((a.smpl_vchr_hdr_id = {:invoice_id}
		AND b.smpl_vchr_hdr_id = a.smpl_vchr_hdr_id))
ORDER BY
	a.smpl_vchr_line_date;', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:00', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='356.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 257)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:00
UPDATE rpt.rpt_reports SET report_name = 'Aging Analysis Report by Product - Summary', report_desc = 'BOG-Aging Analysis Report by Product - Summary', rpt_sql_query = 'SELECT row_number() over (order by 1) as "No.", tbl3.* FROM ( SELECT tbl2.bank_branch, trim(tbl2.loan_product) loan_product, tbl2.classification, (tbl2.prvsn_percentage * 100)||''%'' prvsn_percentage,  
 SUM(tbl2.principal_amount) ttl_principal_amount,  SUM(tbl2.ttl_amnt_outsndng) ttl_outstanding, round(SUM(tbl2.prvsn_amount),2) ttl_prvsn_amount,
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period", 
to_char(to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''), ''1901-01-01''),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Start Date", 
to_char(to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param End Date",
''All Branches'' "Selected Branch",
''All Classifications'' "Loan Classification"
FROM (SELECT tbl1.gnrl_data2::BIGINT loan_rqst_id, tbl1.gnrl_data4 loan_product, 
tbl1.gnrl_data5::NUMERIC principal_amount, tbl1.gnrl_data6::NUMERIC ttl_amnt_outsndng, 
CASE WHEN  tbl1.gnrl_data7::NUMERIC = 0  THEN (0.01 * tbl1.gnrl_data6::NUMERIC)
WHEN  tbl1.gnrl_data7::NUMERIC BETWEEN 1 AND 30 THEN (0.05 * tbl1.gnrl_data6::NUMERIC)
WHEN  tbl1.gnrl_data7::NUMERIC BETWEEN 31 AND 60  THEN (0.2 * tbl1.gnrl_data6::NUMERIC)
WHEN  tbl1.gnrl_data7::NUMERIC BETWEEN 61 AND 90  THEN (0.4 * tbl1.gnrl_data6::NUMERIC)
WHEN tbl1.gnrl_data7::NUMERIC BETWEEN 91 AND 120  THEN (0.6 * tbl1.gnrl_data6::NUMERIC)
WHEN  tbl1.gnrl_data7::NUMERIC BETWEEN 121 AND 150 THEN (0.8 * tbl1.gnrl_data6::NUMERIC)
WHEN tbl1.gnrl_data7::NUMERIC >= 151 THEN (1 * tbl1.gnrl_data5::NUMERIC)
END prvsn_amount,  
tbl1.gnrl_data7::NUMERIC dflt_age_in_days,
CASE WHEN  tbl1.gnrl_data7::NUMERIC = 0  THEN ''Current Loans''
WHEN  tbl1.gnrl_data7::NUMERIC BETWEEN 1 AND 30 THEN ''Up to 30 days''
WHEN  tbl1.gnrl_data7::NUMERIC BETWEEN 31 AND 60 THEN ''31 days and less than 61 days''
WHEN  tbl1.gnrl_data7::NUMERIC BETWEEN 61 AND 90  THEN ''61 days and less than 91 days''
WHEN tbl1.gnrl_data7::NUMERIC BETWEEN 91 AND 120  THEN ''91 days and less than 121 days''
WHEN  tbl1.gnrl_data7::NUMERIC BETWEEN 121 AND 150 THEN ''121 days and less than 151 days''
WHEN tbl1.gnrl_data7::NUMERIC >= 151 THEN ''151 days and above''
END classification,
CASE WHEN  tbl1.gnrl_data7::NUMERIC = 0  THEN 0.01
WHEN  tbl1.gnrl_data7::NUMERIC BETWEEN 1 AND 30 THEN 0.05
WHEN  tbl1.gnrl_data7::NUMERIC BETWEEN 31 AND 60  THEN 0.2
WHEN  tbl1.gnrl_data7::NUMERIC BETWEEN 61 AND 90  THEN 0.4
WHEN tbl1.gnrl_data7::NUMERIC BETWEEN 91 AND 120  THEN 0.6
WHEN  tbl1.gnrl_data7::NUMERIC BETWEEN 121 AND 150 THEN 0.8
WHEN tbl1.gnrl_data7::NUMERIC >= 151 THEN 1
END prvsn_percentage,
tbl1.gnrl_data8 bank_branch
FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id = {:rptRunID}
 AND 1 = 1 
AND tbl1.gnrl_data7::NUMERIC >= 0 AND tbl1.gnrl_data6::NUMERIC > 0)tbl2
GROUP BY tbl2.loan_product, tbl2.classification, tbl2.prvsn_percentage, tbl2.bank_branch
ORDER BY tbl2.bank_branch ASC, tbl2.Loan_Product ASC, tbl2.prvsn_percentage ASC)tbl3', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:00', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='256.jrxml', pre_rpt_sql_query='SELECT mcf.populate_loan_aging_nd_balance_data({:rptRunID},
''{:p_as_at_date}'',''{:p_start_date}'',''{:p_end_date}'',
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 256)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:00
UPDATE rpt.rpt_reports SET report_name = 'Create and Assign New Loan Repayment Accounts', report_desc = 'Create and Assign New Loan Repayment Accounts', rpt_sql_query = 'SELECT mcf.load_loanrqst_newrpymnt_details();', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:00', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 255)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:00
UPDATE rpt.rpt_reports SET report_name = 'Disbursed Loans Voided Per Period', report_desc = 'Disbursed Loans Voided Per Period', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 8 DESC) as "No.", tbl1.*
FROM (SELECT

CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END    "Customer Name",	 
mcf.get_cust_account_number(z.account_id) "Loan Account Number",
mcf.get_cust_accnt_status(z.account_id)	"Account Status" , 
CASE WHEN segment8_dataload != '''' THEN to_char(to_timestamp(segment8_dataload,''YYYY-MM-DD''),''DD-Mon-YYYY'') 
ELSE to_char(to_timestamp(d.disbmnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY'') END "Disbursement Date",
round(SUM(c.principal_amount),2) "Disbursed Amount",
d.status "Disbursment Status",
to_char(to_timestamp(d.last_update_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "Date Voided",
 sec.get_usr_name(d.last_update_by)	 "Voided By",  
org.get_site_code_desc(a.branch_id::integer) branch,
z.account_clsfctn  "CATEGORY",	 
b.product_code||''.''||product_desc "Product Type", 
         prs.get_prsn_name(rcvry_officer_prsn_id) "Credit Officer",
a.crdt_type "Loan Type",
	''{:pStartDate}'' "Start Date",
	''{:pEndDate}'' "End Date"	
FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
left outer JOIN   mcf.mcf_accounts z ON a.repayment_account_id = z.account_id
WHERE  1 = 1
  AND b.currency_id = e.crncy_id
 
AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
 AND a.status = ''Approved'' AND d.status = ''Void'' 
 AND rcvry_officer_prsn_id = COALESCE(NULLIF({:rltnshpOffcrID},-1), rcvry_officer_prsn_id)
 AND a.crdt_type = COALESCE(NULLIF(''{:crdtType}'',''%''), a.crdt_type)
 AND a.loan_product_id = COALESCE(NULLIF({:lnPrdtID},-1), a.loan_product_id)
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
  AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(d.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
 to_timestamp(coalesce(NULLIF(''{:pStartDate}'',''''),''01-Jan-2000''),''DD-Mon-YYYY'')
 AND to_timestamp(coalesce(NULLIF(''{:pEndDate}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'') 
  group by a.branch_id, d.disbmnt_date, iso_code, a.crdt_type, b.product_code||''.''||product_desc, segment8_dataload , a.cust_type,a.grp_cust_id,
a.grp_applicant_type,a.cust_id,a.repayment_account_id,z.account_id	,     a.rcvry_officer_prsn_id	,d.status	,d.last_update_date,	d.last_update_by	   
 
ORDER BY 1 asc
)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:00', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 254)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:00
UPDATE rpt.rpt_reports SET report_name = 'All Customers Contacts', report_desc = 'All Customers Contacts', rpt_sql_query = 'select '''''''' || local_id_no id_no, 
title||'' ''||first_name||'' ''||other_names||'' ''||sur_name as "Full Name                                                ", 

 
'''''''' || cntct_no_tel tel_no, 
'''''''' || cntct_no_mobl mobile_no

FROM mcf.mcf_customers_ind pnn', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:00', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 253)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:00
UPDATE rpt.rpt_reports SET report_name = 'Loan Request Per Period', report_desc = 'Loan Request Per Period', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 8 DESC) as "No.", tbl1.*
FROM (SELECT
to_char(to_timestamp(a.application_date,''YYYY-MM-DD''),''DD-Mon-YYYY'')    "Application Date",
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END "Customer Name",
mcf.get_cust_account_number(z.account_id) "Account Number",
z.account_clsfctn "CategoryY",
a.cust_type "Customer Type",	
a.status "Loan Status",  
d.status "Disbursment Status",
f.new_company	  "Business/Occupation",
a.crdt_type "Loan Type",
org.get_site_code_desc(a.branch_id::integer) branch,
round(SUM(a.loan_amount),2) "Amount Applied for",	  
a.purpose  "Purpose of Loan",	  
''{:pStartDate}'' "Start Date",
	''{:pEndDate}'' "End Date",
	org.get_site_code_desc({:branchID}::integer) "Bank Branch",
	prs.get_prsn_surname({:rltnshpOffcrID}) "Relationship Officer",
         prs.get_prsn_name(rcvry_officer_prsn_id) "Credit Officer"

FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
LEFT OUTER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
LEFT OUTER  JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
LEFT OUTER  JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
LEFT OUTER  JOIN mcf.mcf_customers_ind f	ON f.cust_id = 	a.cust_id						 
LEFT OUTER  JOIN mcf.mcf_accounts z ON a.repayment_account_id = z.account_id
WHERE 1 = 1
AND b.currency_id = e.crncy_id
 AND rcvry_officer_prsn_id = COALESCE(NULLIF({:rltnshpOffcrID},-1), rcvry_officer_prsn_id)
 AND a.crdt_type = COALESCE(NULLIF(''{:crdtType}'',''%''), a.crdt_type)
 AND a.loan_product_id = COALESCE(NULLIF({:lnPrdtID},-1), a.loan_product_id)
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
AND 
 to_timestamp(a.application_date,''YYYY-MM-DD'') BETWEEN  
 to_timestamp(coalesce(NULLIF(''{:pStartDate}'',''''),''01-Jan-2000''),''DD-Mon-YYYY'')
 AND to_timestamp(coalesce(NULLIF(''{:pEndDate}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'') 
group by a.application_date,a.branch_id, d.disbmnt_date, iso_code, a.crdt_type, b.product_code||''.''||product_desc, segment8_dataload , a.cust_type,a.grp_cust_id,
a.grp_applicant_type,a.cust_id,a.repayment_account_id,z.account_id , a.rcvry_officer_prsn_id,f.lnkd_firm_org_id,a.purpose,f.new_company,a.status,d.status

ORDER BY 1 asc
)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:00', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 252)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:01
UPDATE rpt.rpt_reports SET report_name = 'Loan Disbursements Per Period by RO', report_desc = 'CR-Loan Disbursements Per Period', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 8 DESC) as "No.", tbl1.*
FROM (SELECT

CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END    "Customer Name",	 
mcf.get_cust_account_number(z.account_id) "Loan Account Number",
mcf.get_cust_accnt_status(z.account_id)	"Account Status" , 
z.account_clsfctn  "CATEGORY",	   
org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN segment8_dataload != '''' THEN to_char(to_timestamp(segment8_dataload,''YYYY-MM-DD''),''DD-Mon-YYYY'') 
ELSE to_char(to_timestamp(d.disbmnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY'') END "Disbursement Date",
iso_code "Currency",
round(SUM(c.principal_amount),2) "Disbursed Amount",
a.crdt_type "Loan Type",
b.product_code||''.''||product_desc "Product Type",
	''{:pStartDate}'' "Start Date",
	''{:pEndDate}'' "End Date",
	org.get_site_code_desc({:branchID}::integer) "Bank Branch",

 prs.get_prsn_name((cast(z.relationship_officer as integer)))  "Relationship Officer",



         prs.get_prsn_name(rcvry_officer_prsn_id) "Credit Officer"	
FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
left outer JOIN   mcf.mcf_accounts z ON a.repayment_account_id = z.account_id
WHERE  1 = 1
  AND b.currency_id = e.crncy_id
 
AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND rcvry_officer_prsn_id = COALESCE(NULLIF({:rltnshpOffcrID},-1), rcvry_officer_prsn_id)
 AND a.crdt_type = COALESCE(NULLIF(''{:crdtType}'',''%''), a.crdt_type)
 AND a.loan_product_id = COALESCE(NULLIF({:lnPrdtID},-1), a.loan_product_id)
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
  AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(d.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
 to_timestamp(coalesce(NULLIF(''{:pStartDate}'',''''),''01-Jan-2000''),''DD-Mon-YYYY'')
 AND to_timestamp(coalesce(NULLIF(''{:pEndDate}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'') 
  group by a.branch_id, d.disbmnt_date, iso_code, a.crdt_type, b.product_code||''.''||product_desc, segment8_dataload , a.cust_type,a.grp_cust_id,
a.grp_applicant_type,a.cust_id,a.repayment_account_id,z.account_id	,     a.rcvry_officer_prsn_id				   
 
ORDER BY 1 asc
)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:01', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='251.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 251)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:01
UPDATE rpt.rpt_reports SET report_name = '(Duplicate) Loan Disbursements Per Period', report_desc = 'CR-Loan Disbursements Per Period', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 8 DESC) as "No.", tbl1.*
FROM (SELECT

CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END    "Customer Name",	 
mcf.get_cust_account_number(z.account_id) "Loan Account Number",
mcf.get_cust_accnt_status(z.account_id)	"Account Status" , 
z.account_clsfctn  "CATEGORY",	   
org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN segment8_dataload != '''' THEN to_char(to_timestamp(segment8_dataload,''YYYY-MM-DD''),''DD-Mon-YYYY'') 
ELSE to_char(to_timestamp(d.disbmnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY'') END "Disbursement Date",
iso_code "Currency",
round(SUM(c.principal_amount),2) "Disbursed Amount",
a.crdt_type "Loan Type",
b.product_code||''.''||product_desc "Product Type",
	''{:pStartDate}'' "Start Date",
	''{:pEndDate}'' "End Date",
	org.get_site_code_desc({:branchID}::integer) "Bank Branch",
	prs.get_prsn_surname({:rltnshpOffcrID}) "Relationship Officer",
         prs.get_prsn_name(rcvry_officer_prsn_id) "Credit Officer"	
FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
left outer JOIN   mcf.mcf_accounts z ON a.repayment_account_id = z.account_id
WHERE  1 = 1
  AND b.currency_id = e.crncy_id
 
AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND rcvry_officer_prsn_id = COALESCE(NULLIF({:rltnshpOffcrID},-1), rcvry_officer_prsn_id)
 AND a.crdt_type = COALESCE(NULLIF(''{:crdtType}'',''%''), a.crdt_type)
 AND a.loan_product_id = COALESCE(NULLIF({:lnPrdtID},-1), a.loan_product_id)
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
  AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(d.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
 to_timestamp(coalesce(NULLIF(''{:pStartDate}'',''''),''01-Jan-2000''),''DD-Mon-YYYY'')
 AND to_timestamp(coalesce(NULLIF(''{:pEndDate}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'') 
  group by a.branch_id, d.disbmnt_date, iso_code, a.crdt_type, b.product_code||''.''||product_desc, segment8_dataload , a.cust_type,a.grp_cust_id,
a.grp_applicant_type,a.cust_id,a.repayment_account_id,z.account_id	,     a.rcvry_officer_prsn_id				   
 
ORDER BY 1 asc
)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:01', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 250)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:01
UPDATE rpt.rpt_reports SET report_name = 'MFI FINANCIAL INCLUSION DATA - DEPOSITS', report_desc = '', rpt_sql_query = 'SELECT tbl.no "SN", 
tbl.age_grp "Age Group (yrs)", 
tbl.no_of_accts_cust "Total No Account Customers", 
tbl.no_of_accounts "Number of Accounts", 
round(COALESCE(tbl.total_deposite_amnt,0), 2)  "Total Deposite (GHS)" 
FROM (SELECT 1 "no", ''Male Above 35'' age_grp, 
(select count(a.account_title) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and a.status=''Authorized'' 
AND e.nationality = ''Ghanaian''	
and a.account_status = ''Active''
AND e.gender = ''Male'' 
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 35 ) no_of_accts_cust, 
(select count(a.account_number) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and status=''Authorized'' 
AND e.nationality = ''Ghanaian''
AND e.gender = ''Male'' 
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 35 ) no_of_accounts, 
((SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e,mcf.mcf_prdt_savings k
where  a.cust_id = e.cust_id and  z.account_id = a.account_id AND e.nationality = ''Ghanaian'' AND e.gender = ''Male'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 35 AND k.svngs_product_id = a.product_type_id 
AND z.status IN (''Paid'', ''Received'', ''Void'') AND z.trns_date <= ''{:p_as_at_date}'' AND z.trns_type IN (''DEPOSIT'' ))
-
(SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e ,mcf.mcf_prdt_savings k
where   z.account_id = a.account_id and a.cust_id = e.cust_id AND e.nationality = ''Ghanaian'' AND e.gender = ''Male'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 35 AND k.svngs_product_id = a.product_type_id 
 AND z.status IN (''Paid'', ''Received'', ''Void'')  AND z.trns_date <=  ''{:p_as_at_date}'' AND z.trns_type IN (''WITHDRAWAL''))	) total_deposite_amnt
  FROM mcf.mcf_cust_account_transactions z,  mcf.mcf_prdt_savings k,  mcf.mcf_accounts a, mcf.mcf_customers_ind e
WHERE z.account_id = a.account_id
AND k.svngs_product_id = a.product_type_id 
AND a.cust_id = e.cust_id 
AND e.nationality = ''Ghanaian''
AND e.gender = ''Male'' 	
AND a.creation_date <= ''{:p_as_at_date}''	  
	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 35 
Group by a.account_id 							   
							   
UNION
SELECT 2 "no", ''Female Above 35'' age_grp, 
(select count(a.account_title) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and a.status=''Authorized'' 
AND e.nationality = ''Ghanaian''
and a.account_status = ''Active''
AND e.gender = ''Female'' 
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 35 ) no_of_accts_cust, 
(select count(a.account_number) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and status=''Authorized'' 
AND e.nationality = ''Ghanaian''
AND e.gender = ''Female'' 
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 35 ) no_of_accounts, 
((SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e ,mcf.mcf_prdt_savings k
where  a.cust_id = e.cust_id and  z.account_id = a.account_id AND e.nationality = ''Ghanaian'' AND e.gender = ''Female'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 35 AND k.svngs_product_id = a.product_type_id 
AND z.status IN (''Paid'', ''Received'', ''Void'') AND z.trns_date <= ''{:p_as_at_date}'' AND z.trns_type IN (''DEPOSIT'' ))
-
(SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e ,mcf.mcf_prdt_savings k
where   z.account_id = a.account_id and a.cust_id = e.cust_id AND e.nationality = ''Ghanaian'' AND e.gender = ''Female'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 35 AND k.svngs_product_id = a.product_type_id 
 AND z.status IN (''Paid'', ''Received'', ''Void'')  AND z.trns_date <=  ''{:p_as_at_date}'' AND z.trns_type IN (''WITHDRAWAL''))	) total_deposite_amnt
  FROM mcf.mcf_cust_account_transactions z,  mcf.mcf_prdt_savings k,  mcf.mcf_accounts a, mcf.mcf_customers_ind e
WHERE z.account_id = a.account_id
AND k.svngs_product_id = a.product_type_id 
AND a.cust_id = e.cust_id 
AND e.nationality = ''Ghanaian''
AND e.gender = ''Female'' 		
AND a.creation_date <= ''{:p_as_at_date}''	 
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 35 
Group by a.account_id 								   
							   

UNION
SELECT 3 "no", ''Male 18 - 35'' age_grp, 
(select count(a.account_title) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and a.status=''Authorized'' 
AND e.nationality = ''Ghanaian''
and a.account_status = ''Active''
AND e.gender = ''Male'' 
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 35 ) no_of_accts_cust, 
(select count(a.account_number) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and status=''Authorized'' 
AND e.nationality = ''Ghanaian''
AND e.gender = ''Male'' 
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 35 ) no_of_accounts, 
((SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e ,mcf.mcf_prdt_savings k
where  a.cust_id = e.cust_id and  z.account_id = a.account_id AND e.nationality = ''Ghanaian'' AND e.gender = ''Male'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 35  AND k.svngs_product_id = a.product_type_id 
AND z.status IN (''Paid'', ''Received'', ''Void'') AND z.trns_date <= ''{:p_as_at_date}'' AND z.trns_type IN (''DEPOSIT'' ))
-
(SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e ,mcf.mcf_prdt_savings k
where   z.account_id = a.account_id and a.cust_id = e.cust_id AND e.nationality = ''Ghanaian'' AND e.gender = ''Male'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 35 AND k.svngs_product_id = a.product_type_id 
 AND z.status IN (''Paid'', ''Received'', ''Void'')  AND z.trns_date <=  ''{:p_as_at_date}'' AND z.trns_type IN (''WITHDRAWAL''))	) total_deposite_amnt
  FROM mcf.mcf_cust_account_transactions z,  mcf.mcf_prdt_savings k,  mcf.mcf_accounts a, mcf.mcf_customers_ind e
WHERE z.account_id = a.account_id
AND k.svngs_product_id = a.product_type_id 
AND a.cust_id = e.cust_id 
and a.status=''Authorized'' 
AND e.gender = ''Male'' 	
AND e.nationality = ''Ghanaian''
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 35 
Group by a.account_id 							   
							   
UNION
SELECT 4 "no", ''Female  18 - 35'' age_grp, 
(select count(a.account_title) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and a.status=''Authorized'' 
AND e.nationality = ''Ghanaian''
and a.account_status = ''Active''
AND e.gender = ''Female'' 
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 35) no_of_accts_cust, 
(select count(a.account_number) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and status=''Authorized'' 
AND e.nationality = ''Ghanaian''
AND e.gender = ''Female'' 
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 35 ) no_of_accounts, 
((SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e ,mcf.mcf_prdt_savings k
where  a.cust_id = e.cust_id and  z.account_id = a.account_id AND e.nationality = ''Ghanaian'' AND e.gender = ''Female'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 35 AND k.svngs_product_id = a.product_type_id 
AND z.status IN (''Paid'', ''Received'', ''Void'') AND z.trns_date <= ''{:p_as_at_date}'' AND z.trns_type IN (''DEPOSIT'' ))
-
(SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e ,mcf.mcf_prdt_savings k
where   z.account_id = a.account_id and a.cust_id = e.cust_id AND e.nationality = ''Ghanaian'' AND e.gender = ''Female'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 35 AND k.svngs_product_id = a.product_type_id 
 AND z.status IN (''Paid'', ''Received'', ''Void'')  AND z.trns_date <=  ''{:p_as_at_date}'' AND z.trns_type IN (''WITHDRAWAL''))	) total_deposite_amnt
  FROM mcf.mcf_cust_account_transactions z,  mcf.mcf_prdt_savings k,  mcf.mcf_accounts a, mcf.mcf_customers_ind e
WHERE z.account_id = a.account_id
AND k.svngs_product_id = a.product_type_id 
AND a.cust_id = e.cust_id 
AND e.nationality = ''Ghanaian''
AND e.gender = ''Female'' 
AND a.creation_date <= ''{:p_as_at_date}''			  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 35 
Group by a.account_id 


UNION
SELECT 5 "no", ''Male < 18'' age_grp, 
(select count(a.account_title) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and a.status=''Authorized'' 
AND e.nationality = ''Ghanaian''
and a.account_status = ''Active''
AND e.gender = ''Male'' 
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) <= 18) no_of_accts_cust, 
(select count(a.account_number) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and status=''Authorized'' 
AND e.nationality = ''Ghanaian''
AND e.gender = ''Male'' 
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) <= 18) no_of_accounts, 
((SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e ,mcf.mcf_prdt_savings k
where  a.cust_id = e.cust_id and  z.account_id = a.account_id AND e.nationality = ''Ghanaian'' AND e.gender = ''Male'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) <= 18 AND k.svngs_product_id = a.product_type_id 
AND z.status IN (''Paid'', ''Received'', ''Void'') AND z.trns_date <= ''{:p_as_at_date}'' AND z.trns_type IN (''DEPOSIT'' ))
-
(SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e ,mcf.mcf_prdt_savings k
where   z.account_id = a.account_id and a.cust_id = e.cust_id AND e.nationality = ''Ghanaian'' AND e.gender = ''Male'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) <= 18 AND k.svngs_product_id = a.product_type_id 
 AND z.status IN (''Paid'', ''Received'', ''Void'')  AND z.trns_date <=  ''{:p_as_at_date}'' AND z.trns_type IN (''WITHDRAWAL''))	) total_deposite_amnt
  FROM mcf.mcf_cust_account_transactions z,  mcf.mcf_prdt_savings k,  mcf.mcf_accounts a, mcf.mcf_customers_ind e
WHERE z.account_id = a.account_id
AND k.svngs_product_id = a.product_type_id 
AND a.cust_id = e.cust_id 
AND e.nationality = ''Ghanaian''
AND e.gender = ''Male'' 	
AND a.creation_date <= ''{:p_as_at_date}''
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) <= 18 
Group by a.account_id 							   
							   
UNION
SELECT 6 "no", ''Female < 18'' age_grp, 
(select count(a.account_title) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and a.status=''Authorized'' 
and a.account_status = ''Active''
AND e.gender = ''Female'' 
AND e.nationality = ''Ghanaian''
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) <= 18) no_of_accts_cust, 
(select count(a.account_number) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and status=''Authorized'' 
AND e.nationality = ''Ghanaian''
AND e.gender = ''Female'' 
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) <= 18 ) no_of_accounts, 
((SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e ,mcf.mcf_prdt_savings k
where  a.cust_id = e.cust_id and  z.account_id = a.account_id AND e.nationality = ''Ghanaian'' AND e.gender = ''Female'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) <= 18 AND k.svngs_product_id = a.product_type_id 
AND z.status IN (''Paid'', ''Received'', ''Void'') AND z.trns_date <= ''{:p_as_at_date}'' AND z.trns_type IN (''DEPOSIT'' ))
-
(SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e ,mcf.mcf_prdt_savings k
where   z.account_id = a.account_id and a.cust_id = e.cust_id AND e.nationality = ''Ghanaian'' AND e.gender = ''Female'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) <= 18 AND k.svngs_product_id = a.product_type_id 
 AND z.status IN (''Paid'', ''Received'', ''Void'')  AND z.trns_date <=  ''{:p_as_at_date}'' AND z.trns_type IN (''WITHDRAWAL''))	) total_deposite_amnt
  FROM mcf.mcf_cust_account_transactions z,  mcf.mcf_prdt_savings k,  mcf.mcf_accounts a, mcf.mcf_customers_ind e
WHERE z.account_id = a.account_id
AND k.svngs_product_id = a.product_type_id 
AND a.cust_id = e.cust_id 
AND e.gender = ''Female'' 	
AND e.nationality = ''Ghanaian''
AND a.creation_date <= ''{:p_as_at_date}''	 
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) <= 18
Group by a.account_id 
							   
UNION


SELECT 7 "no", ''Refugees & Foreigners (All ages)'' age_grp, 
(select count(a.account_title) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and a.status=''Authorized'' 
and a.account_status = ''Active''
AND e.nationality != ''Ghanaian''
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 0 ) no_of_accts_cust, 
(select count(a.account_number) from  mcf.mcf_accounts a, mcf.mcf_customers_ind e 
Where a.cust_id = e.cust_id 
and status=''Authorized'' 	
AND e.nationality != ''Ghanaian''	
AND a.creation_date <= ''{:p_as_at_date}''	  
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 0 ) no_of_accounts, 
((SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e ,mcf.mcf_prdt_savings k
where  a.cust_id = e.cust_id and  z.account_id = a.account_id AND e.nationality != ''Ghanaian'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 0 AND k.svngs_product_id = a.product_type_id 
AND z.status IN (''Paid'', ''Received'', ''Void'') AND z.trns_date <= ''{:p_as_at_date}'' AND z.trns_type IN (''DEPOSIT'' ))
-
(SELECT SUM(COALESCE(z.amount, 0))  FROM mcf.mcf_cust_account_transactions z, mcf.mcf_accounts a, mcf.mcf_customers_ind e ,mcf.mcf_prdt_savings k
where   z.account_id = a.account_id and a.cust_id = e.cust_id AND e.nationality != ''Ghanaian'' AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 0 AND k.svngs_product_id = a.product_type_id 
 AND z.status IN (''Paid'', ''Received'', ''Void'')  AND z.trns_date <=  ''{:p_as_at_date}'' AND z.trns_type IN (''WITHDRAWAL''))	) total_deposite_amnt
  FROM mcf.mcf_cust_account_transactions z,  mcf.mcf_prdt_savings k,  mcf.mcf_accounts a, mcf.mcf_customers_ind e
WHERE z.account_id = a.account_id
AND k.svngs_product_id = a.product_type_id 
AND a.cust_id = e.cust_id 
AND e.nationality != ''Ghanaian''	  
AND a.creation_date <= ''{:p_as_at_date}''	 
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 0
Group by a.account_id 

							   
order by 1)tbl 
Group by tbl.no, tbl.age_grp, tbl.no_of_accts_cust,tbl.no_of_accounts,tbl.total_deposite_amnt
order by tbl.no', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:01', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='249.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 249)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:01
UPDATE rpt.rpt_reports SET report_name = 'MFI FINANCIAL INCLUSION DATA - LOAN', report_desc = 'MFI-FINANCIAL INCLUSION DATA - LOAN', rpt_sql_query = 'SELECT tbl.no "SN", 
tbl.age_grp "Age Group (yrs)", 
tbl.no_of_borrowers "Total No. of Loan Customer", 
tbl.no_of_loans "Total No. of Loans Disbured", 
tbl.loan_amnt_disbursed "Total Amount of Loans (GHS)", 
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period" 
FROM 
(SELECT 1 "no", ''Adults Above 35'' age_grp, 
count(a.*) no_of_borrowers, 
count(b.*) no_of_loans, 
round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c, 
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND e.gender in (''Male'',''Female'')
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND round((COALESCE(mcf.calc_loan_ttl_bal(c.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING''),0) +
COALESCE(mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',
to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),0)),2)>0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 35

UNION
SELECT 2 "no", ''Above 35- Male'' age_grp, 
count(a.*) no_of_borrowers, 
count(b.*) no_of_loans, 
round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c, 
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND e.gender = ''Male''														
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND round((COALESCE(mcf.calc_loan_ttl_bal(c.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING''),0) +
COALESCE(mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',
to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),0)),2)>0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 35							   

UNION
SELECT 3 "no", ''Above 35- Female'' age_grp, 
count(a.*) no_of_borrowers, 
count(b.*) no_of_loans, 
round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c, 
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND e.gender = ''Female''														
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND round((COALESCE(mcf.calc_loan_ttl_bal(c.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING''),0) +
COALESCE(mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',
to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),0)),2)>0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 35							   

UNION							   
SELECT 4 "no", ''Youth 18 - 35'' age_grp, 
count(a.*) no_of_borrowers, 
count(b.*) no_of_loans, 
round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c, 
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND round((COALESCE(mcf.calc_loan_ttl_bal(c.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING''),0) +
COALESCE(mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',
to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),0)),2)>0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 35

UNION
SELECT 5 "no", ''18-35 Male'' age_grp, 
count(a.*) no_of_borrowers, 
count(b.*) no_of_loans, 
round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c, 
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND e.gender = ''Male''														
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND round((COALESCE(mcf.calc_loan_ttl_bal(c.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING''),0) +
COALESCE(mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',
to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),0)),2)>0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 35						   

UNION
SELECT 6 "no", ''18-35- Female'' age_grp, 
count(a.*) no_of_borrowers, 
count(b.*) no_of_loans, 
round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c, 
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND e.gender = ''Female''														
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND round((COALESCE(mcf.calc_loan_ttl_bal(c.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING''),0) +
COALESCE(mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',
to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),0)),2)>0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 35							




UNION							   
SELECT 7 "no", ''Youth Below 18'' age_grp, 
count(a.*) no_of_borrowers, 
count(b.*) no_of_loans, 
round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c, 
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND round((COALESCE(mcf.calc_loan_ttl_bal(c.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING''),0) +
COALESCE(mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',
to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),0)),2)>0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date)))<= 18

UNION
SELECT 8 "no", ''Below 18 Male'' age_grp, 
count(a.*) no_of_borrowers, 
count(b.*) no_of_loans, 
round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c, 
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND e.gender = ''Male''														
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND round((COALESCE(mcf.calc_loan_ttl_bal(c.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING''),0) +
COALESCE(mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',
to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),0)),2)>0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date)))<= 18						   

UNION
SELECT 9 "no", ''Below 18 - Female'' age_grp, 
count(a.*) no_of_borrowers, 
count(b.*) no_of_loans, 
round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c, 
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND e.gender = ''Female''														
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND round((COALESCE(mcf.calc_loan_ttl_bal(c.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING''),0) +
COALESCE(mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',
to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),0)),2)>0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date)))<= 18

UNION
SELECT 10 "no", ''Refugees & Foreigners (All ages)'' age_grp, 
count(a.*) no_of_borrowers, 
count(b.*) no_of_loans, 
round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c, 
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND e.nationality != ''Ghanaian''																		   
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND round((COALESCE(mcf.calc_loan_ttl_bal(c.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING''),0) +
COALESCE(mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',
to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),0)),2)>0
								   
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >0								   
					   
order by 1)tbl
order by 1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:01', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 248)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:01
UPDATE rpt.rpt_reports SET report_name = 'Customer Account Corrections - Daily Transactions', report_desc = '', rpt_sql_query = 'UPDATE mcf.mcf_cust_account_transactions ab1
SET unclrdbal = (select tbl1.nw_unclrdbal
                 from (select
                         a.acct_trns_id,
                         a.bulk_trns_hdr_id,
                         a.lnkd_ordr_exctn_id,
                         substr(a.trns_date, 0) dte,
                         a.amount,
                         a.trns_no,
                         a.account_id,
                         a.unclrdbal,
                         a.clrdbal,
                         COALESCE((select SUM((CASE WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR z.trns_type = ''REPAYMENT''
          THEN -1 * z.amount
                     ELSE z.amount END))
         from mcf.mcf_cust_account_transactions z
         Where z.account_id = a.account_id and z.status IN (''Paid'', ''Received'', ''Void'') 
         and z.trns_type NOT IN (''LIEN_TRNS'', ''OVERDRAFT'')
         and (CASE WHEN z.trns_date = a.trns_date
                 THEN (z.acct_trns_id < a.acct_trns_id)
                ELSE (z.trns_date < a.trns_date) END) = ''t''
        ),0)                                                     nw_unclrdbal,
        COALESCE((select SUM((CASE WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR z.trns_type = ''REPAYMENT''
        OR (z.trns_type IN (''LIEN_TRNS'', ''OVERDRAFT'') and z.status=''Paid'')
          THEN -1 * z.amount
                     ELSE z.amount END))
         from mcf.mcf_cust_account_transactions z
         Where z.account_id = a.account_id and z.status IN (''Paid'', ''Received'', ''Void'') and
               (CASE WHEN z.trns_date = a.trns_date
                 THEN (z.acct_trns_id < a.acct_trns_id)
                ELSE (z.trns_date < a.trns_date) END) = ''t''
        ) - mcf.get_cstacnt_unclrd_funds(a.account_id,
                                       to_char(to_timestamp(a.trns_date, ''YYYY-MM-DD HH24:MI:SS''),
                                               ''YYYY-MM-DD'')),0) nw_clrd
                       from mcf.mcf_cust_account_transactions a
                       where a.trns_date >= ''2018-02-03 00:00:00''
                             and a.status IN (''Paid'', ''Received'', ''Void'')) tbl1
                 WHERE (tbl1.clrdbal != tbl1.nw_clrd
                        or tbl1.unclrdbal != tbl1.nw_unclrdbal)
                       and tbl1.acct_trns_id = ab1.acct_trns_id),
  clrdbal     = (select tbl1.nw_clrd
                 from (select
                         a.acct_trns_id,
                         a.bulk_trns_hdr_id,
                         a.lnkd_ordr_exctn_id,
                         substr(a.trns_date, 0) dte,
                         a.amount,
                         a.trns_no,
                         a.account_id,
                         a.unclrdbal,
                         a.clrdbal,
                         COALESCE((select SUM((CASE WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR z.trns_type = ''REPAYMENT''
          THEN -1 * z.amount
                     ELSE z.amount END))
         from mcf.mcf_cust_account_transactions z
         Where z.account_id = a.account_id and z.status IN (''Paid'', ''Received'', ''Void'') 
         and z.trns_type NOT IN (''LIEN_TRNS'', ''OVERDRAFT'')
         and (CASE WHEN z.trns_date = a.trns_date
                 THEN (z.acct_trns_id < a.acct_trns_id)
                ELSE (z.trns_date < a.trns_date) END) = ''t''
        ) ,0)                                                    nw_unclrdbal,
        COALESCE((select SUM((CASE WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR z.trns_type = ''REPAYMENT''
        OR (z.trns_type IN (''LIEN_TRNS'', ''OVERDRAFT'') and z.status=''Paid'')
          THEN -1 * z.amount
                     ELSE z.amount END))
         from mcf.mcf_cust_account_transactions z
         Where z.account_id = a.account_id and z.status IN (''Paid'', ''Received'', ''Void'') and
               (CASE WHEN z.trns_date = a.trns_date
                 THEN (z.acct_trns_id < a.acct_trns_id)
                ELSE (z.trns_date < a.trns_date) END) = ''t''
        ) - mcf.get_cstacnt_unclrd_funds(a.account_id,
                                       to_char(to_timestamp(a.trns_date, ''YYYY-MM-DD HH24:MI:SS''),
                                               ''YYYY-MM-DD'')),0) nw_clrd
                       from mcf.mcf_cust_account_transactions a
                       where a.trns_date >= ''2018-02-03 00:00:00''
                             and a.status IN (''Paid'', ''Received'', ''Void'')
                        /*and COALESCE((select SUM(x.amount)
                                      from mcf.mcf_account_liens x
                                      where x.account_id = a.account_id
                                            and substr(x.start_date_active, 0) <= substr(a.trns_date, 0)), 0) >=
                            0*/) tbl1
                 WHERE (tbl1.clrdbal != tbl1.nw_clrd
                        or tbl1.unclrdbal != tbl1.nw_unclrdbal)
                       and tbl1.acct_trns_id = ab1.acct_trns_id)
WHERE ab1.acct_trns_id IN (select tbl1.acct_trns_id
                           from (select
                                   a.acct_trns_id,
                                   a.bulk_trns_hdr_id,
                                   a.lnkd_ordr_exctn_id,
                                   substr(a.trns_date, 0) dte,
                                   a.amount,
                                   a.trns_no,
                                   a.account_id,
                                   a.unclrdbal,
                                   a.clrdbal,
                                   COALESCE((select SUM((CASE WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR z.trns_type = ''REPAYMENT''
          THEN -1 * z.amount
                     ELSE z.amount END))
         from mcf.mcf_cust_account_transactions z
         Where z.account_id = a.account_id and z.status IN (''Paid'', ''Received'', ''Void'') 
         and z.trns_type NOT IN (''LIEN_TRNS'', ''OVERDRAFT'')
         and (CASE WHEN z.trns_date = a.trns_date
                 THEN (z.acct_trns_id < a.acct_trns_id)
                ELSE (z.trns_date < a.trns_date) END) = ''t''
        ),0)                                                     nw_unclrdbal,
        COALESCE((select SUM((CASE WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR z.trns_type = ''REPAYMENT''
        OR (z.trns_type IN (''LIEN_TRNS'', ''OVERDRAFT'') and z.status=''Paid'')
          THEN -1 * z.amount
                     ELSE z.amount END))
         from mcf.mcf_cust_account_transactions z
         Where z.account_id = a.account_id and z.status IN (''Paid'', ''Received'', ''Void'') and
               (CASE WHEN z.trns_date = a.trns_date
                 THEN (z.acct_trns_id < a.acct_trns_id)
                ELSE (z.trns_date < a.trns_date) END) = ''t''
        ) - mcf.get_cstacnt_unclrd_funds(a.account_id,
                                       to_char(to_timestamp(a.trns_date, ''YYYY-MM-DD HH24:MI:SS''),
                                               ''YYYY-MM-DD'')),0) nw_clrd
                                 from mcf.mcf_cust_account_transactions a
                                 where a.trns_date >= ''2018-02-03 00:00:00''
                                       and a.status IN (''Paid'', ''Received'', ''Void'')) tbl1
                           WHERE (tbl1.clrdbal != tbl1.nw_clrd
                                  or tbl1.unclrdbal != tbl1.nw_unclrdbal))
								  AND account_id = (SELECT ACCOUNT_ID FROM MCF.MCF_ACCOUNTS WHERE ACCOUNT_NUMBER = ''{:acct_number}'');', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:01', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 247)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:01
UPDATE rpt.rpt_reports SET report_name = 'Customer Account Corrections - Daily Bals', report_desc = '', rpt_sql_query = 'UPDATE mcf.mcf_account_daily_bals w
SET available_balance = (select tbl1.calc_bal
                         from (select
                                 a.account_id,
                                 a.account_number,
                                 a.account_title,
                                 mcf.get_cstacnt_unclrd_bals(a.account_id, to_char(now(), ''YYYY-MM-DD''))    sys_bal,
                                 (select SUM((CASE WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR
                                                        z.trns_type = ''REPAYMENT''
        OR (z.trns_type IN (''LIEN_TRNS'', ''OVERDRAFT'') and z.status=''Paid'')
                                   THEN -1 * z.amount
                                              ELSE z.amount END))
                                  from mcf.mcf_cust_account_transactions z
                                  Where z.account_id = a.account_id and z.status IN (''Paid'', ''Received'', ''Void'') and
                                        z.trns_date >= ''2018-02-02 00:00:00''
                                 )- mcf.get_cstacnt_unclrd_funds(a.account_id, to_char(now(), ''YYYY-MM-DD'')) calc_bal,
                                 mcf.get_cstacnt_lien_bals(a.account_id, to_char(now(), ''YYYY-MM-DD''))      lien_bals,
                                 mcf.get_cstacnt_avlbl_bals(a.account_id, to_char(now(), ''YYYY-MM-DD''))     avl_bals
                               FROM mcf.mcf_accounts a
                               WHERE a.account_type != ''Loan''
                                     and (select count(1)
                                          from mcf.mcf_cust_account_transactions y
                                          where y.trns_date >= ''2018-02-02 00:00:00'' and y.account_id = a.account_id) >
                                         0) tbl1
                         Where round(tbl1.avl_bals, 2) != round(tbl1.calc_bal, 2)
                               AND tbl1.account_id = w.account_id)
WHERE (select tbl1.calc_bal
       from (select
               a.account_id,
               a.account_number,
               a.account_title,
               mcf.get_cstacnt_unclrd_bals(a.account_id, to_char(now(), ''YYYY-MM-DD''))    sys_bal,
               (select SUM((CASE WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR
                                      z.trns_type = ''REPAYMENT''
        OR (z.trns_type IN (''LIEN_TRNS'', ''OVERDRAFT'') and z.status=''Paid'')
                 THEN -1 * z.amount
                            ELSE z.amount END))
                from mcf.mcf_cust_account_transactions z
                Where z.account_id = a.account_id and z.status IN (''Paid'', ''Received'', ''Void'') and
                      z.trns_date >= ''2018-02-02 00:00:00''
               )- mcf.get_cstacnt_unclrd_funds(a.account_id, to_char(now(), ''YYYY-MM-DD'')) calc_bal,
               mcf.get_cstacnt_lien_bals(a.account_id, to_char(now(), ''YYYY-MM-DD''))      lien_bals,
               mcf.get_cstacnt_avlbl_bals(a.account_id, to_char(now(), ''YYYY-MM-DD''))     avl_bals
             FROM mcf.mcf_accounts a
             WHERE a.account_type != ''Loan''
                   and (select count(1)
                        from mcf.mcf_cust_account_transactions y
                        where y.trns_date >= ''2018-02-02 00:00:00'' and y.account_id = a.account_id) >
                       0) tbl1
       Where round(tbl1.avl_bals, 2) != round(tbl1.calc_bal, 2)
             AND tbl1.account_id = w.account_id) IS NOT NULL
      AND w.bal_date = (select MAX(f.bal_date)
                        from mcf.mcf_account_daily_bals f
                        WHERE f.account_id = w.account_id)
						AND w.account_id = (SELECT ACCOUNT_ID FROM MCF.MCF_ACCOUNTS WHERE ACCOUNT_NUMBER = ''{:acct_number}'');', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:01', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 246)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:01
UPDATE rpt.rpt_reports SET report_name = 'Update Customer Account Transacions', report_desc = '', rpt_sql_query = 'SELECT * FROM mcf.mcf_investments 
WHERE trnsctn_no = ''IV-FD-0021-191224123331''
/*UPDATE mcf.mcf_cust_account_transactions 
SET CLRDBAL = {:amnt},
UNCLRDBAL = {:uncld_bal}
WHERE acct_trns_id = {:acct_trns_id}*/', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:01', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 244)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:01
UPDATE rpt.rpt_reports SET report_name = 'COT Process Run for Jan to May 2019', report_desc = 'COT Process Run for Jan to May 2019', rpt_sql_query = 'select mcf.xx_process_cot_jantomay2019({:usrID}, ''{:runMode}'', {:orgID}, {:msgID}, ''{:prcsType}'');', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:01', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 243)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:01
UPDATE rpt.rpt_reports SET report_name = 'Total Mobilization Per Relations Officer - Details', report_desc = 'CBR-Total Mobilization Per Relations Officer - Details', rpt_sql_query = 'SELECT
	prs.get_prsn_loc_id((select MAX(a.lnkd_person_id) from mcf.mcf_cust_account_transactions z, mcf.mcf_bulk_trns_hdr a where z.account_id=tbl1.account_id and a.bulk_trns_hdr_id = z.bulk_trns_hdr_id AND a.is_batch_cashless != ''1'' AND a.lnkd_person_id = COALESCE(NULLIF({:P_PERSON_ID},-1),a.lnkd_person_id)
	    AND a.branch_id = COALESCE(NULLIF({:P_BRNCH_ID},-1),a.branch_id))) staff_id,
 	 prs.get_prsn_name((select MAX(a.lnkd_person_id) from mcf.mcf_cust_account_transactions z, mcf.mcf_bulk_trns_hdr a where  z.account_id=tbl1.account_id and a.bulk_trns_hdr_id = z.bulk_trns_hdr_id AND a.is_batch_cashless != ''1'' AND a.lnkd_person_id = COALESCE(NULLIF({:P_PERSON_ID},-1),a.lnkd_person_id)
	    AND a.branch_id = COALESCE(NULLIF({:P_BRNCH_ID},-1),a.branch_id))) relations_officer,
        tbl1.accnt_num||''.''||tbl1.accnt_name account,
	tbl1.deposits_amount,
	tbl1.wthdrwl_amount,
        round((tbl1.deposits_amount - tbl1.wthdrwl_amount), 2) net_amount, 
        tbl1.trns_date,
	org.get_site_code_desc({:P_BRNCH_ID}) branch_param,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE  
 FROM  (SELECT
        b.account_id,
        mcf.get_cust_accnt_num(b.account_id)                                                        accnt_num,
        mcf.get_cust_accnt_name(b.account_id)                                                       accnt_name,
        CASE WHEN b.status IN (''Paid'', ''Received'', ''Void'') AND b.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'') THEN COALESCE(b.amount, 0) ELSE 0 END deposits_amount,
        CASE WHEN b.status IN (''Paid'', ''Received'', ''Void'') AND b.trns_type IN (''WITHDRAWAL'') THEN COALESCE(b.amount, 0) ELSE 0 END wthdrwl_amount,
        to_char(to_timestamp(b.trns_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trns_date
      FROM mcf.mcf_cust_account_transactions b 
      WHERE b.account_id IN (select z.account_id  from mcf.mcf_cust_account_transactions z, mcf.mcf_bulk_trns_hdr a where a.bulk_trns_hdr_id = z.bulk_trns_hdr_id AND a.is_batch_cashless != ''1'' AND a.lnkd_person_id = COALESCE(NULLIF({:P_PERSON_ID},-1),a.lnkd_person_id)
	    AND a.branch_id = COALESCE(NULLIF({:P_BRNCH_ID},-1),a.branch_id)
            AND z.trns_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' AND  z.trns_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59'')
            AND b.trns_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' AND  b.trns_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59''
      ORDER BY  b.trns_date)  tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:01', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '3,4,5', cols_to_average = '', cols_to_no_frmt = '3,4,5', output_type = 'HTML', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 242)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:01
UPDATE rpt.rpt_reports SET report_name = 'Load Sales Dues Attached Values', report_desc = 'Load Sales Dues Attached Values', rpt_sql_query = 'SELECT pay.invcSaveMassPayItms({:invoice_id}, {:p_storeid}, {:usrID})  "Attached Values Load Results                       ";', owner_module = 'Internal Payments', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:01', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 241)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:02
UPDATE rpt.rpt_reports SET report_name = 'Get Account Transaction ID', report_desc = '', rpt_sql_query = 'SELECT schedule_id FROM mcf.mcf_loan_schedule x
WHERE is_paid IN (''PARTIAL'',''NO'')
AND (
(round(principal_amnt,2) - round(principal_amnt_paid,2) = 0
AND shd_waive_interest = ''YES'')
OR (round(principal_amnt,2) - round(principal_amnt_paid,2) = 0
AND round(interest_amnt,2) - round(interest_amnt_paid,2) = 0
AND shd_waive_interest = ''NO''))', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:01', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 240)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:02
UPDATE rpt.rpt_reports SET report_name = 'Customer Account Categorizations', report_desc = 'CAR-Customer Account Categorizations', rpt_sql_query = 'SELECT DISTINCT ACCOUNT_TITLE "ACCOUNT TITLE", IS_DORMANT "IS DORMANT?",  account_clsfctn  "CATEGORY", ACCOUNT_NUMBER "ACCOUNT NUMBER",  org.get_site_code_desc(branch_id::integer) "BRANCH", (SELECT TO_CHAR(TO_TIMESTAMP(TRNS_DATE,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'')
		FROM MCF.MCF_CUST_ACCOUNT_TRANSACTIONS WHERE ACCOUNT_ID = X.ACCOUNT_ID  AND trns_type in (''DEPOSIT'') ORDER BY TRNS_DATE ASC LIMIT 1) "FIRST TRANSACTION DATE",
		(SELECT TRNS_TYPE
		FROM MCF.MCF_CUST_ACCOUNT_TRANSACTIONS WHERE ACCOUNT_ID = X.ACCOUNT_ID  AND trns_type in (''DEPOSIT'') ORDER BY TRNS_DATE ASC LIMIT 1) "FIRST TRANSACTION TYPE" 
FROM MCF.MCF_ACCOUNTS X WHERE ACCOUNT_TYPE IN (''Savings'',''Susu'') AND ACCOUNT_ID IS NOT NULL AND status = ''Authorized''
AND account_clsfctn = COALESCE(NULLIF(''{:ctgry}'',''''),account_clsfctn)
AND branch_id = coalesce(NULLIF({:branchID},-1),branch_id)
ORDER BY 5 ASC, account_clsfctn DESC, ACCOUNT_NUMBER ASC', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:02', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 239)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:02
UPDATE rpt.rpt_reports SET report_name = 'Load Pay Run Attached Values', report_desc = 'Load Pay Run Attached Values', rpt_sql_query = 'SELECT pay.bulkSaveMassPayVals({:p_mass_py_id},{:usrID}) "Attached Values Load Results                       ";', owner_module = 'Internal Payments', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:02', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 238)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:02
UPDATE rpt.rpt_reports SET report_name = 'Bulk Pay Run Process', report_desc = 'Bulk Pay Run Process', rpt_sql_query = 'SELECT pay.bulkmasspayrun({:p_mass_py_id}, {:msgID},{:usrID}) " Pay Run Results                       ";', owner_module = 'Internal Payments', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:02', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 237)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:02
UPDATE rpt.rpt_reports SET report_name = 'Rollback Bulk Pay Run Process', report_desc = 'Rollback Bulk Pay Run Process', rpt_sql_query = 'SELECT pay.rllbckmasspyrn({:p_mass_py_id},{:msgID},{:usrID}) "Rollback Run Results                       ";', owner_module = 'Internal Payments', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:02', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 236)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:02
UPDATE rpt.rpt_reports SET report_name = 'Pay Run Master Sheet-Web', report_desc = 'Pay Run Master Sheet-Web', rpt_sql_query = 'SELECT row_number()
           OVER (
             ORDER BY tbl1.local_id_no ) row_num,
       tbl1.person_id,
       tbl1.local_id_no,
       tbl1.fullname,
       tbl1.total_earnings,
       tbl1.total_employer_charges,
       tbl1.total_bills_charges,
       tbl1.total_deductions,
       tbl1.total_purely_informational,
       (tbl1.total_earnings - tbl1.total_bills_charges - tbl1.total_deductions) net_amount,
       pay.get_mass_py_desc({:pay_run_no})||'' (''||pay.get_mass_py_name({:pay_run_no}) || '')'' pay_desc
FROM pay.get_payment_summrys2({:orgID}, {:pay_run_no}, ''{:ordrBy}'') tbl1
ORDER BY tbl1.local_id_no;', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:02', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4,5,6,7,8,9', cols_to_average = '', cols_to_no_frmt = '4,5,6,7,8,9', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='235.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 235)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:02
UPDATE rpt.rpt_reports SET report_name = 'Pay Run Bank Crediting CSV File-Web', report_desc = 'Pay Run Bank Crediting CSV File-Web', rpt_sql_query = 'SELECT
  row_number()
  OVER (
    ORDER BY tbl1.local_id_no ) "No.",
  ''DEPOSIT''                     "Transaction Type**",
  ''Net Salary''                  "Transaction Description**",
  '''''''' || tbl2.account_number   "Account Number**",
  REPLACE(tbl2.account_name,'','','''')             "Account Title**",
  CASE WHEN portion_uom = ''Percent''
    THEN round(chartonumeric(to_char((tbl2.net_pay_portion / 100.00) *
                                     (tbl1.total_earnings - tbl1.total_bills_charges - tbl1.total_deductions),
                                     ''999999999999999999999999999999999999999999999D99'')), 2)
  ELSE net_pay_portion END      "Amount**",
  ''''''1110510064''                "GL Account Number**",
  ''Payroll Control Account  ''   "GL Account Name"
FROM pay.get_payment_summrys2({:orgID}, {:pay_run_name}, ''{:ordrBy}'') tbl1
LEFT OUTER JOIN pasn.prsn_bank_accounts tbl2 ON (tbl1.person_id = tbl2.person_id AND tbl2.net_pay_portion !=0) 
ORDER BY tbl1.local_id_no;', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:02', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '10', cols_to_average = '', cols_to_no_frmt = '2,8,10', output_type = 'CHARACTER SEPARATED FILE (CSV)', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='Comma (,)', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 234)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:02
UPDATE rpt.rpt_reports SET report_name = 'Customized Pay Slip (Sample 1)-Per Run', report_desc = 'Customized Pay Slip (Sample 1)-Per Run', rpt_sql_query = 'SELECT 
c.local_id_no id_num, 
trim(c.title || '' '' || c.first_name || '' '' || c.other_names || '' '' || c.sur_name) full_name, 
to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''Mon-YYYY'') payment_date, 
 c.person_id, 
      org.get_div_name(pasn.get_prsn_divid_of_spctype(a.person_id,''Department'')) department_name, 
      org.get_grade_name(pasn.get_prsn_grdid(a.person_id)) grade_nm,
      org.get_job_name(pasn.get_prsn_jobid(a.person_id)) job_nm,
      org.get_pos_name(pasn.get_prsn_posid(a.person_id)) pos_nm,
      COALESCE(e.id_number,''-'') ssnit_num,
      COALESCE(d.bank_name, ''-'') bank_nm,
      COALESCE(d.bank_branch,''-'') bank_brnch,
      COALESCE(d.account_number,''-'') bank_acc_num,
      pay.get_blsitem_bals(a.person_id,org.get_payitm_id(''Take Home Pay''),substring(a.paymnt_date from 1 for 10)) net_pay,
      ''{:fromDate} 00:00:00'' from_date,
      ''{:toDate} 23:59:59'' to_date,
      b.org_id,
      gst.get_pssbl_val(a.crncy_id) curr,
      a.mass_pay_id   
FROM (pay.pay_itm_trnsctns a 
LEFT OUTER JOIN org.org_pay_items b ON a.item_id = b.item_id)
LEFT OUTER JOIN prs.prsn_names_nos c on a.person_id = c.person_id 
LEFT OUTER JOIN pasn.prsn_bank_accounts d on a.person_id = d.person_id 
LEFT OUTER JOIN prs.prsn_national_ids e on a.person_id = e.person_id and e.national_id_typ=''SSNIT''
WHERE((a.pymnt_vldty_status=''VALID'' and a.src_py_trns_id<=0) and (trim(c.title || '' '' || c.sur_name || '', '' || c.first_name || '' '' || c.other_names) ilike ''%'') 
and (b.org_id ={:orgID}) 
and (a.mass_pay_id={:pay_run_id})) 
AND c.local_id_no IN ({:IDNos})
AND b.local_classfctn ilike ''%Staff Payroll Item%''
 GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18
 ORDER BY 1', owner_module = 'Generic Module', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:02', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='233.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 233)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:02
UPDATE rpt.rpt_reports SET report_name = 'Sales Invoice-POS', report_desc = 'Sales Invoice-POS', rpt_sql_query = 'SELECT a.invc_hdr_id,
       a.doc_qty, a.unit_selling_price, (a.doc_qty * a.unit_selling_price*a.rented_itm_qty) amnt,
       e.invc_number,
       e.invc_type,
       to_char(to_timestamp(e.invc_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'')                            invc_date,
       scm.get_cstmr_splr_name(e.customer_id)                                                     customer_name,
       COALESCE(f.site_name, '' '')                                                                 site_name,
       COALESCE(f.billing_address, '' '')                                                           billing_address,
       COALESCE(f.ship_to_address, '' '')                                                           ship_to_address,
       e.payment_terms,
       gst.get_pssbl_val(e.invc_curr_id)                                                          curr,
       z.rcvbls_invc_hdr_id,
       z.rcvbls_invc_type,
       tbl1a.pymnt_id,
       accb.get_pymnt_mthd_name(tbl1a.pymnt_mthd_id)||(CASE WHEN tbl1a.change_or_balance<=0 THEN ''-Full Payment'' ELSE ''-Part Payment'' END)                                              pymnt_mthd,
       tbl1a.amount_paid,
       tbl1a.change_or_balance,
       tbl1a.pymnt_remark,
       tbl1a.src_doc_typ,
       tbl1a.src_doc_id,
       tbl1a.created_by,
       to_char(to_timestamp(tbl1a.pymnt_date, ''YYYY-MM-DD HH24:MI:SS''), ''DD-Mon-YYYY HH24:MI:SS'') pymnt_date,
       z.rcvbls_invc_number,
       tbl1c.user_name, 
       e.branch_id, org.get_site_code_desc(e.branch_id) branch_nm,
       tbl1a.amount_given
FROM scm.scm_sales_invc_det a,
     inv.inv_itm_list b,
     inv.unit_of_measure c,
     inv.inv_product_categories d,
     scm.scm_sales_invc_hdr e
       LEFT OUTER JOIN scm.scm_cstmr_suplr_sites f ON (e.customer_site_id = f.cust_sup_site_id)
       LEFT OUTER JOIN accb.accb_rcvbls_invc_hdr z
                       ON (z.src_doc_hdr_id = e.invc_hdr_id AND z.src_doc_type = e.invc_type)
       LEFT OUTER JOIN accb.accb_payments tbl1a
                       ON (tbl1a.src_doc_typ = z.rcvbls_invc_type AND tbl1a.src_doc_id = z.rcvbls_invc_hdr_id)
       LEFT OUTER JOIN SEC.sec_users tbl1c ON (tbl1a.created_by = tbl1c.user_id)
WHERE (a.invc_hdr_id = e.invc_hdr_id AND a.invc_hdr_id ={:invoice_id}  AND a.invc_hdr_id
  >0
  AND a.itm_id = b.item_id AND b.base_uom_id= C.uom_id AND D.cat_id = b.category_id)
ORDER BY to_timestamp(tbl1a.pymnt_date, ''YYYY-MM-DD HH24:MI:SS'') DESC, tbl1a.pymnt_id DESC
LIMIT 1', owner_module = 'Generic Module', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:02', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='232.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 232)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:02
UPDATE rpt.rpt_reports SET report_name = 'Loan Applicatioins/Classifications Report', report_desc = 'CR - Loan Applications/Classifications Report', rpt_sql_query = 'SELECT row_number() over (order by 1) as "No.", tbl1.*
FROM (
SELECT /*mcf.get_cust_account_number(account_id) "Loan Account Number",*/
CASE WHEN c.cust_type = ''Group'' AND c.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, c.cust_id)||'' (''||mcf.get_cust_local_idno(c.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(c.cust_type, c.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(c.cust_type, c.cust_id)||'' (''||mcf.get_cust_local_idno(c.cust_id)||'')'' END "Customer Name",
CASE WHEN to_timestamp(e.creation_date,''YYYY-MM-DD'') > to_timestamp(application_date,''YYYY-MM-DD'') THEN
	to_char(to_timestamp(application_date,''YYYY-MM-DD'') - INTERVAL ''1 MONTH'',''DD-Mon-YYYY'')
ELSE
	to_char(to_timestamp(e.creation_date,''YYYY-MM-DD''),''DD-Mon-YYYY'')
END "Account Date",
account_number  "Customer Account Number",
d.product_name "Product",
to_char(to_timestamp(application_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "Application Date",
round(b.principal_amount,2) "Loan Amount",
c.status "Status",
CASE WHEN segment8_dataload != '''' THEN to_char(to_timestamp(segment8_dataload,''YYYY-MM-DD''),''DD-Mon-YYYY'') ELSE to_char(to_timestamp(a.disbmnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY'') END "Disbursement Date",
mcf.get_loan_dflt_age(c.loan_rqst_id, mcf.xx_get_start_of_day_date(1)) "Aging Status",
round((mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, mcf.xx_get_start_of_day_date(1))),2) "Amount Outstanding",
CASE WHEN {:branchID} = -1 THEN ''All Branches'' ELSE org.get_site_code_desc({:branchID}) END "Param Selected Branch",
CASE WHEN {:rltnshpOffcrID} = -1 THEN ''All Credit Officers'' ELSE prs.get_prsn_surname({:rltnshpOffcrID}) END "Param Relationship Officer"
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,  mcf.mcf_prdt_loans d, mcf.mcf_accounts e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.loan_product_id = d.loan_product_id
and c.repayment_account_id = e.account_id
AND a.status = ''Disbursed'' 
AND b.principal_amount > 0
AND c.branch_id = coalesce(NULLIF({:branchID},-1),c.branch_id)
AND c.loan_product_id = COALESCE(NULLIF({:lnPrdtID},-1), c.loan_product_id)
AND rcvry_officer_prsn_id = COALESCE(NULLIF({:rltnshpOffcrID},-1), rcvry_officer_prsn_id)
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END BETWEEN 
to_timestamp(''1901-01-01'',''YYYY-MM-DD'')
AND to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''))tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:02', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 231)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:02
UPDATE rpt.rpt_reports SET report_name = 'Auto-Correct Wrong Customer Balances', report_desc = 'Auto-Correct Wrong Customer Balances', rpt_sql_query = 'UPDATE mcf.mcf_account_daily_bals w
SET available_balance = (SELECT tbl1.calc_bal
                         FROM (SELECT a.account_id,
                                      a.account_number,
                                      a.account_title,
                                      mcf.get_cstacnt_unclrd_bals(a.account_id, to_char(now(), ''YYYY-MM-DD''))  sys_bal,
                                      (SELECT SUM((CASE
                                                     WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR
                                                          z.trns_type = ''REPAYMENT''
                                                       OR
                                                          (z.trns_type IN (''LIEN_TRNS'', ''OVERDRAFT'') AND z.status = ''Paid'')
                                                       THEN -1 * z.amount
                                                     ELSE z.amount END))
                                       FROM mcf.mcf_cust_account_transactions z
                                       WHERE z.account_id = a.account_id
                                         AND z.status IN (''Paid'', ''Received'', ''Void'')
                                         AND z.trns_date >= ''2018-02-02 00:00:00''
                                      ) -
                                      mcf.get_cstacnt_unclrd_funds(a.account_id, to_char(now(), ''YYYY-MM-DD'')) calc_bal,
                                      mcf.get_cstacnt_lien_bals(a.account_id,
                                                                to_char(now(), ''YYYY-MM-DD''))                  lien_bals,
                                      mcf.get_cstacnt_avlbl_bals(a.account_id, to_char(now(), ''YYYY-MM-DD''))   avl_bals
                               FROM mcf.mcf_accounts a
                               WHERE a.account_type != ''Loan''
                                 AND (SELECT count(1)
                                      FROM mcf.mcf_cust_account_transactions y
                                      WHERE y.trns_date >= ''2018-02-02 00:00:00''
                                        AND y.account_id = a.account_id) >
                                     0) tbl1
                         WHERE round(tbl1.avl_bals, 2) != round(tbl1.calc_bal, 2)
                           AND tbl1.account_id = w.account_id)
WHERE (SELECT tbl1.calc_bal
       FROM (SELECT a.account_id,
                    a.account_number,
                    a.account_title,
                    mcf.get_cstacnt_unclrd_bals(a.account_id, to_char(now(), ''YYYY-MM-DD''))      sys_bal,
                    (SELECT SUM((CASE
                                   WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR
                                        z.trns_type = ''REPAYMENT''
                                     OR (z.trns_type IN (''LIEN_TRNS'', ''OVERDRAFT'') AND z.status = ''Paid'')
                                     THEN -1 * z.amount
                                   ELSE z.amount END))
                     FROM mcf.mcf_cust_account_transactions z
                     WHERE z.account_id = a.account_id
                       AND z.status IN (''Paid'', ''Received'', ''Void'')
                       AND z.trns_date >= ''2018-02-02 00:00:00''
                    ) - mcf.get_cstacnt_unclrd_funds(a.account_id, to_char(now(), ''YYYY-MM-DD'')) calc_bal,
                    mcf.get_cstacnt_lien_bals(a.account_id, to_char(now(), ''YYYY-MM-DD''))        lien_bals,
                    mcf.get_cstacnt_avlbl_bals(a.account_id, to_char(now(), ''YYYY-MM-DD''))       avl_bals
             FROM mcf.mcf_accounts a
             WHERE a.account_type != ''Loan''
               AND (SELECT count(1)
                    FROM mcf.mcf_cust_account_transactions y
                    WHERE y.trns_date >= ''2018-02-02 00:00:00''
                      AND y.account_id = a.account_id) >
                   0) tbl1
       WHERE round(tbl1.avl_bals, 2) != round(tbl1.calc_bal, 2)
         AND tbl1.account_id = w.account_id) IS NOT NULL
  AND w.bal_date = (SELECT MAX(f.bal_date)
                    FROM mcf.mcf_account_daily_bals f
                    WHERE f.account_id = w.account_id);


UPDATE mcf.mcf_cust_account_transactions ab1
SET unclrdbal = (SELECT tbl1.nw_unclrdbal
                 FROM (SELECT a.acct_trns_id,
                              a.bulk_trns_hdr_id,
                              a.lnkd_ordr_exctn_id,
                              substr(a.trns_date, 0)                                           dte,
                              a.amount,
                              a.trns_no,
                              a.account_id,
                              a.unclrdbal,
                              a.clrdbal,
                              COALESCE((SELECT SUM((CASE
                                                      WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR
                                                           z.trns_type = ''REPAYMENT''
                                                        THEN -1 * z.amount
                                                      ELSE z.amount END))
                                        FROM mcf.mcf_cust_account_transactions z
                                        WHERE z.account_id = a.account_id
                                          AND z.status IN (''Paid'', ''Received'', ''Void'')
                                          AND z.trns_type NOT IN (''LIEN_TRNS'', ''OVERDRAFT'')
                                          AND (CASE
                                                 WHEN z.trns_date = a.trns_date
                                                   THEN (z.acct_trns_id < a.acct_trns_id)
                                                 ELSE (z.trns_date < a.trns_date) END) = ''t''
                                       ), 0)                                                   nw_unclrdbal,
                              COALESCE((SELECT SUM((CASE
                                                      WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR
                                                           z.trns_type = ''REPAYMENT''
                                                        OR
                                                           (z.trns_type IN (''LIEN_TRNS'', ''OVERDRAFT'') AND z.status = ''Paid'')
                                                        THEN -1 * z.amount
                                                      ELSE z.amount END))
                                        FROM mcf.mcf_cust_account_transactions z
                                        WHERE z.account_id = a.account_id
                                          AND z.status IN (''Paid'', ''Received'', ''Void'')
                                          AND (CASE
                                                 WHEN z.trns_date = a.trns_date
                                                   THEN (z.acct_trns_id < a.acct_trns_id)
                                                 ELSE (z.trns_date < a.trns_date) END) = ''t''
                                       ) - mcf.get_cstacnt_unclrd_funds(a.account_id,
                                                                        to_char(
                                                                            to_timestamp(a.trns_date, ''YYYY-MM-DD HH24:MI:SS''),
                                                                            ''YYYY-MM-DD'')), 0) nw_clrd
                       FROM mcf.mcf_cust_account_transactions a
                       WHERE a.trns_date >= ''2018-02-03 00:00:00''
                         AND a.status IN (''Paid'', ''Received'', ''Void'')) tbl1
                 WHERE (tbl1.clrdbal != tbl1.nw_clrd
                   OR tbl1.unclrdbal != tbl1.nw_unclrdbal)
                   AND tbl1.acct_trns_id = ab1.acct_trns_id),
    clrdbal   = (SELECT tbl1.nw_clrd
                 FROM (SELECT a.acct_trns_id,
                              a.bulk_trns_hdr_id,
                              a.lnkd_ordr_exctn_id,
                              substr(a.trns_date, 0)                                           dte,
                              a.amount,
                              a.trns_no,
                              a.account_id,
                              a.unclrdbal,
                              a.clrdbal,
                              COALESCE((SELECT SUM((CASE
                                                      WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR
                                                           z.trns_type = ''REPAYMENT''
                                                        THEN -1 * z.amount
                                                      ELSE z.amount END))
                                        FROM mcf.mcf_cust_account_transactions z
                                        WHERE z.account_id = a.account_id
                                          AND z.status IN (''Paid'', ''Received'', ''Void'')
                                          AND z.trns_type NOT IN (''LIEN_TRNS'', ''OVERDRAFT'')
                                          AND (CASE
                                                 WHEN z.trns_date = a.trns_date
                                                   THEN (z.acct_trns_id < a.acct_trns_id)
                                                 ELSE (z.trns_date < a.trns_date) END) = ''t''
                                       ), 0)                                                   nw_unclrdbal,
                              COALESCE((SELECT SUM((CASE
                                                      WHEN z.trns_type = ''WITHDRAWAL'' OR z.trns_type = ''INVESTMENT'' OR
                                                           z.trns_type = ''REPAYMENT''
                                                        OR
                                                           (z.trns_type IN (''LIEN_TRNS'', ''OVERDRAFT'') AND z.status = ''Paid'')
                                                        THEN -1 * z.amount
                                                      ELSE z.amount END))
                                        FROM mcf.mcf_cust_account_transactions z
                                        WHERE z.account_id = a.account_id
                                          AND z.status IN (''Paid'', ''Received'', ''Void'')
                                          AND (CASE
                                                 WHEN z.trns_date = a.trns_date
                                                   THEN (z.acct_trns_id < a.acct_trns_id)
                                                 ELSE (z.trns_date < a.trns_date) END) = ''t''
                                       ) - mcf.get_cstacnt_unclrd_funds(a.account_id,
                                                                        to_char(
                                                                            to_timestamp(a.trns_date, ''YYYY-MM-DD HH24:MI:SS''),
                                                                            ''YYYY-MM-DD'')), 0) nw_clrd
                       FROM mcf.mcf_cust_account_transactions a
                       WHERE a.trns_date >= ''2018-02-03 00:00:00''
                         AND a.status IN (''Paid'', ''Received'', ''Void'')) tbl1
                 WHERE (tbl1.clrdbal != tbl1.nw_clrd
                   OR tbl1.unclrdbal != tbl1.nw_unclrdbal)
                   AND tbl1.acct_trns_id = ab1.acct_trns_id)
WHERE ab1.acct_trns_id IN (SELECT tbl1.acct_trns_id
                           FROM (SELECT a.acct_trns_id,
                                        a.bulk_trns_hdr_id,
                                        a.lnkd_ordr_exctn_id,
                                        substr(a.trns_date, 0)                                           dte,
                                        a.amount,
                                        a.trns_no,
                                        a.account_id,
                                        a.unclrdbal,
                                        a.clrdbal,
                                        COALESCE((SELECT SUM((CASE
                                                                WHEN z.trns_type = ''WITHDRAWAL'' OR
                                                                     z.trns_type = ''INVESTMENT'' OR
                                                                     z.trns_type = ''REPAYMENT''
                                                                  THEN -1 * z.amount
                                                                ELSE z.amount END))
                                                  FROM mcf.mcf_cust_account_transactions z
                                                  WHERE z.account_id = a.account_id
                                                    AND z.status IN (''Paid'', ''Received'', ''Void'')
                                                    AND z.trns_type NOT IN (''LIEN_TRNS'', ''OVERDRAFT'')
                                                    AND (CASE
                                                           WHEN z.trns_date = a.trns_date
                                                             THEN (z.acct_trns_id < a.acct_trns_id)
                                                           ELSE (z.trns_date < a.trns_date) END) = ''t''
                                                 ), 0)                                                   nw_unclrdbal,
                                        COALESCE((SELECT SUM((CASE
                                                                WHEN z.trns_type = ''WITHDRAWAL'' OR
                                                                     z.trns_type = ''INVESTMENT'' OR
                                                                     z.trns_type = ''REPAYMENT''
                                                                  OR
                                                                     (z.trns_type IN (''LIEN_TRNS'', ''OVERDRAFT'') AND z.status = ''Paid'')
                                                                  THEN -1 * z.amount
                                                                ELSE z.amount END))
                                                  FROM mcf.mcf_cust_account_transactions z
                                                  WHERE z.account_id = a.account_id
                                                    AND z.status IN (''Paid'', ''Received'', ''Void'')
                                                    AND (CASE
                                                           WHEN z.trns_date = a.trns_date
                                                             THEN (z.acct_trns_id < a.acct_trns_id)
                                                           ELSE (z.trns_date < a.trns_date) END) = ''t''
                                                 ) - mcf.get_cstacnt_unclrd_funds(a.account_id,
                                                                                  to_char(
                                                                                      to_timestamp(a.trns_date, ''YYYY-MM-DD HH24:MI:SS''),
                                                                                      ''YYYY-MM-DD'')), 0) nw_clrd
                                 FROM mcf.mcf_cust_account_transactions a
                                 WHERE a.trns_date >= ''2018-02-03 00:00:00''
                                   AND a.status IN (''Paid'', ''Received'', ''Void'')) tbl1
                           WHERE (tbl1.clrdbal != tbl1.nw_clrd
                             OR tbl1.unclrdbal != tbl1.nw_unclrdbal));', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:02', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 230)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:03
UPDATE rpt.rpt_reports SET report_name = 'Auto-Correct Inventory Imbalances', report_desc = 'Auto-Correct Inventory Imbalances', rpt_sql_query = 'SELECT inv.correctImblnsProcess({:orgID}) " Auto-Correction Results                       ";', owner_module = 'Accounting', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:03', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 229)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:03
UPDATE rpt.rpt_reports SET report_name = 'Detailed staff report per branch/site', report_desc = 'Detailed staff report per branch/site', rpt_sql_query = 'select 
  row_number()
  OVER (
    ORDER BY a.local_id_no ASC ) AS                                                "rownum",
	a.local_id_no, 
	trim(a.title || '' '' || a.first_name || '' '' || a.other_names || '' '' || a.sur_name) full_name, 
	org.get_pos_name(pasn.get_prsn_posid(a.person_id)) pos_name, 
	prs.get_prsn_name(pasn.get_prsn_spvsrid(a.person_id)) spvsr_name,
	pasn.get_prsn_type_date(a.person_id, ''Staff'') date_employed,
	gender, marital_status, trim(cntct_no_tel||'' '' ||cntct_no_mobl) telephone,
	email, 
	org.get_site_code_desc(pasn.get_prsn_siteid(a.person_id)) branch, 
	org.get_site_code_desc({:P_BRANCH_ID}) branch_param 
from prs.prsn_names_nos a 
WHERE pasn.get_prsn_siteid(a.person_id) = COALESCE(NULLIF({:P_BRANCH_ID},-1),pasn.get_prsn_siteid(a.person_id))
AND pasn.get_prsn_type(a.person_id) IN (''Staff'')
order by a.local_id_no;', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:03', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='147.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 228)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:03
UPDATE rpt.rpt_reports SET report_name = 'Total account created over a period', report_desc = 'CAR-Total account created over a period', rpt_sql_query = 'SELECT
  a.account_number,
  a.account_title,
  to_char(to_timestamp(a.creation_date, ''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') valid_start_date,
  mcf.get_cstacnt_avlbl_bals(a.account_id, to_char(now(), ''YYYY-MM-DD'')) accnt_bals,
  prs.get_prsn_name(a.relationship_officer :: BIGINT) || '' ('' || prs.get_prsn_loc_id(a.relationship_officer :: BIGINT)
  || '')''                         relations_officer, 
	org.get_site_code_desc({:P_BRNCH_ID}) branch_param, 
	prs.get_prsn_name({:P_PERSON_ID}) || '' ('' || prs.get_prsn_loc_id({:P_PERSON_ID}) || '')'' officer_param,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE ,
mcf.get_customer_data(mcf.get_cust_type(cust_id), cust_id,''cntct_no_mobl'') contact_no 
FROM mcf.mcf_accounts a
WHERE a.account_type !=''Loan'' and a.branch_id = COALESCE(NULLIF({:P_BRNCH_ID},-1),a.branch_id)
	AND (a.relationship_officer :: BIGINT) = COALESCE(NULLIF({:P_PERSON_ID},-1),(a.relationship_officer :: BIGINT)) 
	AND a.creation_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' 
        AND a.creation_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59''
 ORDER BY a.creation_date;', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:03', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='149.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 227)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:03
UPDATE rpt.rpt_reports SET report_name = 'Purge Old Data', report_desc = 'Purge Old Data', rpt_sql_query = 'DELETE FROM accb.accb_trnsctn_batches a 
WHERE batch_status=''0'' and batch_source not ilike ''%Manual%'' 
and ((select count(1) from accb.accb_trnsctn_details y where y.batch_id=a.batch_id)<=0) and age(now(), 
to_timestamp(last_update_date,''YYYY-MM-DD HH24:MI:SS''))>= interval ''10 days'';

DELETE FROM alrt.alrt_msgs_sent WHERE age(now(), 
to_timestamp(date_sent,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''10 days'';

DELETE FROM alrt.bulk_msgs_sent WHERE age(now(), to_timestamp(date_sent,''YYYY-MM-DD HH24:MI:SS'')) >=  interval ''10 days'';

DELETE FROM rpt.rpt_report_runs WHERE age(now(), to_timestamp(last_actv_date_tme,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''10 days'';

DELETE FROM rpt.rpt_run_msgs WHERE age(now(), to_timestamp(last_update_date,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''10 days'';', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:03', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 225)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:03
UPDATE rpt.rpt_reports SET report_name = 'Profit & Loss Pie Chart', report_desc = 'Profit & Loss', rpt_sql_query = 'SELECT a.accnt_id "_", a.accnt_num "Account No.    ", a.accnt_name "Account Name.    ", 
CASE WHEN a.accnt_type = ''R'' THEN accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'',
 ''{:toDate} 23:59:59'') ELSE -1*accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'', 
''{:toDate} 23:59:59'') END "Amount   ", CASE WHEN a.accnt_type = ''R'' THEN 
accb.prnt_usr_trns_sum_rcsv(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 23:59:59'')  
ELSE -1*accb.prnt_usr_trns_sum_rcsv(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 23:59:59'') END 
"TOTALS ", a.is_prnt_accnt "_" FROM accb.accb_chart_of_accnts a WHERE ((a.org_id = {:orgID}) 
and (a.is_prnt_accnt=''0'' and accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 
23:59:59'') IS NOT NULL) and (a.accnt_type = ''R'' or a.accnt_type = ''EX'')) 
ORDER BY accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 23:59:59'') DESC LIMIT 5 OFFSET 0', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:03', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '1100,300', cols_to_count = '2,3', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PIE CHART', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 224)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:03
UPDATE rpt.rpt_reports SET report_name = 'Journal Import from Inventory Module-Web', report_desc = 'Journal Import from Inventory Module-Web', rpt_sql_query = 'SELECT accb.sendJournalsToGL(''scm.scm_gl_interface'',''5 minutes'',7,{:msgID}, {:orgID}, {:usrID});', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:03', rpt_or_sys_prcs = 'Journal Import', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 223)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:03
UPDATE rpt.rpt_reports SET report_name = 'Journal Import from Payroll Module-Web', report_desc = 'Journal Import from Payroll Module-Web', rpt_sql_query = 'SELECT accb.sendJournalsToGL(''pay.pay_gl_interface'',''5 minutes'',8,{:msgID}, {:orgID}, {:usrID});', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:03', rpt_or_sys_prcs = 'Journal Import', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 222)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:03
UPDATE rpt.rpt_reports SET report_name = 'Journal Import from Banking Module-Web', report_desc = 'Journal Import from Banking Module-Web', rpt_sql_query = 'SELECT accb.sendJournalsToGL(''mcf.mcf_gl_interface'',''5 minutes'',8,{:msgID}, {:orgID}, {:usrID});', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:03', rpt_or_sys_prcs = 'Journal Import', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 221)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:03
UPDATE rpt.rpt_reports SET report_name = 'Journal Import from VMS Module-Web', report_desc = 'Journal Import from VMS Module-Web', rpt_sql_query = 'SELECT accb.sendJournalsToGL(''vms.vms_gl_interface'',''5 minutes'',8,{:msgID}, {:orgID}, {:usrID});', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:03', rpt_or_sys_prcs = 'Journal Import', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 220)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:03
UPDATE rpt.rpt_reports SET report_name = 'Annual Loan Performance', report_desc = 'CR-Annual Loan Performance', rpt_sql_query = 'SELECT row_number() over (order by 1 DESC) as "No.", tbl2.* FROM (SELECT tbl1.branch, tbl1.customer_name, tbl1.loan_account_number, tbl1.disbursed_amount, tbl1.expected_interest, tbl1.q1_recovery, tbl1.q2_recovery, tbl1.q3_recovery, tbl1.q4_recovery,
(tbl1.q1_recovery + tbl1.q2_recovery + tbl1.q3_recovery + tbl1.q4_recovery) q1_to_q4, round((tbl1.disbursed_amount + tbl1.expected_interest - tbl1.total_payment),2) balance_unpaid, tbl1.param_relationship_officer, tbl1.param_selected_year, tbl1.param_selected_branch
FROM (SELECT org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END "customer_name",
mcf.get_cust_account_number(account_id) "loan_account_number",
round(c.principal_amount,2) "disbursed_amount",
(SELECT round(SUM(CASE WHEN shd_waive_interest = ''NO'' THEN interest_amnt WHEN shd_waive_interest = ''PARTIAL'' THEN (interest_amnt - interest_amnt_paid) END),2) FROM
mcf.mcf_loan_schedule z
WHERE z.disbmnt_det_id = c.disbmnt_det_id
AND shd_waive_interest IN (''NO'',''PARTIAL'')) "expected_interest",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Jan-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Jan-''||''{:pYear}'',''DD-Mon-YYYY'')),0) +
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Feb-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''28-Feb-''||''{:pYear}'',''DD-Mon-YYYY'')),0) +
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Mar-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Mar-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "q1_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Apr-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''30-Apr-''||''{:pYear}'',''DD-Mon-YYYY'')),0) +
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-May-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-May-''||''{:pYear}'',''DD-Mon-YYYY'')),0) +
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Jun-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''30-Jun-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "q2_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Jul-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Jul-''||''{:pYear}'',''DD-Mon-YYYY'')),0) +
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Aug-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Aug-''||''{:pYear}'',''DD-Mon-YYYY'')),0) +
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Sep-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''30-Sep-''||''{:pYear}'',''DD-Mon-YYYY'')),0)  "q3_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Oct-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Oct-''||''{:pYear}'',''DD-Mon-YYYY'')),0) +
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Nov-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''30-Nov-''||''{:pYear}'',''DD-Mon-YYYY'')),0) +
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Dec-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Dec-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "q4_recovery",
CASE WHEN {:branchID} = -1 THEN ''All Branches'' ELSE org.get_site_code_desc({:branchID}) END "param_selected_branch",
CASE WHEN {:rltnshpOffcrID} = -1 THEN ''All Credit Officers'' ELSE prs.get_prsn_surname({:rltnshpOffcrID}) END "param_relationship_officer",
(mcf.calc_loan_ttl_bal(a.loan_rqst_id::integer,''PRINCIPAL PAYMENT'') + mcf.calc_loan_ttl_bal(a.loan_rqst_id::integer,''INTEREST PAYMENT'')) "total_payment",
{:pYear} "param_selected_year"
FROM mcf.mcf_loan_request a, mcf.mcf_loan_disbursement_det c, mcf.mcf_loan_disbursement_hdr d, mcf.mcf_prdt_loans f 
WHERE c.loan_rqst_id = a.loan_rqst_id 
 AND c.disbmnt_hdr_id = d.disbmnt_hdr_id
 AND a.loan_product_id = f.loan_product_id
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
 AND rcvry_officer_prsn_id = COALESCE(NULLIF({:rltnshpOffcrID},-1), rcvry_officer_prsn_id)
 AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES'' 
 AND crdt_type = ''Loan'' 
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND (select ACCOUNT_ID from mcf.mcf_cust_account_transactions
where  (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'')  AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
and substr(trns_date,1,4) = ''{:pYear}''
LIMIT 1) > 0
ORDER BY 1 desc) tbl1)tbl2', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:03', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='218.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 218)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:03
UPDATE rpt.rpt_reports SET report_name = 'Annual Loan Performance - Per Customer', report_desc = 'CR-Annual Loan Performance - Per Customer', rpt_sql_query = 'SELECT row_number() over (order by 1 DESC) as "No.", TBL2.*, (TBL2.q1_recovery + TBL2.q2_recovery + TBL2.q3_recovery + TBL2.q4_recovery) Q1_TO_Q4
FROM (SELECT tbl1.branch, tbl1.customer_name, tbl1.loan_account_number,
sum(tbl1.jan_recovery) jan_recovery, sum(tbl1.feb_recovery) feb_recovery, sum(tbl1.mar_recovery) mar_recovery, 
(sum(tbl1.jan_recovery) + sum(tbl1.feb_recovery) + sum(tbl1.mar_recovery)) q1_recovery, 
sum(tbl1.apr_recovery) apr_recovery, sum(tbl1.may_recovery) may_recovery, sum(tbl1.jun_recovery) jun_recovery, 
(sum(tbl1.apr_recovery) + sum(tbl1.may_recovery) + sum(tbl1.jun_recovery)) q2_recovery,
sum(tbl1.jul_recovery) jul_recovery, sum(tbl1.aug_recovery) aug_recovery, sum(tbl1.sep_recovery) sep_recovery, 
(sum(tbl1.jul_recovery) + sum(tbl1.aug_recovery) + sum(tbl1.sep_recovery)) q3_recovery,
sum(tbl1.oct_recovery) oct_recovery, sum(tbl1.nov_recovery) nov_recovery, sum(tbl1.dec_recovery) dec_recovery,
(sum(tbl1.oct_recovery) + sum(tbl1.nov_recovery) + sum(tbl1.dec_recovery)) q4_recovery, tbl1.param_relationship_officer, tbl1.param_selected_year, tbl1.param_selected_branch
FROM (SELECT org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END "customer_name",
mcf.get_cust_account_number(account_id) "loan_account_number", 
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Jan-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Jan-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "jan_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Feb-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''28-Feb-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "feb_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Mar-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Mar-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "mar_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Apr-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''30-Apr-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "apr_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-May-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-May-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "may_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Jun-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''30-Jun-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "jun_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Jul-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Jul-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "jul_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Aug-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Aug-''||''{:pYear}'',''DD-Mon-YYYY'')),0)"aug_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Sep-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''30-Sep-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "sep_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Oct-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Oct-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "oct_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Nov-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''30-Nov-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "nov_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Dec-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Dec-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "dec_recovery",
CASE WHEN {:branchID} = -1 THEN ''All Branches'' ELSE org.get_site_code_desc({:branchID}) END "param_selected_branch",
CASE WHEN {:rltnshpOffcrID} = -1 THEN ''All Credit Officers'' ELSE prs.get_prsn_surname({:rltnshpOffcrID}) END "param_relationship_officer", {:pYear} "param_selected_year" /*--,a.loan_rqst_id, c.disbmnt_det_id*/
FROM mcf.mcf_loan_request a, mcf.mcf_loan_disbursement_det c, mcf.mcf_loan_disbursement_hdr d, mcf.mcf_prdt_loans f 
WHERE c.loan_rqst_id = a.loan_rqst_id 
 AND c.disbmnt_hdr_id = d.disbmnt_hdr_id
 AND a.loan_product_id = f.loan_product_id
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
 AND rcvry_officer_prsn_id = COALESCE(NULLIF({:rltnshpOffcrID},-1), rcvry_officer_prsn_id)
 AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES'' 
 AND crdt_type = ''Loan'' 
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND (select ACCOUNT_ID from mcf.mcf_cust_account_transactions
where  (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'')  AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
and substr(trns_date,1,4) = ''{:pYear}''
LIMIT 1) > 0
ORDER BY 1 desc) tbl1
GROUP BY tbl1.customer_name, tbl1.branch, tbl1.loan_account_number, tbl1.param_relationship_officer, tbl1.param_selected_year, tbl1.param_selected_branch)TBL2', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:03', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='217.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 217)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:04
UPDATE rpt.rpt_reports SET report_name = 'Annual Loan Performance - Per Credit Officer', report_desc = 'CR-Annual Loan Performance - Per Credit Officer', rpt_sql_query = 'SELECT row_number() over (order by 1 DESC) as "No.", TBL2.*, (TBL2.q1_recovery + TBL2.q2_recovery + TBL2.q3_recovery + TBL2.q4_recovery) Q1_TO_Q4
FROM (SELECT tbl1.branch, tbl1.name_of_officer, 
sum(tbl1.jan_recovery) jan_recovery, sum(tbl1.feb_recovery) feb_recovery, sum(tbl1.mar_recovery) mar_recovery, 
(sum(tbl1.jan_recovery) + sum(tbl1.feb_recovery) + sum(tbl1.mar_recovery)) q1_recovery, 
sum(tbl1.apr_recovery) apr_recovery, sum(tbl1.may_recovery) may_recovery, sum(tbl1.jun_recovery) jun_recovery, 
(sum(tbl1.apr_recovery) + sum(tbl1.may_recovery) + sum(tbl1.jun_recovery)) q2_recovery,
sum(tbl1.jul_recovery) jul_recovery, sum(tbl1.aug_recovery) aug_recovery, sum(tbl1.sep_recovery) sep_recovery, 
(sum(tbl1.jul_recovery) + sum(tbl1.aug_recovery) + sum(tbl1.sep_recovery)) q3_recovery,
sum(tbl1.oct_recovery) oct_recovery, sum(tbl1.nov_recovery) nov_recovery, sum(tbl1.dec_recovery) dec_recovery,
(sum(tbl1.oct_recovery) + sum(tbl1.nov_recovery) + sum(tbl1.dec_recovery)) q4_recovery, tbl1.param_relationship_officer, tbl1.param_selected_year, tbl1.param_selected_branch
FROM (SELECT org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN rcvry_officer_prsn_id = -1 THEN ''Unkown Officer'' ELSE prs.get_prsn_surname(rcvry_officer_prsn_id) END name_of_officer, 
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Jan-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Jan-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "jan_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Feb-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''28-Feb-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "feb_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Mar-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Mar-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "mar_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Apr-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''30-Apr-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "apr_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-May-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-May-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "may_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Jun-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''30-Jun-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "jun_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Jul-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Jul-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "jul_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Aug-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Aug-''||''{:pYear}'',''DD-Mon-YYYY'')),0)"aug_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Sep-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''30-Sep-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "sep_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Oct-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Oct-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "oct_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Nov-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''30-Nov-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "nov_recovery",
COALESCE((select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'') AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
AND (SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
OR SUBSTR(description,POSITION(''14'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''15'' in description),16) = segment1_dataload 
OR SUBSTR(description,POSITION(''16'' in description),16) = segment1_dataload
OR SUBSTR(description,POSITION(''17'' in description),16) = segment1_dataload)
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') BETWEEN 
to_timestamp(''01-Dec-''||''{:pYear}'',''DD-Mon-YYYY'') AND to_timestamp(''31-Dec-''||''{:pYear}'',''DD-Mon-YYYY'')),0) "dec_recovery",
CASE WHEN {:branchID} = -1 THEN ''All Branches'' ELSE org.get_site_code_desc({:branchID}) END "param_selected_branch",
CASE WHEN {:rltnshpOffcrID} = -1 THEN ''All Credit Officers'' ELSE prs.get_prsn_surname({:rltnshpOffcrID}) END "param_relationship_officer", {:pYear} "param_selected_year"  /*--,a.loan_rqst_id, c.disbmnt_det_id*/
FROM mcf.mcf_loan_request a, mcf.mcf_loan_disbursement_det c, mcf.mcf_loan_disbursement_hdr d, mcf.mcf_prdt_loans f 
WHERE c.loan_rqst_id = a.loan_rqst_id 
 AND c.disbmnt_hdr_id = d.disbmnt_hdr_id
 AND a.loan_product_id = f.loan_product_id
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
  AND rcvry_officer_prsn_id = COALESCE(NULLIF({:rltnshpOffcrID},-1), rcvry_officer_prsn_id)
 AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES'' 
 AND crdt_type = ''Loan'' 
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND (select ACCOUNT_ID from mcf.mcf_cust_account_transactions
where  (trns_type IN (''REPAYMENT'',''SETTLEMENT'') OR (trns_type IN (''WITHDRAWAL'')  AND sub_trns_type = ''SETTLEMENT'')
OR (trns_type IN (''WITHDRAWAL'')  AND description like ''TRANSFER- LOAN INSTALMENT DEDUCTED%''))
and amount > 0 and status IN (''Paid'',''Historic'')
AND account_id = repayment_account_id
and substr(trns_date,1,4) = ''{:pYear}''
LIMIT 1) > 0
/*AND a.loan_rqst_id in (14151,13180,12069,11172)*/
ORDER BY 1 desc) tbl1
GROUP BY tbl1.name_of_officer, tbl1.branch, tbl1.param_relationship_officer, tbl1.param_selected_year, tbl1.param_selected_branch) TBL2', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:04', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='216.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 216)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:04
UPDATE rpt.rpt_reports SET report_name = 'Correct COT Deduction Issues', report_desc = 'Correct COT Deduction Issues', rpt_sql_query = 'select mcf.mcf_fix_cob_deduction_issue({:usrID}, '''', {:orgID});', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:04', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 215)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:04
UPDATE rpt.rpt_reports SET report_name = 'Refresh Materialized Views', report_desc = 'Refresh Materialized Views', rpt_sql_query = 'REFRESH MATERIALIZED VIEW CONCURRENTLY accb.accb_budget_detail_mv;', owner_module = 'System Administration', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:04', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 214)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:04
UPDATE rpt.rpt_reports SET report_name = 'Auto-Load all Budgetable Accounts', report_desc = 'Auto-Load all Budgetable Accounts', rpt_sql_query = 'SELECT  accb.autoLoadBdgtTmp({:p_bdgtID},''{:p_startDte} 00:00:00'',''{:p_endDte} 23:59:59'',''{:p_periodTyp}'',{:orgID},{:usrID}) "Budget Aut-Load Results                       ";', owner_module = 'Accounting', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:04', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='DELETE FROM accb.accb_budget_details WHERE limit_amount=0;', pst_rpt_sql_query='REFRESH MATERIALIZED VIEW CONCURRENTLY accb.accb_budget_detail_mv' WHERE (report_id = 213)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:04
UPDATE rpt.rpt_reports SET report_name = 'Void Bulk Invoice Payments', report_desc = 'Void Bulk Invoice Payments', rpt_sql_query = 'SELECT  accb.batch_invoice_payments(TRUE,{:p_batch_id},{:usrID},to_char(now(),''YYYY-MM-DD HH24:MI:SS''),{:orgID},{:msgID}) " Payment Batch Reversal Results                       ";', owner_module = 'Accounting', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:04', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 212)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:04
UPDATE rpt.rpt_reports SET report_name = 'Bulk Invoice Payments', report_desc = 'Bulk Invoice Payments', rpt_sql_query = 'SELECT  accb.batch_invoice_payments(FALSE,{:p_batch_id},{:usrID},to_char(now(),''YYYY-MM-DD HH24:MI:SS''),{:orgID},{:msgID}) " Payment Batch Processing Results                       ";', owner_module = 'Accounting', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:04', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 211)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:04
UPDATE rpt.rpt_reports SET report_name = 'Accounts without Signatories', report_desc = 'Accounts without Signatories', rpt_sql_query = 'SELECT row_number() over (order by 1 ) as "No.", tbl1.* from (SELECT a.account_title, a.account_number, org.get_site_code_desc(a.branch_id::integer) branch, a.cust_type, a.account_id 
from mcf.mcf_accounts a, mcf.mcf_account_signatories b
where a.account_id = b.account_id
and b.person_cust_id = (SELECT cust_id FROM MCF.MCF_CUSTOMERS A
WHERE ID_NO = ''0000000001'')
and account_type not in (''Loan'',''Investment'')
and source_type = ''Individual Customers''
and a.branch_id = coalesce(nullif({:p_branch_id},-1),a.branch_id)
order by 3 asc, 2)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:04', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 210)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:04
UPDATE rpt.rpt_reports SET report_name = 'Accounts with Unlinked Customers', report_desc = 'Accounts with Unlinked Customers', rpt_sql_query = 'SELECT row_number() over (order by 1 ) as "No.", tbl1.* from (select b.account_title, b.account_number, org.get_site_code_desc(b.branch_id::integer) branch, b.cust_type, b.account_id 
from mcf.mcf_accounts b
where mcf.get_customer_name(b.cust_type, b.cust_id) is null
and b.branch_id = coalesce(nullif({:p_branch_id},-1),b.branch_id)
order by 3 asc, 2)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:04', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 209)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:04
UPDATE rpt.rpt_reports SET report_name = 'Group Loan Repayment Collection Sheet', report_desc = 'CR-Group Loan Repayment Collection Sheet', rpt_sql_query = 'SELECT distinct mcf.get_customer_name_LastNameFirst(''Individual'', d.cust_id)||''(''||mcf.get_cust_local_idno(d.cust_id)||'')'' "Customer Name", 
a.account_number "Account Number", '''' "Loan Amount", '''' "Savings Amount", '''' "Total", '''' "Signature", 
CASE WHEN {:p_grp_id} = -1 THEN ''All Groups'' ELSE c.cust_name END "Group Name"/*, account_title*/
FROM mcf.mcf_accounts a, mcf.mcf_customers b, mcf.mcf_customers_corp c, mcf.mcf_group_members d
WHERE a.cust_id = d.cust_id
and b.cust_id = c.cust_id
AND c.cust_id = d.grp_cust_id 
and b.cust_type = ''Group''
and c.cust_id = COALESCE(NULLIF({:p_grp_id},-1),c.cust_id )
AND a.account_type in (''Savings'',''Current'')
and to_char(now(),''YYYY-MM-DD'') BETWEEN start_date_active and end_date_active', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:04', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 207)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:04
UPDATE rpt.rpt_reports SET report_name = 'Customer Account Balances', report_desc = 'CAR-Customer Account Balances', rpt_sql_query = 'select tbl1.* FROM (SELECT distinct account_title||''(''||mcf.get_cust_local_idno(a.cust_id)||'')'' "Customer Name", account_number "Account Number", round(mcf.get_cstacnt_avlbl_bals(
    a.account_id,
    COALESCE(NULLIF('''',''''),mcf.xx_get_start_of_day_date(1))),2) "Account Balance", account_type "Type of Account", mcf.get_customer_data(
    cust_type,
    cust_id,
    ''cntct_no_mobl'') "Customer Telephone Number", CASE WHEN {:p_branch_id} = -1 THEN ''All Branches'' ELSE org.get_site_code_desc({:p_branch_id}) END "Branch"
FROM mcf.mcf_accounts a 
WHERE 1 = 1
AND account_type in (''Savings'',''Susu'',''Current'',''Investment'')
AND a.branch_id = COALESCE(NULLIF({:p_branch_id},-1),a.branch_id)
ORDER BY 2)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:04', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '2', cols_to_average = '', cols_to_no_frmt = '2', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 206)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:05
UPDATE rpt.rpt_reports SET report_name = 'Customer Account Liens', report_desc = 'CAR-Customer Account Liens', rpt_sql_query = 'select tbl1.* FROM (SELECT distinct account_title "Customer Name", account_number "Account Number", 
c.product_name "Loan Type", d.amount "Lien Amount", CASE WHEN {:p_branch_id} = -1 THEN ''All Branches'' ELSE org.get_site_code_desc({:p_branch_id}) END "Branch", 
b.loan_amount "Loan Amount", mcf.get_cstacnt_lien_bals(
    a.account_id,
    COALESCE(NULLIF('''',''''),mcf.xx_get_start_of_day_date(1))) Account_Lien_Balance, b.trnsctn_id,  a.account_id
FROM mcf.mcf_accounts a inner join mcf.mcf_loan_request b ON a.account_id = b.repayment_account_id
 INNER JOIN mcf.mcf_prdt_loans c ON b.loan_product_id = c.loan_product_id
 inner JOIN mcf.mcf_account_liens d ON a.account_id = d.account_id
 AND d.loan_rqst_id = b.loan_rqst_id
AND lien_status = ''Active''
AND a.branch_id = COALESCE(NULLIF({:p_branch_id},-1),a.branch_id)
ORDER BY 2)tbl1
WHERE tbl1.Account_Lien_Balance > 0', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:05', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '3,5', cols_to_average = '', cols_to_no_frmt = '3,5', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 205)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:05
UPDATE rpt.rpt_reports SET report_name = 'Post GL Transaction Batches-Web', report_desc = 'Post GL Transaction Batches-Web', rpt_sql_query = 'SELECT accb.post_gl_trns({:p_batch_id},{:usrID},to_char(now(),''YYYY-MM-DD HH24:MI:SS''),{:orgID},{:msgID},''1'') " Batch Posting Results                       ";', owner_module = 'Accounting', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:05', rpt_or_sys_prcs = 'Posting of GL Trns. Batches', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 204)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:05
UPDATE rpt.rpt_reports SET report_name = 'Auto-Correct Gl Imbalances', report_desc = 'Auto-Correct Gl Imbalances', rpt_sql_query = 'SELECT accb.correctImblnsProcess(''{:p_asAtDate}'', {:orgID}, {:usrID}) " Auto-Correction Results                       ";', owner_module = 'Accounting', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:05', rpt_or_sys_prcs = 'Posting of GL Trns. Batches', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 203)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:05
UPDATE rpt.rpt_reports SET report_name = 'Correct Weekly Loan Schedule', report_desc = 'Correct Weekly Loan Schedule', rpt_sql_query = 'SELECT mcf.fix_weekly_loan_schedule({:p_account_id});', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:05', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 201)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:05
UPDATE rpt.rpt_reports SET report_name = 'Loan Portfolio Per Credit Officer', report_desc = 'CR-Loan Portfolio Per Credit Officer', rpt_sql_query = 'SELECT row_number() over (order by 1 DESC) as "No.", tbl.*, (tbl.prncpl_bal + intrst_bal) "Total Balance" FROM
(SELECT COALESCE(d.sector_desc,''***NO SECTOR***'') sector_major, COALESCE(e.sector_desc,''***NO SECTOR***'') sector_minor,
CASE WHEN c.cust_type = ''Group'' AND c.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, c.cust_id)||'' (''||mcf.get_cust_local_idno(c.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(c.cust_type, c.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(c.cust_type, c.cust_id)||'' (''||mcf.get_cust_local_idno(c.cust_id)||'')'' END "Customer Name",
mcf.get_cust_account_number(account_id) "Loan Account Number",
round(coalesce(b.principal_amount,0),2) "Principal Amount",
round((mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) prncpl_bal, 
round((mcf.get_loan_ttl_interest_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) intrst_bal, 
CASE WHEN segment8_dataload != '''' THEN to_char(to_timestamp(segment8_dataload,''YYYY-MM-DD''),''DD-Mon-YYYY'') ELSE to_char(to_timestamp(a.disbmnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY'') END "Disbursement Date",
to_char(to_timestamp(b.repay_end_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'')   "Repay End Date",
CASE WHEN ''{:p_as_at_date}'' = '''' THEN mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING AS AT'',to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) ELSE mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING AS AT'',to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'')) END "Principal In Arrears",
CASE WHEN {:rltnshpOffcrID} = -1 THEN ''All Credit Officers'' ELSE prs.get_prsn_surname({:rltnshpOffcrID}) END "Param Relationship Officer",
CASE WHEN {:branchID} = -1 THEN ''All Branches'' ELSE org.get_site_code_desc({:branchID}::integer) END "Param Branch",
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period",
c.loan_rqst_id
FROM mcf.mcf_loan_disbursement_hdr a LEFT OUTER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_hdr_id = b.disbmnt_hdr_id
LEFT OUTER JOIN mcf.mcf_loan_request c ON b.loan_rqst_id = c.loan_rqst_id
LEFT OUTER JOIN mcf.mcf_loan_sectors_major d ON c.sector_clsfctn_major_id = d.major_sector_id
LEFT OUTER JOIN mcf.mcf_loan_sectors_minor e ON c.sector_clsfctn_minor_id = e.minor_sector_id  
WHERE 1 = 1
AND d.major_sector_id = e.major_sector_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND rcvry_officer_prsn_id = COALESCE(NULLIF({:rltnshpOffcrID},-1), rcvry_officer_prsn_id)
AND c.branch_id = COALESCE(NULLIF({:branchID},-1),c.branch_id)
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<= to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
order by 1,2)tbl', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:05', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='200.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 200)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:05
UPDATE rpt.rpt_reports SET report_name = 'Investment Certificate', report_desc = 'CR-Investment Certificate', rpt_sql_query = 'SELECT invstmnt_id, b.account_number "Reference Number", (select account_number from mcf.mcf_accounts where account_id = pymnt_dbt_acct_id) "Account Number",
        mcf.get_customer_name(a.cust_type, a.cust_id) "Account Name", to_char(to_timestamp(start_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "Investment Date", 
        amount "Amount Invested", 
        tenor||'' ''||tenor_type||''(s)'' "Duration", interest_rate||''%'' "Annual Interest Rate", 
        trim(initcap(replace(replace(replace(replace(replace(cash_words(amount::money),''dollars'',''ghana cedis''),''cents'',''peswas''),''and zero peswas'',''''),''hundred'',''hundred and''),''and and'',''and'')))||'' Only'' "Amount In Words", 
	to_char(to_timestamp(end_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "Maturity Date", maturity_value "Total Upon Maturity",
	trim(initcap(replace(replace(replace(replace(replace(cash_words(maturity_value::money),''dollars'',''ghana cedis''),''cents'',''peswas''),''and zero peswas'',''''),''hundred'',''hundred and''),''and and'',''and'')))||'' Only'' "Maturity Amount In Words",
        shd_rollover, rollover_type,  ifo_name, ifo_contact, invstmnt_status
       FROM mcf.mcf_investments a, mcf.mcf_accounts b WHERE a.account_id = b.account_id
       AND invstmnt_id = {:invstmnt_id}
       order by 1 desc', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:05', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='199.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 199)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:05
UPDATE rpt.rpt_reports SET report_name = 'Loan Portfolio By BoG Sectors - Detail', report_desc = 'CR-Loan Portfolio By BoG Sectors - Detail', rpt_sql_query = 'SELECT row_number() over (order by 1 DESC) as "No.", tbl.*, (tbl.prncpl_bal + intrst_bal) "Total Balance" FROM
(SELECT COALESCE(d.sector_desc,''***NO SECTOR***'') sector_major, COALESCE(e.sector_desc,''***NO SECTOR***'') sector_minor,
CASE WHEN c.cust_type = ''Group'' AND c.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, c.cust_id)||'' (''||mcf.get_cust_local_idno(c.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(c.cust_type, c.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(c.cust_type, c.cust_id)||'' (''||mcf.get_cust_local_idno(c.cust_id)||'')'' END "Customer Name",
mcf.get_cust_account_number(account_id) "Loan Account Number",
round(coalesce(b.principal_amount,0),2) "Principal Amount",
round((mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) prncpl_bal, 
round((mcf.get_loan_ttl_interest_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) intrst_bal, 
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period",
c.loan_rqst_id
FROM mcf.mcf_loan_disbursement_hdr a LEFT OUTER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_hdr_id = b.disbmnt_hdr_id
LEFT OUTER JOIN mcf.mcf_loan_request c ON b.loan_rqst_id = c.loan_rqst_id
LEFT OUTER JOIN mcf.mcf_loan_sectors_major d ON c.sector_clsfctn_major_id = d.major_sector_id
LEFT OUTER JOIN mcf.mcf_loan_sectors_minor e ON c.sector_clsfctn_minor_id = e.minor_sector_id  
WHERE 1 = 1
AND d.major_sector_id = e.major_sector_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<= to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
order by 1,2)tbl', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:05', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='198.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 198)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:05
UPDATE rpt.rpt_reports SET report_name = 'Loan Portfolio By BoG Sectors - Summary', report_desc = 'CR-Loan Portfolio By BoG Sectors - Summary', rpt_sql_query = 'SELECT row_number() over (order by 1 DESC) as "No.", tbl2.sector_major "MAJOR SECTOR", tbl2.sector_minor "MINOR SECTOR", 
tbl2.principal_amount "PRINCIPAL DISBURSED", tbl2.prncpl_bal "PRINCIPAL BALANCE", tbl2.intrst_bal "INTEREST BALANCE",   (tbl2.prncpl_bal + tbl2.intrst_bal) "TOTAL", tbl2.cust_count "NO. OF CUSTOMERS",
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period" FROM 
(SELECT tbl.sector_major, tbl.sector_minor, sum(tbl.principal_amount) principal_amount, sum(tbl.prncpl_bal) prncpl_bal, sum(tbl.intrst_bal) intrst_bal, count(tbl.*) cust_count
FROM
(SELECT COALESCE(d.sector_desc,''***NO SECTOR***'') sector_major, COALESCE(e.sector_desc,''***NO SECTOR***'') sector_minor, 
round(coalesce(b.principal_amount,0),2) principal_amount,
round((mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) prncpl_bal, 
round((mcf.get_loan_ttl_interest_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) intrst_bal, c.loan_rqst_id
FROM mcf.mcf_loan_disbursement_hdr a LEFT OUTER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_hdr_id = b.disbmnt_hdr_id
LEFT OUTER JOIN mcf.mcf_loan_request c ON b.loan_rqst_id = c.loan_rqst_id
LEFT OUTER JOIN mcf.mcf_loan_sectors_major d ON c.sector_clsfctn_major_id = d.major_sector_id
LEFT OUTER JOIN mcf.mcf_loan_sectors_minor e ON c.sector_clsfctn_minor_id = e.minor_sector_id 
WHERE 1 = 1
AND d.major_sector_id = e.major_sector_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<= to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
order by 1, 2)tbl
GROUP BY tbl.sector_major, tbl.sector_minor
order by 1)tbl2
order by 1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:05', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='197.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 197)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:05
UPDATE rpt.rpt_reports SET report_name = 'Non-Performing Loans By BoG Sector - Detail', report_desc = 'CR-Non-Performing Loans By BoG Sector - Detail', rpt_sql_query = 'SELECT row_number() over (order by 1 DESC) as "No.", tbl.*, (tbl.prncpl_nonprfmng + intrst_nonprfmng) "Total Non-Performing" FROM
(SELECT COALESCE(d.sector_desc,''***NO SECTOR***'') sector_desc,
CASE WHEN c.cust_type = ''Group'' AND c.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, c.cust_id)||'' (''||mcf.get_cust_local_idno(c.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(c.cust_type, c.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(c.cust_type, c.cust_id)||'' (''||mcf.get_cust_local_idno(c.cust_id)||'')'' END "Customer Name",
mcf.get_cust_account_number(account_id) "Loan Account Number",
round(coalesce(b.principal_amount,0),2) "Principal Amount",
round((mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) prncpl_nonprfmng, 
round((mcf.get_loan_ttl_interest_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) intrst_nonprfmng, 
mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) loan_age,
CASE WHEN c.cust_type = ''Group'' AND c.grp_cust_id > 0 THEN mcf.get_customer_data(grp_applicant_type, c.cust_id, ''cntct_no_mobl'') 
ELSE
mcf.get_customer_data(c.cust_type, c.cust_id, ''cntct_no_mobl'') END contact_no, 
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period",
c.loan_rqst_id
FROM mcf.mcf_loan_disbursement_hdr a LEFT OUTER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_hdr_id = b.disbmnt_hdr_id
LEFT OUTER JOIN mcf.mcf_loan_request c ON b.loan_rqst_id = c.loan_rqst_id
LEFT OUTER JOIN mcf.mcf_loan_sectors_major d ON c.sector_clsfctn_major_id = d.major_sector_id
WHERE 1 = 1
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<= to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) >= 90 
order by 1)tbl', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:05', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='196.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 196)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:05
UPDATE rpt.rpt_reports SET report_name = 'Non-Performing Loans By BoG Sector - Summary', report_desc = 'CR-Non-Performing Loans By BoG Sector - Summary', rpt_sql_query = 'SELECT row_number() over (order by 1 DESC) as "No.", tbl2.sector_desc "LOAN SECTOR", tbl2.principal_amount "PRINCIPAL DISBURSED", tbl2.prncpl_nonprfmng "PRINCIPAL DELINQUENT", tbl2.intrst_nonprfmng "INTEREST DELINQUENT",   (tbl2.prncpl_nonprfmng + tbl2.intrst_nonprfmng) "TOTAL", tbl2.cust_count "NO. OF CUSTOMERS",
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period" FROM 
(SELECT tbl.sector_desc, sum(principal_amount) principal_amount, sum(tbl.prncpl_nonprfmng) prncpl_nonprfmng, sum(tbl.intrst_nonprfmng) intrst_nonprfmng, count(tbl.*) cust_count
FROM
(SELECT COALESCE(d.sector_desc,''***NO SECTOR***'') sector_desc, round(coalesce(b.principal_amount,0),2) principal_amount, round((mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) prncpl_nonprfmng, 
round((mcf.get_loan_ttl_interest_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) intrst_nonprfmng, c.loan_rqst_id
FROM mcf.mcf_loan_disbursement_hdr a LEFT OUTER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_hdr_id = b.disbmnt_hdr_id
LEFT OUTER JOIN mcf.mcf_loan_request c ON b.loan_rqst_id = c.loan_rqst_id
LEFT OUTER JOIN mcf.mcf_loan_sectors_major d ON c.sector_clsfctn_major_id = d.major_sector_id
WHERE 1 = 1
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<= to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) >= 90 
order by 1)tbl
GROUP BY tbl.sector_desc
order by 1)tbl2
order by 1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:05', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='195.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 195)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:06
UPDATE rpt.rpt_reports SET report_name = 'Adhoc Loan Deduction', report_desc = 'Adhoc Loan Deduction', rpt_sql_query = 'SELECT mcf.xx_adhoc_loan_deductions({:usrID}, {:p_account_id}, {:orgID});', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:06', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 194)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:06
UPDATE rpt.rpt_reports SET report_name = 'Aging Analysis Breakdown', report_desc = 'BOG-Aging Analysis Breakdown', rpt_sql_query = 'SELECT row_number() over (order by 1) as "No.", tbl1.*
FROM (
SELECT mcf.get_cust_account_number(account_id) "Loan Account Number",
CASE WHEN c.cust_type = ''Group'' AND c.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, c.cust_id)||'' (''||mcf.get_cust_local_idno(c.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(c.cust_type, c.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(c.cust_type, c.cust_id)||'' (''||mcf.get_cust_local_idno(c.cust_id)||'')'' END "Customer Name",
(select v.product_name from mcf.mcf_prdt_loans v where v.loan_product_Id = c.loan_product_id) "product name",
b.principal_amount "Disbursed Amount",
round((mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, ''{:p_as_at_date}'')),2) ttl_amnt_outsndng,
mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) dflt_age_in_days,
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period",
to_char(to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''), ''1901-01-01''),''YYYY-MM-DD''),''DD-Mon-YYYY'')  "Param Start Date",
to_char(to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param End Date",
CASE WHEN {:branchID} = -1 THEN ''All Branches'' ELSE org.get_site_code_desc({:branchID}) END "Selected Branch",
CASE WHEN ''{:p_loan_class}'' = ''%'' THEN ''All Classifications'' ELSE ''{:p_loan_class}'' END "Loan Classification"
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c, mcf.mcf_prdt_loans v
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND v.loan_product_Id = c.loan_product_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND c.branch_id = coalesce(NULLIF({:branchID},-1),c.branch_id)
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''1901-01-01''),''YYYY-MM-DD'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND CASE WHEN ''{:p_loan_class}'' = ''Current Loans'' THEN mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) = 0 
WHEN ''{:p_loan_class}'' = ''Up to 30 days'' THEN dflt_age_in_days BETWEEN 1 AND 30 
WHEN ''{:p_loan_class}'' = ''31 days and less than 91 days'' THEN mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) BETWEEN 31 AND 90 
WHEN ''{:p_loan_class}'' = ''91 days and less than 121 days'' THEN mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) BETWEEN 91 AND 120 
WHEN ''{:p_loan_class}'' = ''121 days and less than 151 days'' THEN mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) BETWEEN 121 AND 150
WHEN ''{:p_loan_class}'' = ''151 days and above'' THEN mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) >= 151
ELSE mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) >= 0 END)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:06', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='193.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 193)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:06
UPDATE rpt.rpt_reports SET report_name = 'Customer Account Status by Transaction Count', report_desc = 'CAR-Most Active Accounts by Transaction Count', rpt_sql_query = 'select account_number, 
  account_title,
 CASE WHEN trns_count1 > 0 THEN ''Active''
WHEN trns_count2 > 0 THEN ''Inactive''
ELSE ''Dormant'' END account_status,
  brch_nm,
trns_count1 "Last 6 Months",
trns_count2 "Last 12 Months",
trns_count3 "Last 18 Months", 
  org.get_site_code_desc({:P_BRANCH_ID}) branch_param,
 ''{:P_ACNT_STATUS}'' status_param
from (select a.account_id, account_number, account_title, account_status, account_status_reason,
status, is_dormant,a.branch_id, org.get_site_code_desc(a.branch_id::INTEGER) brch_nm, 
(select COUNT(z.acct_trns_id) from mcf.mcf_cust_account_transactions z Where z.account_id=a.account_id and z.status IN (''Paid'',''Received'',''Void'',''Historic'')  
 and z.trns_date>=to_char(now()-interval ''6 month'', ''YYYY-MM-DD 00:00:00'') 
 and z.trns_date<=to_char(now(), ''YYYY-MM-DD 23:59:59'')) trns_count1,
(select COUNT(z.acct_trns_id) from mcf.mcf_cust_account_transactions z Where z.account_id=a.account_id and z.status IN (''Paid'',''Received'',''Void'',''Historic'') 
 and z.trns_date>=to_char(now()-interval ''12 month'', ''YYYY-MM-DD 00:00:00'') 
 and z.trns_date<=to_char(now(), ''YYYY-MM-DD 23:59:59'')) trns_count2,
(select COUNT(z.acct_trns_id) from mcf.mcf_cust_account_transactions z Where z.account_id=a.account_id and z.status IN (''Paid'',''Received'',''Void'',''Historic'') 
 and z.trns_date>=to_char(now()-interval ''18 month'', ''YYYY-MM-DD 00:00:00'') 
 and z.trns_date<=to_char(now(), ''YYYY-MM-DD 23:59:59'')) trns_count3 
 FROM mcf.mcf_accounts a
 WHERE a.branch_id = COALESCE(NULLIF({:P_BRANCH_ID},-1),a.branch_id) and a.account_type !=''Loan''
 and status=''Authorized''
 ORDER BY 10 DESC) tbl1
WHERE 1=1 
and (CASE WHEN trns_count1 > 0 THEN ''Active''
WHEN trns_count2 > 0 THEN ''Inactive''
ELSE ''Dormant'' END) ilike ''{:P_ACNT_STATUS}'';', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:06', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='192.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 192)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:06
UPDATE rpt.rpt_reports SET report_name = 'Pay Run Bank Crediting CSV File', report_desc = 'Pay Run Bank Crediting CSV File', rpt_sql_query = 'SELECT
  row_number()
  OVER (
    ORDER BY tbl1.local_id_no ) "No.",
  ''DEPOSIT''                     "Transaction Type**",
  ''Net Salary''                  "Transaction Description**",
  '''''''' || tbl2.account_number   "Account Number**",
  REPLACE(tbl2.account_name,'','','''')             "Account Title**",
  CASE WHEN portion_uom = ''Percent''
    THEN round(chartonumeric(to_char((tbl2.net_pay_portion / 100.00) *
                                     (tbl1.total_earnings - tbl1.total_bills_charges - tbl1.total_deductions),
                                     ''999999999999999999999999999999999999999999999D99'')), 2)
  ELSE net_pay_portion END      "Amount**",
  ''''''1110510064''                "GL Account Number**",
  ''Payroll Control Account  ''   "GL Account Name"
FROM pay.get_payment_summrys({:orgID}, ''{:pay_run_name}'', ''{:ordrBy}'') tbl1
LEFT OUTER JOIN pasn.prsn_bank_accounts tbl2 ON (tbl1.person_id = tbl2.person_id AND tbl2.net_pay_portion !=0)
ORDER BY tbl1.local_id_no;', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:06', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '10', cols_to_average = '', cols_to_no_frmt = '2,8,10', output_type = 'CHARACTER SEPARATED FILE (CSV)', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='Comma (,)', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 191)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:06
UPDATE rpt.rpt_reports SET report_name = 'Pay Run Master Sheet-Per Run', report_desc = 'Pay Run Master Sheet-Per Run', rpt_sql_query = 'SELECT tbl1.* FROM 
(SELECT 
c.local_id_no id_num, 
trim(c.title || '' '' || 
c.first_name || '' '' || c.other_names || '' '' || c.sur_name) full_name, 
substring(b.local_classfctn, position(''.'' in b.local_classfctn)+1)
item_name, SUM(a.amount_paid) amnt_paid, 
to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') 
payment_date, b.pay_run_priority 
FROM (pay.pay_itm_trnsctns a 
LEFT OUTER JOIN org.org_pay_items b ON a.item_id = 
b.item_id) 
LEFT OUTER JOIN prs.prsn_names_nos c on a.person_id = c.person_id 

WHERE((a.pymnt_vldty_status=''VALID'' and a.src_py_trns_id<=0) 
and pay.get_ms_pay_name(a.mass_pay_id) ilike ''{:pay_run_no}'') 

AND c.local_id_no IN ({:IDNos}) 
AND b.local_classfctn ilike ''%Staff Payroll Item%'' 
GROUP BY 1,2,3,5,6 
 
UNION
	
SELECT distinct c.local_id_no "ID No.    ", 
trim(c.title ||
 '' '' || c.first_name || '' '' || c.other_names || '' '' || c.sur_name) "Full Name         ", 
 b.item_code_name  "Pay Item                ",		 
SUM(a.bals_amount) "Amount  ", 		 
MAX(to_char(to_timestamp(a.bals_date,''YYYY-MM-DD''),''DD-Mon-YYYY'')) payment_date, b.pay_run_priority 
	       
FROM prs.prsn_names_nos c 
	       
LEFT OUTER JOIN pay.pay_balsitm_bals a ON (a.person_id = c.person_id and (a.bals_date=pay.get_ms_pay_date(pay.get_ms_pay_id(''{:pay_run_no}'')))) 
LEFT OUTER JOIN org.org_pay_items b ON (a.bals_itm_id = b.item_id) 
	       
WHERE((b.local_classfctn ilike ''%Staff Balance Item%'') 
	
AND (c.local_id_no IN ({:IDNos})) AND (b.item_maj_type=''Balance Item'' and b.balance_type ilike ''Non%'') 
and c.person_id IN (select distinct z.person_id from pay.pay_itm_trnsctns z 
where pay.get_ms_pay_name(z.mass_pay_id) ilike ''{:pay_run_no}''))
GROUP BY 1,2,3,6) tbl1
	       
ORDER BY  1 DESC, 6, 3 ASC', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:06', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '2,3,4,5,6,7,8,9,10', cols_to_average = '', cols_to_no_frmt = '2,3,4,5,6,7,8,9,10', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Customised Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 190)
-------------------------Next Msg:-------------------------

RHOMICOM ERROR: [8] Trying to get property 'percent' of non-object<br />
 This Rhomicom Error happened on line 121 in file /usr/share/nginx/html/app_code/rpt/rpts_rnnr.php
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:06
UPDATE rpt.rpt_reports SET report_name = 'Loan Repayment Default List Per Period', report_desc = 'CR-Loan Repayment Default List Per Period', rpt_sql_query = 'SELECT row_number() over (order by 1 ASC, 2 ASC, 6 DESC) as "No.", tbl1.*
FROM ( SELECT 
mcf.get_cust_account_number(a.account_id) "Loan Account Number",
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END "Customer Name",
gst.get_pssbl_val(mcf.get_mppd_lov_crncy_id(f.currency_id)) currency,
c.principal_amount "Disbursed Amount",
(SELECT round(SUM(interest_amnt),2) FROM
mcf.mcf_loan_schedule z
WHERE z.disbmnt_det_id = c.disbmnt_det_id) "Expected Interest",
round((mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''PRINCIPAL PAYMENT'') + mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''INTEREST PAYMENT'')),2) "Repayment Made",
round((mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING'') + mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING'')),2) "Outstanding Balance",
coalesce((SELECT SUM(round((principal_amnt + interest_amnt),2)) FROM
mcf.mcf_loan_schedule z
WHERE z.disbmnt_det_id = c.disbmnt_det_id
AND to_timestamp(z.repay_date,''YYYY-MM-DD'') between to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''01-Jan-2000''),''DD-Mon-YYYY'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'')),0.00) "Total Repayment Due For The Period",
coalesce((SELECT SUM(round((principal_amnt_paid + interest_amnt_paid),2)) FROM
mcf.mcf_loan_schedule z
WHERE z.disbmnt_det_id = c.disbmnt_det_id
AND upper(z.is_paid) IN (''YES'', ''PARTIAL'')
AND to_timestamp(z.repay_date,''YYYY-MM-DD'') between to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''01-Jan-2000''),''DD-Mon-YYYY'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'')),0.00) "Total Repayment Received For The Period",
coalesce((
coalesce((SELECT SUM(round((principal_amnt + interest_amnt),2)) FROM
mcf.mcf_loan_schedule z
WHERE z.disbmnt_det_id = c.disbmnt_det_id
AND to_timestamp(z.repay_date,''YYYY-MM-DD'') between to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''01-Jan-2000''),''DD-Mon-YYYY'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'')),0.00)
- 
coalesce((SELECT SUM(round((principal_amnt_paid + interest_amnt_paid),2)) FROM
mcf.mcf_loan_schedule z
WHERE z.disbmnt_det_id = c.disbmnt_det_id
AND upper(z.is_paid) IN (''YES'', ''PARTIAL'')
AND to_timestamp(z.repay_date,''YYYY-MM-DD'') between to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''01-Jan-2000''),''DD-Mon-YYYY'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'')),0.00)),0.00) "Difference In Repayment",
(COALESCE((SELECT EXTRACT(DAY FROM (to_timestamp(to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY''),''DD-Mon-YYYY'') - to_timestamp(z.repay_date,''YYYY-MM-DD''))) :: INTEGER
    FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''NO'', ''PARTIAL'')
    ORDER BY z.repay_date ASC
    LIMIT 1),0) )"Days In Default",

z.account_clsfctn  "CATEGORY",
prs.get_prsn_surname(rcvry_officer_prsn_id) "Name of Credit Officer",
CASE WHEN segment8_dataload != '''' THEN to_char(to_timestamp(segment8_dataload,''YYYY-MM-DD''),''DD-Mon-yyyy'') ELSE to_char(to_timestamp(d.disbmnt_date,''YYYY-MM-DD''),''DD-Mon-yyyy'') END "Disbursment Date",
(select to_char(to_timestamp(max(x.repay_date),''YYYY-MM-DD''),''DD-Mon-yyyy'')  from mcf.mcf_loan_schedule x
where x.disbmnt_det_id = c.disbmnt_det_id AND x.repay_date != ''4000-12-31'') "Expiry Date",
org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN {:p_branch_id} = -1 THEN ''All Branches'' ELSE org.get_site_code_desc({:p_branch_id}) END "Selected Branch",
a.loan_rqst_id, c.disbmnt_det_id, 	
org.get_site_code_desc({:p_branch_id}::integer) "Param Branch",
prs.get_prsn_surname({:rltnshpOffcrID}) "Param Relationship Officer",
''{:p_start_date}'' "Param Start Date",
''{:p_end_date}'' "Param End Date"
FROM mcf.mcf_loan_request a, mcf.mcf_loan_disbursement_det c, mcf.mcf_loan_disbursement_hdr d, mcf.mcf_loan_schedule e, mcf.mcf_prdt_loans f ,  mcf.mcf_accounts z
WHERE c.loan_rqst_id = a.loan_rqst_id 
AND c.disbmnt_hdr_id = d.disbmnt_hdr_id
AND e.disbmnt_det_id = c.disbmnt_det_id
AND a.loan_product_id = f.loan_product_id
AND a.repayment_account_id = z.account_id
AND a.branch_id = COALESCE(NULLIF({:p_branch_id},-1),a.branch_id)
AND rcvry_officer_prsn_id = COALESCE(NULLIF({:rltnshpOffcrID},-1), rcvry_officer_prsn_id)
AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES'' 
AND crdt_type = ''Loan'' 
AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
/*AND to_timestamp(e.repay_date,''YYYY-MM-DD'') BETWEEN*/
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(e.repay_date,''YYYY-MM-DD'') END BETWEEN  
to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''01-Jan-2000''),''DD-Mon-YYYY'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'') 
GROUP BY a.loan_rqst_id, c.disbmnt_det_id, a.branch_id, f.currency_id, a.account_id, disbmnt_date,a.repayment_account_id,z.account_id,z.account_clsfctn
ORDER BY c.disbmnt_det_id desc)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:06', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='189.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 189)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:06
UPDATE rpt.rpt_reports SET report_name = 'MF4-Monthly Return on Capital Adequacy Ratio', report_desc = 'BOG-MF4-Monthly Return on Capital Adequacy Ratio', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 v_aClmVals,
(CASE WHEN tbl1.gnrl_data6=''1'' THEN ''<span style="font-weight:bold;font-size:9px;">''||
REPLACE(tbl1.gnrl_data3,'' '',''&nbsp;'')
||''</span>''
ELSE REPLACE(tbl1.gnrl_data3,'' '',''&nbsp;'') END) v_bClmVals,
  tbl1.gnrl_data4 v_cClmVals,
  tbl1.gnrl_data5 v_dClmVals,
  tbl1.gnrl_data6 v_aClmFntBlds,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date,
  ''{:p_mfi_ctgry}'' p_mfi_ctgry 
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:06', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='188.jrxml', pre_rpt_sql_query='select accb.populate_bog_rpt1(
{:rptRunID},
''{:p_as_at_date}'',
''MF4'',
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 188)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:06
UPDATE rpt.rpt_reports SET report_name = 'MF2B-Monthly Return on Current Year Operating Result', report_desc = 'BOG-MF2B-Monthly Return on Current Year Operating Result', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 v_aClmVals,
(CASE WHEN tbl1.gnrl_data7=''1'' THEN ''<span style="font-weight:bold;font-size:9px;">''||
REPLACE(tbl1.gnrl_data3,'' '',''&nbsp;'')
||''</span>''
ELSE REPLACE(tbl1.gnrl_data3,'' '',''&nbsp;'') END) v_bClmVals,
  tbl1.gnrl_data4 v_cClmVals1,
  tbl1.gnrl_data5 v_cClmVals2,
  tbl1.gnrl_data6 v_dClmVals,
  tbl1.gnrl_data7 v_aClmFntBlds,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date,
  ''{:p_mfi_ctgry}'' p_mfi_ctgry 
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:06', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='187.jrxml', pre_rpt_sql_query='select accb.populate_bog_rpt1(
{:rptRunID},
''{:p_as_at_date}'',
''MF2B'',
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 187)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:06
UPDATE rpt.rpt_reports SET report_name = 'MF1-Weekly Return on Liquidity Reserves', report_desc = 'BOG-MF1-Weekly Return on Liquidity Reserves', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 v_aClmVals,
(CASE WHEN tbl1.gnrl_data5=''1'' THEN ''<span style="font-weight:bold;font-size:9px;">''||tbl1.gnrl_data3||''</span>''
ELSE tbl1.gnrl_data3 END) v_bClmVals,
  tbl1.gnrl_data4 v_dClmVals,
  tbl1.gnrl_data6 v_cClmVals1,
  tbl1.gnrl_data7 v_cClmVals2,
  tbl1.gnrl_data8 v_cClmVals3,
  tbl1.gnrl_data9 v_cClmVals4,
  tbl1.gnrl_data10 v_cClmVals5,
  tbl1.gnrl_data11 v_cClmVals6,
  tbl1.gnrl_data12 v_cClmVals7,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date,
  ''{:p_mfi_ctgry}'' p_mfi_ctgry 
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:06', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='186.jrxml', pre_rpt_sql_query='select accb.populate_bog_rpt1(
{:rptRunID},
''{:p_as_at_date}'',
''MF1'',
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 186)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:06
UPDATE rpt.rpt_reports SET report_name = '20 Largest Exposures - MF7B', report_desc = 'BOG-20 Largest Exposures - MF7B', rpt_sql_query = 'SELECT row_number() over (order by 5 DESC) as "No.", tbl1.*
FROM (SELECT CASE WHEN c.cust_type = ''Group'' THEN  mcf.get_customer_name(c.cust_type, c.grp_cust_id) ELSE mcf.get_customer_name(c.cust_type, c.cust_id) END "NAME OF CUSTOMER",
d.product_name "FACILITY TYPE", c.approved_amount "SANCTIONED AMOUNT(GHS)", b.principal_amount "DISBURSED AMOUNT(GHS)", 
CASE WHEN c.crdt_type = ''Overdraft'' THEN CASE WHEN (b.principal_amount - COALESCE(mcf.get_cstacnt_avlbl_bals(c.repayment_account_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))),0)) > 0
THEN (b.principal_amount - COALESCE(mcf.get_cstacnt_avlbl_bals(c.repayment_account_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))),0)) ELSE 0.00 END
ELSE mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, ''{:p_as_at_date}'') END "OUTSTANDING AMOUNT(GHS)", 
CASE WHEN substr(a.disbmnt_date,1,10) = ''2018-02-05'' THEN ''NO RECORD FROM TEKSOL'' WHEN cash_collateral_id > 0 THEN ''CASH COLLATERAL'' ELSE ''NO COLLATERAL'' END "TYPE OF SECURITY (GHS)",
CASE WHEN substr(a.disbmnt_date,1,10) = ''2018-02-05'' THEN ''NO RECORD FROM TEKSOL'' 
WHEN cash_collateral_id > 0 THEN  
CASE WHEN c.crdt_type = ''Overdraft'' THEN coalesce((SELECT AMOUNT FROM mcf.mcf_account_liens WHERE loan_rqst_id = c.loan_rqst_id AND amount > 0),''0.00'')||''''  ELSE coalesce((SELECT AMOUNT FROM mcf.mcf_account_liens WHERE loan_rqst_id = c.loan_rqst_id),''0.00'')||''''END
ELSE ''0.00'' END "VALUE OF SECURITY (GHS)",
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period",
(select account_number from mcf.mcf_accounts where account_id = c.account_id) "Loan Account",
(select account_number from mcf.mcf_accounts where account_id = c.repayment_account_id) "Repayment Account",
c.loan_rqst_id
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_prdt_loans d
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.loan_product_id = d.loan_product_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
ORDER BY 5 DESC LIMIT 20) tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:06', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '2,3,4', cols_to_average = '', cols_to_no_frmt = '2,3,4', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='185.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 185)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:07
UPDATE rpt.rpt_reports SET report_name = 'Sectorial Breakdown of Loans(Schedule D)', report_desc = 'BOG-Sectorial Breakdown of Loans(Schedule D)', rpt_sql_query = 'SELECT row_number() over (order by 1 DESC) as "No.", tbl.sector_desc "SECTORIAL BREAKDOWN OF LOANS", tbl.p_prfmng "PERFORMING", tbl.p_non_prfmng "NON-PERFORMING", tbl.p_value "TOTAL", tbl.cust_count "NO. OF CUSTOMERS",
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period" FROM 
(SELECT COALESCE(d.sector_desc,''***NO SECTOR***'') sector_desc, coalesce(mcf.get_sectorial_loan_performance_val(c.sector_clsfctn_major_id, 0, ''{:p_as_at_date}''),0.00) p_prfmng, 
coalesce(mcf.get_sectorial_loan_performance_val(c.sector_clsfctn_major_id, 99, ''{:p_as_at_date}''),0.00) p_non_prfmng, 
round(SUM(mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) p_value, count(b.*)  cust_count
FROM mcf.mcf_loan_disbursement_hdr a LEFT OUTER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_hdr_id = b.disbmnt_hdr_id
LEFT OUTER JOIN mcf.mcf_loan_request c ON b.loan_rqst_id = c.loan_rqst_id
LEFT OUTER JOIN mcf.mcf_loan_sectors_major d ON c.sector_clsfctn_major_id = d.major_sector_id
WHERE 1 = 1
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'') 
GROUP BY d.sector_desc, c.sector_clsfctn_major_id
order by 1)tbl
order by 1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:07', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '1,2,3,4', cols_to_average = '', cols_to_no_frmt = '1,2,3', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='184.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 184)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:07
UPDATE rpt.rpt_reports SET report_name = 'Types of Loans (Schedule D)', report_desc = 'BOG-Types of Loans(Schedule D)', rpt_sql_query = 'SELECT tbl.no "SN", tbl.cust_type "TYPE OF LOAN", tbl.p_value "AMOUNT (GHS)", tbl.p_prcnt_to_gross_loan "% TO GROSS LOAN",
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period" FROM 
(SELECT 1 "no", tbl1.cust_type, tbl1.p_value, round(100* (tbl1.p_value/(SELECT SUM(mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))))
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_prdt_loans d
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.loan_product_id = d.loan_product_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''))),2) p_prcnt_to_gross_loan
FROM (SELECT c.cust_type, 
round(SUM(mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) p_value 
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_prdt_loans d
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.loan_product_id = d.loan_product_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND is_staff_loan_product = ''No''
AND c.cust_type = ''Individual''
GROUP BY c.cust_type) tbl1
GROUP BY tbl1.cust_type, tbl1.p_value
UNION
SELECT 2 "no", tbl1.cust_type, tbl1.p_value, round(100* (tbl1.p_value/(SELECT SUM(mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))))
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_prdt_loans d
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.loan_product_id = d.loan_product_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''))),2) p_prcnt_to_gross_loan
FROM (SELECT c.cust_type, 
round(SUM(mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) p_value 
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_prdt_loans d
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.loan_product_id = d.loan_product_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND is_staff_loan_product = ''No''
AND c.cust_type = ''Group''
GROUP BY c.cust_type) tbl1
GROUP BY tbl1.cust_type, tbl1.p_value
UNION
SELECT 3 "no", ''Enterprises'' cust_type, tbl1.p_value, round(100* (tbl1.p_value/(SELECT SUM(mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))))
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_prdt_loans d
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.loan_product_id = d.loan_product_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''))),2) p_prcnt_to_gross_loan
FROM (SELECT c.cust_type, 
round(SUM(mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) p_value 
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_prdt_loans d
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.loan_product_id = d.loan_product_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND is_staff_loan_product = ''No''
AND c.cust_type = ''Corporate''
GROUP BY c.cust_type) tbl1
GROUP BY tbl1.cust_type, tbl1.p_value
UNION
SELECT 4 "no", ''Others (Staff Loans)'' cust_type, tbl1.p_value, round(100* (tbl1.p_value/(SELECT SUM(mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))))
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_prdt_loans d
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.loan_product_id = d.loan_product_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''))),2) p_prcnt_to_gross_loan
FROM (SELECT c.cust_type, 
round(SUM(mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)))),2) p_value 
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_prdt_loans d
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.loan_product_id = d.loan_product_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND is_staff_loan_product = ''Yes''
AND c.cust_type = ''Individual''
GROUP BY c.cust_type) tbl1
GROUP BY tbl1.cust_type, tbl1.p_value
order by 1)tbl
order by 1', owner_module = 'Banking', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:07', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '2,3', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='183.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 183)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:07
UPDATE rpt.rpt_reports SET report_name = 'Other Liabilities ( Schedule I)', report_desc = 'BOG-Other Liabilities ( Schedule I)', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 v_aClmVals,
(CASE WHEN tbl1.gnrl_data6=''1'' THEN ''<span style="font-weight:bold;font-size:9px;">''||tbl1.gnrl_data3||''</span>''
ELSE tbl1.gnrl_data3 END) v_bClmVals,
  tbl1.gnrl_data4::NUMERIC v_cClmVals,
  tbl1.gnrl_data5::NUMERIC v_dClmVals,
  tbl1.gnrl_data6 v_aClmFntBlds,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date,
  ''{:p_mfi_ctgry}'' p_mfi_ctgry 
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:07', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='182.jrxml', pre_rpt_sql_query='select accb.populate_bog_rpt1(
{:rptRunID},
''{:p_as_at_date}'',
''SCHEDULE-I'',
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 182)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:07
UPDATE rpt.rpt_reports SET report_name = 'Deposits from the public ( Schedule H)', report_desc = 'BOG-Deposits from the public ( Schedule H)', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 v_aClmVals,
(CASE WHEN tbl1.gnrl_data6=''1'' THEN ''<span style="font-weight:bold;font-size:9px;">''||tbl1.gnrl_data3||''</span>''
ELSE tbl1.gnrl_data3 END) v_bClmVals,
  tbl1.gnrl_data4::NUMERIC v_cClmVals,
  tbl1.gnrl_data5::NUMERIC v_dClmVals,
  tbl1.gnrl_data6 v_aClmFntBlds,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date,
  ''{:p_mfi_ctgry}'' p_mfi_ctgry,
  tbl1.gnrl_data7::NUMERIC v_NoOfAcnts,
  tbl1.gnrl_data8::NUMERIC v_NoOfMales,
  tbl1.gnrl_data9::NUMERIC v_NoOfFemales 
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:07', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='181.jrxml', pre_rpt_sql_query='select accb.populate_bog_rpt1(
{:rptRunID},
''{:p_as_at_date}'',
''SCHEDULE-H'',
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 181)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:07
UPDATE rpt.rpt_reports SET report_name = 'Reserves (Schedule F)', report_desc = 'BOG-Reserves (Schedule F)', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 v_aClmVals,
(CASE WHEN tbl1.gnrl_data6=''1'' THEN ''<span style="font-weight:bold;font-size:9px;">''||tbl1.gnrl_data3||''</span>''
ELSE tbl1.gnrl_data3 END) v_bClmVals,
  tbl1.gnrl_data4::NUMERIC v_cClmVals,
  tbl1.gnrl_data5::NUMERIC v_dClmVals,
  tbl1.gnrl_data6 v_aClmFntBlds,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date,
  ''{:p_mfi_ctgry}'' p_mfi_ctgry 
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:07', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='180.jrxml', pre_rpt_sql_query='select accb.populate_bog_rpt1(
{:rptRunID},
''{:p_as_at_date}'',
''SCHEDULE-F'',
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 180)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:07
UPDATE rpt.rpt_reports SET report_name = 'Other Assets (Schedule E)', report_desc = 'BOG-Other Assets (Schedule E)', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 v_aClmVals,
(CASE WHEN tbl1.gnrl_data6=''1'' THEN ''<span style="font-weight:bold;font-size:9px;">''||tbl1.gnrl_data3||''</span>''
ELSE tbl1.gnrl_data3 END) v_bClmVals,
  tbl1.gnrl_data4::NUMERIC v_cClmVals,
  tbl1.gnrl_data5::NUMERIC v_dClmVals,
  tbl1.gnrl_data6 v_aClmFntBlds,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date,
  ''{:p_mfi_ctgry}'' p_mfi_ctgry 
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:07', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='179.jrxml', pre_rpt_sql_query='select accb.populate_bog_rpt1(
{:rptRunID},
''{:p_as_at_date}'',
''SCHEDULE-E'',
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 179)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:07
UPDATE rpt.rpt_reports SET report_name = 'Schedule C-GoG /BOG Securities', report_desc = 'BOG-Schedule C-GoG /BOG Securities', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 v_aClmVals,
(CASE WHEN tbl1.gnrl_data6=''1'' THEN ''<span style="font-weight:bold;font-size:9px;">''||tbl1.gnrl_data3||''</span>''
ELSE tbl1.gnrl_data3 END) v_bClmVals,
  tbl1.gnrl_data4::NUMERIC v_cClmVals,
  tbl1.gnrl_data5::NUMERIC v_dClmVals,
  tbl1.gnrl_data6 v_aClmFntBlds,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date,
  ''{:p_mfi_ctgry}'' p_mfi_ctgry 
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:07', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='178.jrxml', pre_rpt_sql_query='select accb.populate_bog_rpt1(
{:rptRunID},
''{:p_as_at_date}'',
''SCHEDULE-C'',
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 178)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:07
UPDATE rpt.rpt_reports SET report_name = 'Schedule G - Borrowings', report_desc = 'BOG-Schedule G - Borrowings', rpt_sql_query = 'SELECT
    row_number()
    OVER (
      ORDER BY a.accnt_num ) rownumbr,
  accnt_num account_number,
  accnt_name accnt_name,
  (CASE WHEN a.is_prnt_accnt = ''0'' AND a.has_sub_ledgers = ''0''
    THEN
      accb.get_ltst_accnt_bals(a.accnt_id, ''{:p_as_at_date}'', ''net_amount'')
              ELSE
                accb.get_ltst_prnt_accnt_bals(a.accnt_id, ''{:p_as_at_date}'', ''net_amount'')
              END),
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date
  FROM accb.accb_chart_of_accnts a
  WHERE a.accnt_id IN (SELECT z.account_id
                       FROM accb.accb_account_clsfctns z
                       WHERE lower(z.maj_rpt_ctgry) = lower(''Borrowings ( Schedule G)'')) 
 and a.is_prnt_accnt = ''0'' AND a.has_sub_ledgers = ''0''
 ORDER BY a.accnt_num', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:07', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='177.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 177)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:07
UPDATE rpt.rpt_reports SET report_name = 'Schedule B-Placement with Other Institutions', report_desc = 'BOG-Schedule B-Placement with Other Institutions', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 v_aClmVals,
(CASE WHEN tbl1.gnrl_data6=''1'' THEN ''<span style="font-weight:bold;font-size:9px;">''||tbl1.gnrl_data3||''</span>''
ELSE tbl1.gnrl_data3 END) v_bClmVals,
  tbl1.gnrl_data4::NUMERIC v_cClmVals,
  tbl1.gnrl_data5::NUMERIC v_dClmVals,
  tbl1.gnrl_data6 v_aClmFntBlds,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date,
  ''{:p_mfi_ctgry}'' p_mfi_ctgry 
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:07', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='176.jrxml', pre_rpt_sql_query='select accb.populate_bog_rpt1(
{:rptRunID},
''{:p_as_at_date}'',
''SCHEDULE-B'',
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 176)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:07
UPDATE rpt.rpt_reports SET report_name = 'Schedule A - Bank Balances', report_desc = 'BOG-Schedule A - Bank Balances', rpt_sql_query = 'SELECT
    row_number()
    OVER (
      ORDER BY a.accnt_num ) rownumbr,
  accnt_num account_number,
  accnt_name accnt_name,
  (CASE WHEN a.is_prnt_accnt = ''0'' AND a.has_sub_ledgers = ''0''
    THEN
      accb.get_ltst_accnt_bals(a.accnt_id, ''{:p_as_at_date}'', ''net_amount'')
              ELSE
                accb.get_ltst_prnt_accnt_bals(a.accnt_id, ''{:p_as_at_date}'', ''net_amount'')
              END),
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date
  FROM accb.accb_chart_of_accnts a
  WHERE a.accnt_id IN (SELECT z.account_id
                       FROM accb.accb_account_clsfctns z
                       WHERE lower(z.maj_rpt_ctgry) = lower(''Balances in current accounts with bank/Fin Inst (Schedule A)''))
	and a.is_prnt_accnt = ''0'' AND a.has_sub_ledgers = ''0'' 
 ORDER BY a.accnt_num', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:07', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='175.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 175)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:08
UPDATE rpt.rpt_reports SET report_name = 'MF7C-Monthly Report on Ten (10) Largest Depositors', report_desc = 'BOG-Monthly Report on Ten (10) Largest Depositors', rpt_sql_query = 'select account_number, 
account_title,
account_status,
brch_nm,
clrd_bal,
avl_bal,
prdt_nm,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date 
from (select a.account_id, account_number, account_title, account_status, account_status_reason,
status, is_dormant,a.branch_id, org.get_site_code_desc(a.branch_id::INTEGER) brch_nm,
round(mcf.get_cstacnt_unclrd_bals(a.account_id,''{:p_as_at_date}''),2) clrd_bal, 
round(mcf.get_cstacnt_avlbl_bals(a.account_id,''{:p_as_at_date}''),2) avl_bal,
mcf.get_ac_prdt_name(a.account_type, a.product_type_id) prdt_nm
FROM mcf.mcf_accounts a
WHERE a.account_type !=''Loan''
and status=''Authorized''
ORDER BY 10 DESC
LIMIT {:P_LIMIT_BY} OFFSET 0) tbl1;', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:08', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4,5', cols_to_average = '', cols_to_no_frmt = '4,5', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='174.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 174)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:08
UPDATE rpt.rpt_reports SET report_name = 'MF2A-Monthly Return on Financial Position: Assets, Liabilities and Own Funds', report_desc = 'BOG-Monthly Return on Financial Position: Assets, Liabilities and Own Funds', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 v_aClmVals,
(CASE WHEN tbl1.gnrl_data6=''1'' THEN ''<span style="font-weight:bold;font-size:9px;">''||tbl1.gnrl_data3||''</span>''
ELSE tbl1.gnrl_data3 END) v_bClmVals,
  tbl1.gnrl_data4::NUMERIC v_cClmVals,
  tbl1.gnrl_data5::NUMERIC v_dClmVals,
  tbl1.gnrl_data6 v_aClmFntBlds,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date,
  ''{:p_mfi_ctgry}'' p_mfi_ctgry 
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:08', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='173.jrxml', pre_rpt_sql_query='select accb.populate_bog_rpt1(
{:rptRunID},
''{:p_as_at_date}'',
''MF2A'',
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 173)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:08
UPDATE rpt.rpt_reports SET report_name = 'Loan Size Distributions (Currrent Month) - MF7', report_desc = 'BOG-Loan Size Distributions (Current Month) - MF7', rpt_sql_query = 'SELECT 1 "no", ''1.00 - 500.00'' loan_size, (SELECT count(x.*) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1 AND 500
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Number of Male Borrowers",
(SELECT count(x.*) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1 AND 500
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Number of Female Borrowers", 
(SELECT round(sum(x.principal_amount),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1 AND 500
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Total Disbursed Amount - Male(GHS)",
(SELECT round(sum(x.principal_amount),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1 AND 500
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Total Disbursed Amount - Female(GHS)",
(SELECT round(sum(x.prncpl_amnt_outsndng),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount, mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER, ''PRINCIPAL OUTSTANDING AS AT'', to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) prncpl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1 AND 500
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Total Principal Amount Outstanding - Male(GHS)",
(SELECT round(sum(x.prncpl_amnt_outsndng),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount, mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER, ''PRINCIPAL OUTSTANDING AS AT'', to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) prncpl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1 AND 500
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Total Principal Amount Outstanding - Female(GHS)",
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period"
UNION
SELECT 2 "no", ''501.00 - 1,000.00'' loan_size, (SELECT count(x.*) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 501 AND 1000
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Number of Male Borrowers",
(SELECT count(x.*) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 501 AND 1000
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Number of Female Borrowers", 
(SELECT round(sum(x.principal_amount),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 501 AND 1000
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Total Disbursed Amount - Male(GHS)",
(SELECT round(sum(x.principal_amount),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 501 AND 1000
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Total Disbursed Amount - Female(GHS)",
(SELECT round(sum(x.prncpl_amnt_outsndng),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount, mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER, ''PRINCIPAL OUTSTANDING AS AT'', to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) prncpl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 501 AND 1000
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Total Principal Amount Outstanding - Male(GHS)",
(SELECT round(sum(x.prncpl_amnt_outsndng),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount, mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER, ''PRINCIPAL OUTSTANDING AS AT'', to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) prncpl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 501 AND 1000
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Total Principal Amount Outstanding - Female(GHS)",
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period"
UNION
SELECT 3 "no", ''1,001.00 - 1,500.00'' loan_size, (SELECT count(x.*) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1001 AND 1500
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Number of Male Borrowers",
(SELECT count(x.*) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1001 AND 1500
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Number of Female Borrowers", 
(SELECT round(sum(x.principal_amount),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1001 AND 1500
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Total Disbursed Amount - Male(GHS)",
(SELECT round(sum(x.principal_amount),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1001 AND 1500
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Total Disbursed Amount - Female(GHS)",
(SELECT round(sum(x.prncpl_amnt_outsndng),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount, mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER, ''PRINCIPAL OUTSTANDING AS AT'', to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) prncpl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1001 AND 1500
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Total Principal Amount Outstanding - Male(GHS)",
(SELECT round(sum(x.prncpl_amnt_outsndng),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount, mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER, ''PRINCIPAL OUTSTANDING AS AT'', to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) prncpl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1001 AND 1500
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Total Principal Amount Outstanding - Female(GHS)",
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period"
UNION
SELECT 4 "no", ''1,501.00 - 3,000.00'' loan_size, (SELECT count(x.*) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1501 AND 3000
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Number of Male Borrowers",
(SELECT count(x.*) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1501 AND 3000
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Number of Female Borrowers", 
(SELECT round(sum(x.principal_amount),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1501 AND 3000
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Total Disbursed Amount - Male(GHS)",
(SELECT round(sum(x.principal_amount),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1501 AND 3000
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Total Disbursed Amount - Female(GHS)",
(SELECT round(sum(x.prncpl_amnt_outsndng),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount, mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER, ''PRINCIPAL OUTSTANDING AS AT'', to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) prncpl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1501 AND 3000
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Total Principal Amount Outstanding - Male(GHS)",
(SELECT round(sum(x.prncpl_amnt_outsndng),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount, mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER, ''PRINCIPAL OUTSTANDING AS AT'', to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) prncpl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount BETWEEN 1501 AND 3000
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Total Principal Amount Outstanding - Female(GHS)",
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period"
UNION
SELECT 5 "no", ''3,001.00 and above'' loan_size, (SELECT count(x.*) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount >= 3001
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Number of Male Borrowers",
(SELECT count(x.*) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount >= 3001
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Number of Female Borrowers", 
(SELECT round(sum(x.principal_amount),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount >= 3001
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Total Disbursed Amount - Male(GHS)",
(SELECT round(sum(x.principal_amount),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount >= 3001
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Total Disbursed Amount - Female(GHS)",
(SELECT round(sum(x.prncpl_amnt_outsndng),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount, mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER, ''PRINCIPAL OUTSTANDING AS AT'', to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) prncpl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount >= 3001
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''MALE'')  "Total Principal Amount Outstanding - Male(GHS)",
(SELECT round(sum(x.prncpl_amnt_outsndng),2) FROM  
(SELECT c.loan_rqst_id, e.gender, b.principal_amount, mcf.calc_loan_ttl_bal_asat(c.loan_rqst_id::INTEGER, ''PRINCIPAL OUTSTANDING AS AT'', to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) prncpl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND b.principal_amount >= 3001
AND substr(disbmnt_date,6,2) = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2))x WHERE upper(x.gender) =''FEMALE'')  "Total Principal Amount Outstanding - Female(GHS)",
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period"
ORDER BY 1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:08', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '2,3,4,5,6,7', cols_to_average = '', cols_to_no_frmt = '4,5,6,7', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 172)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:08
UPDATE rpt.rpt_reports SET report_name = 'Loan Client Population - MF7', report_desc = 'BOG-Loan Client Population - MF7', rpt_sql_query = 'SELECT tbl.no "SN", tbl.clnt_popltn "Client Population", tbl.ttl_cnt "Current Month", 
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period" FROM
(SELECT 1 "no", ''Number of New Borrowers'' clnt_popltn, count(a.*) ttl_cnt
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id AND b.loan_rqst_id = c.loan_rqst_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0 
AND CASE WHEN segment8_dataload != '''' THEN substr(segment8_dataload,6,2) ELSE substr(disbmnt_date,6,2) END = substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),6,2)
UNION
SELECT 2 "no", ''Number of Borrowers Existing'' clnt_popltn, count(a.*) ttl_cnt
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id AND b.loan_rqst_id = c.loan_rqst_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN substr(segment8_dataload,1,7) ELSE substr(disbmnt_date,1,7) END < substr(coalesce(nullif(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),1,7)
order by 1)tbl
order by 1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:08', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '2', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='171.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 171)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:08
UPDATE rpt.rpt_reports SET report_name = 'Age Distribution of Borrowers - MF7', report_desc = 'BOG-Age Distribution of Borrowers - MF7', rpt_sql_query = 'SELECT tbl.no "SN", tbl.age_grp "Age Group (yrs)", tbl.no_of_borrowers "Number of Borrowers", tbl.loan_amnt_disbursed "Loan Amount Disbursed (GHS)", 
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period" FROM 
(SELECT 1 "no", ''18 - 30'' age_grp, count(a.*) no_of_borrowers, round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 18 and 30
UNION
SELECT 2 "no", ''31 - 40'' age_grp, count(a.*) no_of_borrowers, round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 31 and 40
UNION
SELECT 3 "no", ''41 - 50'' age_grp, count(a.*) no_of_borrowers, round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) between 41 and 50
UNION
SELECT 4 "no", ''51 and above'' age_grp, count(a.*) no_of_borrowers, round(sum(b.principal_amount),2) loan_amnt_disbursed
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c,
mcf.mcf_customers d, mcf.mcf_customers_ind e
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND c.cust_id = d.cust_id AND c.cust_type = d.cust_type
AND d.cust_id = e.cust_id
AND (c.cust_type = ''Individual'' OR c.grp_applicant_type = ''Individual'')
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END
<=  to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND EXTRACT(YEAR FROM age(cast(e.date_of_birth as date))) >= 51
order by 1)tbl
order by 1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:08', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '2,3', cols_to_average = '', cols_to_no_frmt = '3', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='170.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 170)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:08
UPDATE rpt.rpt_reports SET report_name = 'Aging Analysis Report - MF7', report_desc = 'BOG-Aging Analysis Report - MF7', rpt_sql_query = 'SELECT tbl.no "SN", tbl.loan_clasfctn "Loan Classification", tbl.loan_cnt_in_arrears "Number of Loans In Arrears", tbl.ttl_balance_outstanding "Outstanding Balance",
tbl.min_prvsn "Minimum Provision (%)", tbl.prvsn_amount "Provision Amount (GHS)", tbl.alwbl_scrty "Allowable Security", 
to_char(to_timestamp(coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param Period",
to_char(to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''), ''1901-01-01''),''YYYY-MM-DD''),''DD-Mon-YYYY'')  "Param Start Date",
to_char(to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param End Date"  FROM 
(
SELECT 1 "no", ''Current Loans'' loan_clasfctn, count(x.*) loan_cnt_in_arrears, round(sum(ttl_amnt_outsndng),2) ttl_balance_outstanding, ''1%'' min_prvsn,
round((sum(ttl_amnt_outsndng)*0.01),2) prvsn_amount, ''0.00'' alwbl_scrty FROM  
(SELECT c.loan_rqst_id, b.principal_amount, (mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, ''{:p_as_at_date}'')) ttl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''1901-01-01''),''YYYY-MM-DD'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) = 0)x
UNION
SELECT 2 "no", ''Up to 30 days'' loan_clasfctn, count(x.*) loan_cnt_in_arrears, round(sum(ttl_amnt_outsndng),2) ttl_balance_outstanding, ''5%'' min_prvsn,
round((sum(ttl_amnt_outsndng)*0.05),2) prvsn_amount, ''0.00'' alwbl_scrty FROM  
(SELECT c.loan_rqst_id, b.principal_amount, (mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, ''{:p_as_at_date}'')) ttl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''1901-01-01''),''YYYY-MM-DD'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) BETWEEN 1 AND 30)x
UNION
SELECT 3 "no", ''31 days and less than 61 days'' loan_clasfctn, count(x.*) loan_cnt_in_arrears, round(sum(ttl_amnt_outsndng),2) ttl_balance_outstanding, ''20%'' min_prvsn,
round((sum(ttl_amnt_outsndng)*0.2),2) prvsn_amount, ''0.00'' alwbl_scrty FROM  
(SELECT c.loan_rqst_id, b.principal_amount, (mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, ''{:p_as_at_date}'')) ttl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''1901-01-01''),''YYYY-MM-DD'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) BETWEEN 31 AND 60)x
UNION
SELECT 4 "no", ''61 days and less than 91 days'' loan_clasfctn, count(x.*) loan_cnt_in_arrears, round(sum(ttl_amnt_outsndng),2) ttl_balance_outstanding, ''40%'' min_prvsn,
round((sum(ttl_amnt_outsndng)*0.4),2) prvsn_amount, ''0.00'' alwbl_scrty FROM  
(SELECT c.loan_rqst_id, b.principal_amount, (mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, ''{:p_as_at_date}'')) ttl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''1901-01-01''),''YYYY-MM-DD'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) BETWEEN 61 AND 90)x
UNION
SELECT 5 "no", ''91 days and less than 121 days'' loan_clasfctn, count(x.*) loan_cnt_in_arrears, round(sum(ttl_amnt_outsndng),2) ttl_balance_outstanding, ''60%'' min_prvsn,
round((sum(ttl_amnt_outsndng)*0.6),2) prvsn_amount, ''0.00'' alwbl_scrty FROM  
(SELECT c.loan_rqst_id, b.principal_amount, (mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, ''{:p_as_at_date}'')) ttl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''1901-01-01''),''YYYY-MM-DD'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) BETWEEN 91 AND 120)x
UNION
SELECT 6 "no", ''121 days and less than 151 days'' loan_clasfctn, count(x.*) loan_cnt_in_arrears, round(sum(ttl_amnt_outsndng),2) ttl_balance_outstanding, ''80%'' min_prvsn,
round((sum(ttl_amnt_outsndng)*0.8),2) prvsn_amount, ''0.00'' alwbl_scrty FROM  
(SELECT c.loan_rqst_id, b.principal_amount, (mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, ''{:p_as_at_date}'')) ttl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''1901-01-01''),''YYYY-MM-DD'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) BETWEEN 121 AND 150)x
UNION
SELECT 7 "no", ''151 days and above'' loan_clasfctn, count(x.*) loan_cnt_in_arrears, round(sum(ttl_amnt_outsndng),2) ttl_balance_outstanding, ''100%'' min_prvsn,
round((sum(ttl_amnt_outsndng)*1),2) prvsn_amount, ''0.00'' alwbl_scrty FROM  
(SELECT c.loan_rqst_id, b.principal_amount, (mcf.get_loan_ttl_principal_bal_as_at(c.loan_rqst_id, ''{:p_as_at_date}'')) ttl_amnt_outsndng
FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c
WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id
AND b.loan_rqst_id = c.loan_rqst_id
AND a.status = ''Disbursed'' AND b.principal_amount > 0
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(a.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''1901-01-01''),''YYYY-MM-DD'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND mcf.get_loan_dflt_age(c.loan_rqst_id, coalesce(NULLIF(''{:p_as_at_date}'',''''), mcf.xx_get_start_of_day_date(1))) >= 151)x
order by 1)tbl
order by 1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:08', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '2,3,5,6', cols_to_average = '', cols_to_no_frmt = '3,5,6', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='169.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 169)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:08
UPDATE rpt.rpt_reports SET report_name = 'Top 20 Expenditure Accounts-Pie Chart', report_desc = 'ACC-Top 20 Expenditure Accounts-Pie Chart', rpt_sql_query = 'SELECT a.accnt_id "_", a.accnt_num "Account No.    ", a.accnt_name "Account Name.    ", 
CASE WHEN a.accnt_type = ''EX'' THEN accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'',
 ''{:toDate} 23:59:59'') ELSE -1*accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'', 
''{:toDate} 23:59:59'') END "Amount   ", CASE WHEN a.accnt_type = ''EX'' THEN 
accb.prnt_usr_trns_sum_rcsv(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 23:59:59'')  
ELSE -1*accb.prnt_usr_trns_sum_rcsv(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 23:59:59'') END 
"TOTALS ", a.is_prnt_accnt "_" 
FROM accb.accb_chart_of_accnts a 
WHERE ((a.org_id = {:orgID}) 
and (a.is_prnt_accnt=''0'' and accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 
23:59:59'') IS NOT NULL) and (a.accnt_type = ''EX'')) 
ORDER BY accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 23:59:59'') DESC LIMIT 20 OFFSET 0', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:08', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '1100,300', cols_to_count = '2,3', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PIE CHART', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 167)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:08
UPDATE rpt.rpt_reports SET report_name = 'GL Account Statement', report_desc = 'ACC-GL Account Statement', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 account_number,
  tbl1.gnrl_data3 accnt_name,
  tbl1.gnrl_data4 || (CASE WHEN tbl1.gnrl_data5 !='''' THEN ''Ref. No.:''||tbl1.gnrl_data5 ELSE '''' END) transaction_desc,
  tbl1.gnrl_data5 ref_doc_number,
  tbl1.gnrl_data6::NUMERIC dbt_amount,
  tbl1.gnrl_data7::NUMERIC crdt_amount,
  tbl1.gnrl_data8::NUMERIC net_amount,
  tbl1.gnrl_data13::NUMERIC opng_dbt_amount,
  tbl1.gnrl_data14::NUMERIC opng_crdt_amount,
  tbl1.gnrl_data15::NUMERIC opng_net_amount,
  tbl1.gnrl_data16::NUMERIC clsng_dbt_amount,
  tbl1.gnrl_data17::NUMERIC clsng_crdt_amount,
  tbl1.gnrl_data18::NUMERIC clsng_net_amount,
  tbl1.gnrl_data12 trnsctn_date,
  to_char(to_timestamp(''{:p_from_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') P_FROM_DATE,
  to_char(to_timestamp(''{:p_to_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') P_TO_DATE, 
 (SELECT SUM(b.gnrl_data8::NUMERIC) FROM rpt.rpt_gnrl_data_storage b
 WHERE b.gnrl_data1::INTEGER <= tbl1.gnrl_data1::INTEGER
   AND b.rpt_run_id=tbl1.rpt_run_id) rnng_bals
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:08', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '0', cols_to_count = '0', cols_to_sum = '2', cols_to_average = '', cols_to_no_frmt = '2,5', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='166.jrxml', pre_rpt_sql_query='select accb.populate_gl_statement(
{:rptRunID},
{:p_accnt_id},
''{:p_shw_intrfc_trns}'',
''{:p_from_date}'',
''{:p_to_date}'',
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 166)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:08
UPDATE rpt.rpt_reports SET report_name = 'Trial Balance-Landscape', report_desc = 'ACC-Trial Balance-Landscape', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  (CASE WHEN ''{:p_pad_acnts}'' ilike ''Yes'' THEN tbl1.gnrl_data14||tbl1.gnrl_data2
ELSE tbl1.gnrl_data2 END) account_number,
  tbl1.gnrl_data3 accnt_name,
  tbl1.gnrl_data4::NUMERIC debit_balance,
  tbl1.gnrl_data5::NUMERIC credit_balance,
  tbl1.gnrl_data6::NUMERIC net_balance,
  tbl1.gnrl_data7 as_at_date,
  tbl1.gnrl_data8::INTEGER accnt_id,
  tbl1.gnrl_data9 is_prnt_accnt,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date,
  tbl1.gnrl_data10::NUMERIC debit_balsm,
  tbl1.gnrl_data11::NUMERIC credit_balsm,
  tbl1.gnrl_data12 depth,
  tbl1.gnrl_data13 path,
  tbl1.gnrl_data14 lftpaddng
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:08', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '0', cols_to_count = 'NO', cols_to_sum = '2', cols_to_average = '', cols_to_no_frmt = '2,5', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='165.jrxml', pre_rpt_sql_query='select accb.populate_trial_bals(
{:rptRunID},
''{:p_use_net_pos}'',
''{:p_as_at_date}'',
{:p_max_acnt_level},
{:p_sgmnt1_val},
{:p_sgmnt2_val},
{:p_sgmnt3_val},
{:p_sgmnt4_val},
{:p_sgmnt5_val},
{:p_sgmnt6_val},
{:p_sgmnt7_val},
{:p_sgmnt8_val},
{:p_sgmnt9_val},
{:p_sgmnt10_val},
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 165)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:08
UPDATE rpt.rpt_reports SET report_name = 'Trial Balance', report_desc = 'ACC-Trial Balance', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  (CASE WHEN ''{:p_pad_acnts}'' ilike ''Yes'' THEN tbl1.gnrl_data14||tbl1.gnrl_data2
ELSE tbl1.gnrl_data2 END) account_number,
  tbl1.gnrl_data3 accnt_name,
  tbl1.gnrl_data4::NUMERIC debit_balance,
  tbl1.gnrl_data5::NUMERIC credit_balance,
  tbl1.gnrl_data6::NUMERIC net_balance,
  tbl1.gnrl_data7 as_at_date,
  tbl1.gnrl_data8::INTEGER accnt_id,
  tbl1.gnrl_data9 is_prnt_accnt,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date,
  tbl1.gnrl_data10::NUMERIC debit_balsm,
  tbl1.gnrl_data11::NUMERIC credit_balsm,
  tbl1.gnrl_data12 depth,
  tbl1.gnrl_data13 path,
  tbl1.gnrl_data14 lftpaddng
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:08', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '0', cols_to_count = 'NO', cols_to_sum = '2', cols_to_average = '', cols_to_no_frmt = '2,5', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='164.jrxml', pre_rpt_sql_query='select accb.populate_trial_bals(
{:rptRunID},
''{:p_use_net_pos}'',
''{:p_as_at_date}'',
{:p_max_acnt_level},
{:p_sgmnt1_val},
{:p_sgmnt2_val},
{:p_sgmnt3_val},
{:p_sgmnt4_val},
{:p_sgmnt5_val},
{:p_sgmnt6_val},
{:p_sgmnt7_val},
{:p_sgmnt8_val},
{:p_sgmnt9_val},
{:p_sgmnt10_val},
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 164)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:09
UPDATE rpt.rpt_reports SET report_name = 'Profit & Loss', report_desc = 'ACC-Profit & Loss', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  (CASE WHEN ''{:p_pad_acnts}'' ilike ''Yes'' THEN tbl1.gnrl_data12||tbl1.gnrl_data2
ELSE tbl1.gnrl_data2 END) account_number,
  tbl1.gnrl_data3 accnt_name,
  tbl1.gnrl_data4::NUMERIC trns_amnt,
  tbl1.gnrl_data5::INTEGER accnt_id,
  tbl1.gnrl_data6 is_prnt_accnt,
  tbl1.gnrl_data7 has_sub_ledgers,
  tbl1.gnrl_data8 accnt_type,
  tbl1.gnrl_data9::NUMERIC trns_amntsm,
  tbl1.gnrl_data10 depth,
  tbl1.gnrl_data11 path,
  tbl1.gnrl_data12 lftpaddng,
  to_char(to_timestamp(''{:p_from_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') P_FROM_DATE,
  to_char(to_timestamp(''{:p_to_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') P_TO_DATE,
  (Select SUM(b.gnrl_data9::NUMERIC) FROM rpt.rpt_gnrl_data_storage b WHERE b.rpt_run_id={:rptRunID} and b.gnrl_data8=''R'') rvnu_sum,
  (Select SUM(b.gnrl_data9::NUMERIC) FROM rpt.rpt_gnrl_data_storage b WHERE b.rpt_run_id={:rptRunID} and b.gnrl_data8=''EX'') expns_sum
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:09', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '0', cols_to_count = 'NO', cols_to_sum = '2', cols_to_average = '', cols_to_no_frmt = '2,5', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='163.jrxml', pre_rpt_sql_query='select accb.populate_pnl(
{:rptRunID},
''{:p_from_date}'',
''{:p_to_date}'',
{:p_max_acnt_level},
{:p_sgmnt1_val},
{:p_sgmnt2_val},
{:p_sgmnt3_val},
{:p_sgmnt4_val},
{:p_sgmnt5_val},
{:p_sgmnt6_val},
{:p_sgmnt7_val},
{:p_sgmnt8_val},
{:p_sgmnt9_val},
{:p_sgmnt10_val},
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 163)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:09
UPDATE rpt.rpt_reports SET report_name = 'Reverse Loan Deductions', report_desc = 'Reverse Loan Deductions', rpt_sql_query = 'SELECT mcf.xx_reverse_loan_deduction_acctid({:usrID}, {:orgID}, {:account_id}, {:no_of_recs},''{:rvsl_reason}'')', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:09', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 162)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:09
UPDATE rpt.rpt_reports SET report_name = 'Change Group Customer to Joint', report_desc = 'Change Group Customer to Joint', rpt_sql_query = 'update mcf.mcf_accounts
set cust_type = ''Joint'',
cust_id = (select cust_id from mcf.mcf_customers_ind
where local_id_no = ''{:p_customer_no}'')
where account_number = ''{:p_account_no}''', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:09', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 161)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:09
UPDATE rpt.rpt_reports SET report_name = 'VMS Summary Bin Card Report', report_desc = 'VMS Summary Bin Card Report', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data14 trns_type,
  tbl1.gnrl_data4 comments_desc,
  tbl1.gnrl_data6::NUMERIC amnt_rcvd,
  tbl1.gnrl_data7::NUMERIC amnt_issued,
  tbl1.gnrl_data8 branch_nm,
  tbl1.gnrl_data9 manager,
  tbl1.gnrl_data10 owned_by,
  tbl1.gnrl_data11 opng_cage_value,
  tbl1.gnrl_data15 clsng_cage_value,
  tbl1.gnrl_data5 trans_date,
  tbl1.gnrl_data12::INTEGER order_no,
  tbl1.gnrl_data2 vlt_name,
  tbl1.gnrl_data3 cage_name, 
  tbl1.gnrl_data13 crncy_nm, 
  REPLACE(tbl1.gnrl_data11,'','','''')::NUMERIC + (SELECT SUM(b.gnrl_data6::NUMERIC-b.gnrl_data7::NUMERIC) FROM rpt.rpt_gnrl_data_storage b
                       WHERE b.gnrl_data1::INTEGER <= tbl1.gnrl_data1::INTEGER
                       AND b.rpt_run_id=tbl1.rpt_run_id) bals_afta,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID}
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Vault Management', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:09', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='160.jrxml', pre_rpt_sql_query='SELECT vms.populate_smry_bin_card({:rptRunID}, {:P_CAGE_ID}, ''{:P_FROM_DATE} 00:00:00'',''{:P_TO_DATE} 23:59:59'',
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 160)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:09
UPDATE rpt.rpt_reports SET report_name = 'Staff Loan Balances', report_desc = 'CR-Staff Loan Balances', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 7 DESC) as "No.", tbl1.*
FROM (SELECT
org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END                 "Staff Name",
to_char(to_timestamp(d.disbmnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY'') "Disbursement Date",
iso_code "Currency",
round(c.principal_amount,2) "Disbursed Amount",
a.apprvd_loan_tenor||'' ''||a.apprvd_loan_tenor_type "Tenure",
round((COALESCE(mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING''),0) +
COALESCE(mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),0)),2) "Outstanding Amount",
to_char(to_timestamp(c.repay_end_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'')   "Expected Completion Date",
round((COALESCE(mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''PRINCIPAL PAYMENT AS AT'',to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),0) +
COALESCE(mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''INTEREST PAYMENT AS AT'',to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),0)),2) "Amount Paid",
(SELECT to_char(to_timestamp(z.repay_date,''YYYY-MM-DD''),''DD-Mon-YYYY'')
    FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''NO'', ''PARTIAL'')
    ORDER BY z.repay_date ASC
    LIMIT 1) "Next Payment Date",
    (SELECT to_char(to_timestamp(z.actual_repay_date,''YYYY-MM-DD''),''DD-Mon-YYYY'')
    FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''YES'', ''PARTIAL'')
    ORDER BY z.repay_date desc
    LIMIT 1) "Last Payment Date",
org.get_site_code_desc({:branchID}::integer) "Bank Branch"
FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
WHERE  1 = 1
  AND b.currency_id = e.crncy_id
  AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND a.crdt_type = ''Loan''
 AND a.loan_product_id = COALESCE(NULLIF(-1,-1), a.loan_product_id)
AND b.is_staff_loan_product = ''Yes''
AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
ORDER BY c.disbmnt_det_id asc
)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:09', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='158.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 158)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:09
UPDATE rpt.rpt_reports SET report_name = 'Loan Disbursements Per Period', report_desc = 'CR-Loan Disbursements Per Period', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 8 DESC) as "No.", tbl1.*
FROM (SELECT

CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END    "Customer Name",	 
mcf.get_cust_account_number(z.account_id) "Loan Account Number",
mcf.get_cust_accnt_status(z.account_id)	"Account Status" , 
z.account_clsfctn  "CATEGORY",	   
org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN segment8_dataload != '''' THEN to_char(to_timestamp(segment8_dataload,''YYYY-MM-DD''),''DD-Mon-YYYY'') 
ELSE to_char(to_timestamp(d.disbmnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY'') END "Disbursement Date",
iso_code "Currency",
round(SUM(c.principal_amount),2) "Disbursed Amount",
a.crdt_type "Loan Type",
b.product_code||''.''||product_desc "Product Type",
	''{:pStartDate}'' "Start Date",
	''{:pEndDate}'' "End Date",
	org.get_site_code_desc({:branchID}::integer) "Bank Branch",
	prs.get_prsn_surname({:rltnshpOffcrID}) "Relationship Officer",
         prs.get_prsn_name(rcvry_officer_prsn_id) "Credit Officer"	
FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
left outer JOIN   mcf.mcf_accounts z ON a.repayment_account_id = z.account_id
WHERE  1 = 1
  AND b.currency_id = e.crncy_id
 
AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND rcvry_officer_prsn_id = COALESCE(NULLIF({:rltnshpOffcrID},-1), rcvry_officer_prsn_id)
 AND a.crdt_type = COALESCE(NULLIF(''{:crdtType}'',''%''), a.crdt_type)
 AND a.loan_product_id = COALESCE(NULLIF({:lnPrdtID},-1), a.loan_product_id)
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
  AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(d.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
 to_timestamp(coalesce(NULLIF(''{:pStartDate}'',''''),''01-Jan-2000''),''DD-Mon-YYYY'')
 AND to_timestamp(coalesce(NULLIF(''{:pEndDate}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'') 
  group by a.branch_id, d.disbmnt_date, iso_code, a.crdt_type, b.product_code||''.''||product_desc, segment8_dataload , a.cust_type,a.grp_cust_id,
a.grp_applicant_type,a.cust_id,a.repayment_account_id,z.account_id	,     a.rcvry_officer_prsn_id				   
 
ORDER BY 1 asc
)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:09', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='157.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 157)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:09
UPDATE rpt.rpt_reports SET report_name = 'Loan Defaulters List By Product', report_desc = 'CR-Loan Defaulters List By Product', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 8 DESC) as "No.", tbl1.*
FROM (SELECT
org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END                 "Customer Name",
mcf.get_cust_account_number(account_id) "Loan Account Number",
iso_code "Currency",
round(c.principal_amount,2) "Disbursed Amount",
CASE WHEN segment8_dataload != '''' THEN to_char(to_timestamp(segment8_dataload,''YYYY-MM-DD''),''DD-Mon-YYYY'') ELSE to_char(to_timestamp(d.disbmnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY'') END "Disbursement Date",
round((mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING AS AT'',to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) + mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY''))),2) "Amount In Default",
COALESCE((SELECT EXTRACT(DAY FROM (to_timestamp(to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY''),''DD-Mon-YYYY'') - to_timestamp(z.repay_date,''YYYY-MM-DD''))) :: INTEGER
    FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''NO'', ''PARTIAL'')
    ORDER BY z.repay_date ASC
    LIMIT 1),0) "Days In Default",
prs.get_prsn_surname(rcvry_officer_prsn_id) "Relationship Officer",    
c.disbmnt_det_id,
(SELECT z.repay_date
    FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''NO'', ''PARTIAL'')
    ORDER BY z.repay_date ASC
    LIMIT 1) dflt_dte,
	''{:pStartDate}'' "Start Date",
	''{:pEndDate}'' "End Date",
	org.get_site_code_desc({:branchID}::integer) "Param Branch",
	(SELECT product_code||''.''||product_name from mcf.mcf_prdt_loans where loan_product_id = {:lnPrdtID}) "Loan Product"
FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
WHERE  1 = 1
  AND b.currency_id = e.crncy_id
 AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND a.crdt_type = ''Loan''
 AND a.loan_product_id = COALESCE(NULLIF({:lnPrdtID},-1), a.loan_product_id)
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
  AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(d.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
 to_timestamp(coalesce(NULLIF(''{:pStartDate}'',''''),''01-Jan-2000''),''DD-Mon-YYYY'')
 AND to_timestamp(coalesce(NULLIF(''{:pEndDate}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'') 
 AND ((mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING AS AT'',to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) > 0
 OR mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) > 0) AND 
 COALESCE((SELECT EXTRACT(DAY FROM (to_timestamp(to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY''),''DD-Mon-YYYY'') - to_timestamp(z.repay_date,''YYYY-MM-DD''))) :: INTEGER
    FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''NO'', ''PARTIAL'')
    ORDER BY z.repay_date ASC
    LIMIT 1),0)> 0 AND ((SELECT COUNT(*) FROM mcf.mcf_loan_schedule WHERE disbmnt_det_id = c.disbmnt_det_id AND actual_repay_date != '''') > 0))
ORDER BY c.disbmnt_det_id asc
)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:09', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='155.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 155)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:09
UPDATE rpt.rpt_reports SET report_name = 'Loan Defaulters List By Credit Officer', report_desc = 'CR-Loan Defaulters List By Credit Officer', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 8 DESC) as "No.", tbl1.*
FROM (SELECT
org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END                 "Customer Name",
mcf.get_cust_account_number(a.account_id) "Loan Account Number",
iso_code "Currency",
round(c.principal_amount,2) "Disbursed Amount",
CASE WHEN segment8_dataload != '''' THEN to_char(to_timestamp(segment8_dataload,''YYYY-MM-DD''),''DD-Mon-YYYY'') ELSE to_char(to_timestamp(d.disbmnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY'') END "Disbursement Date",
round((mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING AS AT'',to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) + mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY''))),2) "Amount In Default",
COALESCE((SELECT EXTRACT(DAY FROM (to_timestamp(to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY''),''DD-Mon-YYYY'') - to_timestamp(z.repay_date,''YYYY-MM-DD''))) :: INTEGER
    FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''NO'', ''PARTIAL'')
    ORDER BY z.repay_date ASC
    LIMIT 1),0) "Days In Default",
prs.get_prsn_surname(rcvry_officer_prsn_id) "Relationship Officer",    
p.account_clsfctn  "category",
c.disbmnt_det_id,
(SELECT z.repay_date
    FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''NO'', ''PARTIAL'')
    ORDER BY z.repay_date ASC
    LIMIT 1) dflt_dte,
	''{:pStartDate}'' "Start Date",
	''{:pEndDate}'' "End Date",
	org.get_site_code_desc({:branchID}::integer) "Param Branch",
	prs.get_prsn_surname({:rltnshpOffcrID}) "Param Relationship Officer"
FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
INNER JOIN  mcf.mcf_accounts p ON a.repayment_account_id = p.account_id
WHERE  1 = 1
  AND b.currency_id = e.crncy_id
 AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND a.crdt_type = ''Loan''
 AND rcvry_officer_prsn_id = COALESCE(NULLIF({:rltnshpOffcrID},-1), rcvry_officer_prsn_id)
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
 AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(d.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
 to_timestamp(coalesce(NULLIF(''{:pStartDate}'',''''),''01-Jan-2000''),''DD-Mon-YYYY'')
 AND to_timestamp(coalesce(NULLIF(''{:pEndDate}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'') 
 AND ((mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING AS AT'',to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) > 0
 OR mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) > 0) AND 
 COALESCE((SELECT EXTRACT(DAY FROM (to_timestamp(to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY''),''DD-Mon-YYYY'') - to_timestamp(z.repay_date,''YYYY-MM-DD''))) :: INTEGER
    FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''NO'', ''PARTIAL'')
    ORDER BY z.repay_date ASC
    LIMIT 1),0)> 0 AND ((SELECT COUNT(*) FROM mcf.mcf_loan_schedule WHERE disbmnt_det_id = c.disbmnt_det_id AND actual_repay_date != '''') > 0))
ORDER BY c.disbmnt_det_id asc
)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:09', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='154.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 154)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:10
UPDATE rpt.rpt_reports SET report_name = 'Total deposits by product type-Details', report_desc = 'CBR-Total deposits by product type-Details', rpt_sql_query = 'SELECT
  tbl1.product_name, 
  tbl1.account_number, 
  tbl1.account_title,
  round(COALESCE(tbl1.deposits_ttls,0), 2)                          deposits_ttls,
  round(COALESCE(tbl1.withdrawal_ttls,0), 2)                        withdrawal_ttls,
  round((COALESCE(tbl1.deposits_ttls,0) - COALESCE(tbl1.withdrawal_ttls,0)), 2) net_ttls, 
	org.get_site_code_desc({:P_BRNCH_ID}) branch_param,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE  
FROM (SELECT
        a.svngs_product_id,
        a.product_name,
	b.account_id, 
	b.account_number, 
	b.account_title,
        (SELECT SUM(COALESCE(z.amount, 0))
         FROM mcf.mcf_cust_account_transactions z
         WHERE z.account_id =b.account_id
		AND z.status IN (''Paid'', ''Received'', ''Void'')
               AND z.trns_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' 
		AND z.trns_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59''
	 AND z.trns_type IN (''DEPOSIT''))   deposits_ttls,
        (SELECT SUM(COALESCE(z.amount, 0))
         FROM mcf.mcf_cust_account_transactions z
         WHERE z.account_id =b.account_id
		AND z.status IN (''Paid'', ''Received'', ''Void'')
               AND z.trns_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' 
		AND z.trns_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59''
	AND z.trns_type IN (''WITHDRAWAL'')) withdrawal_ttls
      FROM mcf.mcf_prdt_savings a,
	   mcf.mcf_accounts b
	WHERE a.svngs_product_id = b.product_type_id 
	and b.branch_id = COALESCE(NULLIF({:P_BRNCH_ID},-1),b.branch_id)
      GROUP BY 1, 2,3,4,5) tbl1
 Where (round(COALESCE(tbl1.deposits_ttls,0), 2)!=0 OR round(COALESCE(tbl1.withdrawal_ttls,0), 2)!=0)
 AND tbl1.product_name ilike ''{:P_PRODUCT}''
ORDER BY 1;', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:10', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4,5,6', cols_to_average = '', cols_to_no_frmt = '4,5,6', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='153.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 153)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:10
UPDATE rpt.rpt_reports SET report_name = 'Total Mobilization Per Relations Officer', report_desc = 'CBR-Total Mobilization Per Relations Officer', rpt_sql_query = 'SELECT
	tbl1.staff_id,
 	tbl1.relations_officer,
	SUM(tbl1.deposits_ttls) deposits_ttls,
	SUM(tbl1.wthdrwl_ttls) wthdrwl_ttls,
  SUM(round((tbl1.deposits_ttls - tbl1.wthdrwl_ttls), 2)) net_ttls, 
	org.get_site_code_desc({:P_BRNCH_ID}) branch_param,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE  
 FROM (SELECT DISTINCT
        b.account_id,
        mcf.get_cust_accnt_num(b.account_id)                                                        accnt_num,
        mcf.get_cust_accnt_name(b.account_id)                                                       accnt_name,
        a.lnkd_person_id,
	prs.get_prsn_loc_id(a.lnkd_person_id) staff_id,
        prs.get_prsn_name(a.lnkd_person_id) relations_officer,
        round((SELECT COALESCE(SUM(z.amount), 0)
               FROM mcf.mcf_cust_account_transactions z
               WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'')
                     AND z.trns_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' AND  z.trns_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59'' AND
                     z.trns_type IN (''DEPOSIT'')), 2)                                  deposits_ttls,
        round((SELECT COALESCE(SUM(z.amount), 0)
               FROM mcf.mcf_cust_account_transactions z
               WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') AND
                     z.trns_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' AND  z.trns_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59'' AND
                     z.trns_type IN (''WITHDRAWAL'')), 2)                  wthdrwl_ttls
      FROM mcf.mcf_bulk_trns_hdr a, mcf.mcf_cust_account_transactions b
      WHERE a.bulk_trns_hdr_id = b.bulk_trns_hdr_id
            AND b.trns_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' AND  b.trns_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59''
            AND a.is_batch_cashless != ''1''
	    AND a.lnkd_person_id = COALESCE(NULLIF({:P_PERSON_ID},-1),a.lnkd_person_id)
	    AND a.branch_id = COALESCE(NULLIF({:P_BRNCH_ID},-1),a.branch_id)
      ORDER BY 4) tbl1
 GROUP BY 1,2;', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:10', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '2,3,4', cols_to_average = '', cols_to_no_frmt = '2,3,4', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='152.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 152)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:10
UPDATE rpt.rpt_reports SET report_name = 'Total deposits by product type', report_desc = 'CBR-Total deposits by product type', rpt_sql_query = 'SELECT
  tbl1.product_name,
  round(COALESCE(tbl1.deposits_ttls,0), 2)                          deposits_ttls,
  round(COALESCE(tbl1.withdrawal_ttls,0), 2)                        withdrawal_ttls,
  round((COALESCE(tbl1.deposits_ttls,0) - COALESCE(tbl1.withdrawal_ttls,0)), 2) net_ttls, 
	org.get_site_code_desc({:P_BRNCH_ID}) branch_param,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE  
FROM (SELECT
        a.svngs_product_id,
        a.product_name,
        (SELECT SUM(COALESCE(z.amount, 0))
         FROM mcf.mcf_cust_account_transactions z
         WHERE z.account_id IN (SELECT b.account_id
                                FROM mcf.mcf_accounts b
                                WHERE a.svngs_product_id = b.product_type_id 
				and b.branch_id = COALESCE(NULLIF({:P_BRNCH_ID},-1),b.branch_id)) AND
               z.status IN (''Paid'', ''Received'', ''Void'')
               AND z.trns_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' 
		AND z.trns_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59''
	 AND z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY''))   deposits_ttls,
        (SELECT SUM(COALESCE(z.amount, 0))
         FROM mcf.mcf_cust_account_transactions z
         WHERE z.account_id IN (SELECT b.account_id
                                FROM mcf.mcf_accounts b
                                WHERE a.svngs_product_id = b.product_type_id 
				and b.branch_id = COALESCE(NULLIF({:P_BRNCH_ID},-1),b.branch_id)) AND
               z.status IN (''Paid'', ''Received'', ''Void'')
               AND z.trns_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' 
		AND z.trns_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59''
	AND z.trns_type IN (''WITHDRAWAL'')) withdrawal_ttls
      FROM mcf.mcf_prdt_savings a
      GROUP BY 1, 2) tbl1;', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:10', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '1,2,3', cols_to_average = '', cols_to_no_frmt = '1,2,3', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='151.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 151)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:10
UPDATE rpt.rpt_reports SET report_name = 'List of dormant accounts for a period', report_desc = 'CAR-List of dormant accounts for a period', rpt_sql_query = 'SELECT
  a.account_number,
  a.account_title,
  to_char(to_timestamp((CASE WHEN a.autorization_date = '''' OR a.autorization_date IS NULL
    THEN a.creation_date
   ELSE a.autorization_date END),''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') valid_start_date,
  a.is_dormant,
  round(EXTRACT(epoch  FROM age(now(), to_timestamp(a.last_update_date, ''YYYY-MM-DD HH24:MI:SS'')))/(3600*24))||'' Day(s)'' days_dormant,
  mcf.get_cstacnt_avlbl_bals(a.account_id, to_char(now(), ''YYYY-MM-DD'')) accnt_bals,
  prs.get_prsn_name(a.relationship_officer :: BIGINT) || '' ('' || prs.get_prsn_loc_id(a.relationship_officer :: BIGINT)
  || '')''                         relations_officer, 
	org.get_site_code_desc({:P_BRNCH_ID}) branch_param, 
	prs.get_prsn_name({:P_PERSON_ID}) || '' ('' || prs.get_prsn_loc_id({:P_PERSON_ID}) || '')'' officer_param,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE 
FROM mcf.mcf_accounts a
WHERE a.account_type !=''Loan'' and a.is_dormant = ''Yes''
      AND a.branch_id = COALESCE(NULLIF({:P_BRNCH_ID},-1),a.branch_id)
      AND a.last_update_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' AND a.last_update_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59''
      AND (a.relationship_officer :: BIGINT) = COALESCE(NULLIF({:P_PERSON_ID},-1),(a.relationship_officer :: BIGINT)) 
 ORDER BY 6 DESC', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:10', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '5', cols_to_average = '', cols_to_no_frmt = '5', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='150.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 150)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:10
UPDATE rpt.rpt_reports SET report_name = 'Total account created over a period', report_desc = 'CAR-Total account created over a period', rpt_sql_query = 'SELECT
  a.account_number,
  a.account_title,
  to_char(to_timestamp(a.creation_date, ''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') valid_start_date,
  mcf.get_cstacnt_avlbl_bals(a.account_id, to_char(now(), ''YYYY-MM-DD'')) accnt_bals,
  prs.get_prsn_name(a.relationship_officer :: BIGINT) || '' ('' || prs.get_prsn_loc_id(a.relationship_officer :: BIGINT)
  || '')''                         relations_officer, 
	org.get_site_code_desc({:P_BRNCH_ID}) branch_param, 
	prs.get_prsn_name({:P_PERSON_ID}) || '' ('' || prs.get_prsn_loc_id({:P_PERSON_ID}) || '')'' officer_param,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE ,
mcf.get_customer_data(mcf.get_cust_type(cust_id), cust_id,''cntct_no_mobl'') contact_no 
FROM mcf.mcf_accounts a
WHERE a.account_type !=''Loan'' and a.branch_id = COALESCE(NULLIF({:P_BRNCH_ID},-1),a.branch_id)
	AND (a.relationship_officer :: BIGINT) = COALESCE(NULLIF({:P_PERSON_ID},-1),(a.relationship_officer :: BIGINT)) 
	AND a.creation_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' 
        AND a.creation_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59''
 ORDER BY a.creation_date;', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:10', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='149.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 227)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:10
UPDATE rpt.rpt_reports SET report_name = 'Total Mobilization Per Period', report_desc = 'CBR-Total Mobilization Per Period', rpt_sql_query = 'SELECT
  tbl1.*,
  round((tbl1.deposits_ttls - tbl1.wthdrwl_ttls), 2) net_ttls, 
	org.get_site_code_desc({:P_BRNCH_ID}) branch_param, 
	prs.get_prsn_name({:P_PERSON_ID}) || '' ('' || prs.get_prsn_loc_id({:P_PERSON_ID}) || '')'' officer_param,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE  
FROM (SELECT DISTINCT
        b.account_id mt,
        mcf.get_cust_accnt_num(b.account_id)                                                        accnt_num,
        mcf.get_cust_accnt_name(b.account_id)                                                       accnt_name,
        a.lnkd_person_id m1,
        prs.get_prsn_name(a.lnkd_person_id) || '' ('' || prs.get_prsn_loc_id(a.lnkd_person_id) || '')'' relations_officer,
        round((SELECT COALESCE(SUM(z.amount), 0)
               FROM mcf.mcf_cust_account_transactions z
               WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'')
                     AND z.trns_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59'' AND
                     z.trns_type IN (''DEPOSIT'', ''LOAN_REPAY'')), 2)                                  deposits_ttls,
        round((SELECT COALESCE(SUM(z.amount), 0)
               FROM mcf.mcf_cust_account_transactions z
               WHERE z.account_id = b.account_id AND z.status IN (''Paid'', ''Received'', ''Void'') AND
                     z.trns_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' AND z.trns_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59'' AND
                     z.trns_type IN (''WITHDRAWAL'')), 2)                  wthdrwl_ttls
      FROM mcf.mcf_bulk_trns_hdr a, mcf.mcf_cust_account_transactions b
      WHERE a.bulk_trns_hdr_id = b.bulk_trns_hdr_id
            AND a.batch_date >= to_char(to_timestamp(''{:P_FROM_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 00:00:00'' AND a.batch_date <= to_char(to_timestamp(''{:P_TO_DATE}'',''DD-Mon-YYYY''),''YYYY-MM-DD'') ||'' 23:59:59''
            AND a.is_batch_cashless != ''1''
	    AND a.lnkd_person_id = COALESCE(NULLIF({:P_PERSON_ID},-1),a.lnkd_person_id)
	    AND a.branch_id = COALESCE(NULLIF({:P_BRNCH_ID},-1),a.branch_id)
      ORDER BY 4) tbl1;', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:10', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '5,6,7', cols_to_average = '', cols_to_no_frmt = '5,6,7', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='148.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 148)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:10
UPDATE rpt.rpt_reports SET report_name = 'Detailed staff report per branch/site', report_desc = 'Detailed staff report per branch/site', rpt_sql_query = 'select 
  row_number()
  OVER (
    ORDER BY a.local_id_no ASC ) AS                                                "rownum",
	a.local_id_no, 
	trim(a.title || '' '' || a.first_name || '' '' || a.other_names || '' '' || a.sur_name) full_name, 
	org.get_pos_name(pasn.get_prsn_posid(a.person_id)) pos_name, 
	prs.get_prsn_name(pasn.get_prsn_spvsrid(a.person_id)) spvsr_name,
	pasn.get_prsn_type_date(a.person_id, ''Staff'') date_employed,
	gender, marital_status, trim(cntct_no_tel||'' '' ||cntct_no_mobl) telephone,
	email, 
	org.get_site_code_desc(pasn.get_prsn_siteid(a.person_id)) branch, 
	org.get_site_code_desc({:P_BRANCH_ID}) branch_param 
from prs.prsn_names_nos a 
WHERE pasn.get_prsn_siteid(a.person_id) = COALESCE(NULLIF({:P_BRANCH_ID},-1),pasn.get_prsn_siteid(a.person_id))
AND pasn.get_prsn_type(a.person_id) IN (''Staff'')
order by a.local_id_no;', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:10', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='147.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 228)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:10
UPDATE rpt.rpt_reports SET report_name = 'Staff Disposition', report_desc = 'Staff Disposition', rpt_sql_query = 'SELECT
  row_number()
  OVER (
    ORDER BY a.local_id_no ASC ) AS                                                "rownum",
  a.local_id_no,
  trim(a.title || '' '' || a.first_name || '' '' || a.other_names || '' '' || a.sur_name) full_name,
  org.get_pos_name(pasn.get_prsn_posid(a.person_id))                                pos_name,
  pasn.get_prsn_type(a.person_id)                                                   status
FROM prs.prsn_names_nos a 
  ORDER BY a.local_id_no ASC;', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:10', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='146.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 146)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:10
UPDATE rpt.rpt_reports SET report_name = 'Cooperate Statistics', report_desc = 'Cooperate Statistics', rpt_sql_query = 'SELECT org.get_site_code_desc(a.location_id) branch, 
	a.location_id mt,
	(select count(b.person_id) from prs.prsn_names_nos b where b.gender=''Male'' and pasn.get_prsn_siteid	(b.person_id)=a.location_id and pasn.get_prsn_type(b.person_id) IN (''Staff'')) Male, 
	(select count(c.person_id) from prs.prsn_names_nos c where c.gender=''Female'' and pasn.get_prsn_siteid	(c.person_id)=a.location_id and pasn.get_prsn_type(c.person_id) IN (''Staff'')) Female 
from org.org_sites_locations a 
GROUP BY 1,2 
ORDER BY 1;', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:10', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '2,3', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='145.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 145)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:10
UPDATE rpt.rpt_reports SET report_name = 'Top Loan Account Balances', report_desc = 'CR-Top Loan Account Balances', rpt_sql_query = 'select account_number, 
 account_title,
 account_status,
 brch_nm,
 avl_bal
from (select a.account_id, account_number, account_title, account_status, account_status_reason,
 status, is_dormant, a.branch_id, org.get_site_code_desc(a.branch_id::INTEGER) brch_nm,
 round(mcf.get_cstacnt_unclrd_bals(a.account_id,to_char(now(),''YYYY-MM-DD'')),2) clrd_bal, round(mcf.get_cstacnt_avlbl_bals (a.account_id,to_char(now(),''YYYY-MM-DD'')),2) avl_bal
FROM mcf.mcf_accounts a
 WHERE a.branch_id = COALESCE(NULLIF({:P_BRNCH_ID},-1),a.branch_id)
 and a.account_type =''Loan''
 and status=''Authorized''
 ORDER BY 11 DESC
 LIMIT {:P_LIMIT_BY} OFFSET 0) tbl1;', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:10', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4', cols_to_average = '', cols_to_no_frmt = '4', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='144.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 144)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:11
UPDATE rpt.rpt_reports SET report_name = 'Most Active Accounts by Transaction Count', report_desc = 'CAR-Most Active Accounts by Transaction Count', rpt_sql_query = 'select account_number, 
account_title,
account_status,
brch_nm,
trns_count,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE,
 contact_no   
from (select a.account_id, account_number, account_title, account_status, account_status_reason,
status, is_dormant,a.branch_id, org.get_site_code_desc(a.branch_id::INTEGER) brch_nm, 
(select COUNT(z.acct_trns_id) from mcf.mcf_cust_account_transactions z Where z.account_id=a.account_id and z.status IN (''Paid'',''Received'',''Void'',''Historic'')  
 and z.trns_date>=''{:P_FROM_DATE} 00:00:00'' 
 and z.trns_date<=''{:P_TO_DATE} 23:59:59'') trns_count,
mcf.get_customer_data(mcf.get_cust_type(a.cust_id), a.cust_id,''cntct_no_mobl'') contact_no  
 FROM mcf.mcf_accounts a
 WHERE a.branch_id = COALESCE(NULLIF({:P_BRANCH_ID},-1),a.branch_id) and a.account_type !=''Loan''
 and status=''Authorized''
 ORDER BY 10 DESC
 LIMIT {:P_LIMIT_BY} OFFSET 0) tbl1;', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:11', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='143.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 143)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:11
UPDATE rpt.rpt_reports SET report_name = 'Largest Drawers by WITHDRAWAL Transactions', report_desc = 'CAR-Largest Drawers by WITHDRAWAL Transactions', rpt_sql_query = 'select account_number, 
account_title,
account_status,
brch_nm,
wthdrwl_ttls,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE,
contact_no  
from (select a.account_id, account_number, account_title, account_status, account_status_reason,
status, is_dormant,a.branch_id, org.get_site_code_desc(a.branch_id::INTEGER) brch_nm, 
(select COALESCE(SUM(z.amount),0) from mcf.mcf_cust_account_transactions z Where z.account_id=a.account_id and z.status IN (''Paid'',''Received'',''Void'',''Historic'')  
 and z.trns_date>=''{:P_FROM_DATE} 00:00:00'' 
 and z.trns_date<=''{:P_TO_DATE} 23:59:59'' 
 and z.trns_type IN (''WITHDRAWAL'', ''INVESTMENT'', ''REPAYMENT'')) wthdrwl_ttls,
mcf.get_customer_data(mcf.get_cust_type(a.cust_id), a.cust_id,''cntct_no_mobl'') contact_no   
 FROM mcf.mcf_accounts a
 WHERE a.branch_id = COALESCE(NULLIF({:P_BRANCH_ID},-1),a.branch_id) and a.account_type !=''Loan''
 and status=''Authorized''
 ORDER BY 10 DESC
 LIMIT {:P_LIMIT_BY} OFFSET 0) tbl1;', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:11', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4', cols_to_average = '', cols_to_no_frmt = '4', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='142.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 142)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:11
UPDATE rpt.rpt_reports SET report_name = 'Largest Depositors by DEPOSIT Transactions', report_desc = 'CAR-Largest Depositors by DEPOSIT Transactions', rpt_sql_query = 'select account_number, 
account_title,
account_status,
brch_nm,
deposits_ttls,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE,
 contact_no 
from (select a.account_id, account_number, account_title, account_status, account_status_reason,
status, is_dormant,a.branch_id, org.get_site_code_desc(a.branch_id::INTEGER) brch_nm, 
(select COALESCE(SUM(z.amount),0) from mcf.mcf_cust_account_transactions z 
Where z.account_id=a.account_id and z.status IN (''Paid'',''Received'',''Void'',''Historic'') 
and z.trns_date>=''{:P_FROM_DATE} 00:00:00'' 
and z.trns_date<=''{:P_TO_DATE} 23:59:59'' 
and z.trns_type IN (''DEPOSIT'',''LOAN_REPAY'')) deposits_ttls,
mcf.get_customer_data(mcf.get_cust_type(a.cust_id), a.cust_id,''cntct_no_mobl'') contact_no  
 FROM mcf.mcf_accounts a
 WHERE a.branch_id = COALESCE(NULLIF({:P_BRANCH_ID},-1),a.branch_id) and a.account_type !=''Loan''
 and status=''Authorized''
 ORDER BY 10 DESC
 LIMIT {:P_LIMIT_BY} OFFSET 0) tbl1;', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:11', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4', cols_to_average = '', cols_to_no_frmt = '4', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='141.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 141)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:11
UPDATE rpt.rpt_reports SET report_name = 'Largest Depositors by Account Balance', report_desc = 'CAR-Largest Depositors by Account Balance', rpt_sql_query = 'select account_number, 
account_title,
account_status,
brch_nm,
clrd_bal,
avl_bal,
contact_no
from (select a.account_id, a.account_number, a.account_title, a.account_status, a.account_status_reason,
a.status, a.is_dormant,a.branch_id, org.get_site_code_desc(a.branch_id::INTEGER) brch_nm,
round(mcf.get_cstacnt_unclrd_bals(a.account_id,to_char(now(),''YYYY-MM-DD'')),2) clrd_bal, 
round(mcf.get_cstacnt_avlbl_bals(a.account_id,to_char(now(),''YYYY-MM-DD'')),2) avl_bal,
mcf.get_customer_data(mcf.get_cust_type(a.cust_id), a.cust_id,''cntct_no_mobl'') contact_no  
FROM mcf.mcf_accounts a, mcf.mcf_prdt_savings b
WHERE b.svngs_product_id = a.product_type_id  and a.branch_id = COALESCE(NULLIF({:P_BRANCH_ID},-1),a.branch_id) and a.account_type !=''Loan''
and a.status=''Authorized'' and b.product_name ilike ''{:P_PRODUCT}''
ORDER BY clrd_bal DESC
LIMIT {:P_LIMIT_BY} OFFSET 0) tbl1;', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:11', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4,5', cols_to_average = '', cols_to_no_frmt = '4,5', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='140.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 140)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:11
UPDATE rpt.rpt_reports SET report_name = 'Customer Statement of Account - Staff Only', report_desc = 'CAR-Customer Statement of Account - Staff Only', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 trns_type,
  tbl1.gnrl_data3 comments_desc,
  tbl1.gnrl_data4::NUMERIC debit,
  tbl1.gnrl_data5::NUMERIC credit,
  tbl1.gnrl_data6 branch_nm, 
  to_char(to_timestamp(tbl1.gnrl_data7, ''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trans_date, 
  tbl1.gnrl_data8 ::INTEGER order_no,
  tbl1.gnrl_data9 crncy_nm, 
  tbl1.gnrl_data10 account_title,
  tbl1.gnrl_data11 account_number,
  tbl1.gnrl_data12 cheque_no,
  tbl1.gnrl_data13::NUMERIC opening_bal,
  tbl1.gnrl_data14:: NUMERIC closing_bal, 
  tbl1.gnrl_data15:: NUMERIC trndid, 
  tbl1.gnrl_data16 product_type,
  tbl1.gnrl_data17 cust_type,
    tbl1.gnrl_data13::NUMERIC + (SELECT SUM(b.gnrl_data5::NUMERIC-b.gnrl_data4::NUMERIC) /*SUM(CASE WHEN b.gnrl_data3 ilike ''%REVERSAL%'' AND b.gnrl_data5::NUMERIC > 0 THEN (-1*b.gnrl_data5::NUMERIC) ELSE b.gnrl_data5::NUMERIC END-CASE WHEN b.gnrl_data3 ilike ''%REVERSAL%'' AND b.gnrl_data4::NUMERIC > 0 THEN (-1*b.gnrl_data4::NUMERIC) ELSE b.gnrl_data4::NUMERIC END)*/ FROM rpt.rpt_gnrl_data_storage b
                       WHERE b.gnrl_data1::INTEGER <= tbl1.gnrl_data1::INTEGER
 AND b.gnrl_data3 not ilike ''%BALANCE BF%'' AND b.gnrl_data3 not ilike ''%LIEN Transaction%''
 AND b.gnrl_data3 not ilike ''%Account Balance from TEKSOL%'' AND b.gnrl_data3 not ilike ''%OVEDRAFT%''
                       AND b.rpt_run_id=tbl1.rpt_run_id) bals_afta, 
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE,
  (select sum(gnrl_data4::NUMERIC) FROM rpt.rpt_gnrl_data_storage x
 WHERE x.rpt_run_id=tbl1.rpt_run_id) ttl_debit,
   (select sum(gnrl_data5::NUMERIC) FROM rpt.rpt_gnrl_data_storage y
 WHERE y.rpt_run_id=tbl1.rpt_run_id) ttl_credit
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID}
 AND tbl1.gnrl_data3 not ilike ''%BALANCE BF%''
 ORDER BY tbl1.gnrl_data1::INTEGER DESC', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:11', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '3,4,13,14,16', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='139.jrxml', pre_rpt_sql_query='SELECT mcf.populate_tllr_cash_trns_soa1_only_staff({:rptRunID},
{:P_ACCT_ID},''{:P_FROM_DATE} 00:00:00'',''{:P_TO_DATE} 23:59:59'',
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 139)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:11
UPDATE rpt.rpt_reports SET report_name = 'Outstanding Loans', report_desc = 'CR-Outstanding Loans', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 7 DESC) as "No.", tbl1.*
FROM (SELECT
id_no "Client Number",
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id) END "Client Name",
mcf.get_cust_account_number(account_id) "Account Number", 
b.product_code||''.''||product_desc "Loan Product",
round(c.principal_amount,2) "Original Loan Amount",
round(mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING''),2) "Loan Principal Balance(Without Interest)",
to_char(to_timestamp(disbmnt_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "Loan Disbursement Date",
(Select to_char(to_timestamp(MAX(repay_date),''YYYY-MM-DD''),''DD-Mon-YYYY'') FROM mcf.mcf_loan_schedule x WHERE x.disbmnt_det_id = c.disbmnt_det_id) "Loan Maturity/Expiry Date",
(Select count(*) FROM mcf.mcf_loan_schedule x WHERE x.disbmnt_det_id = c.disbmnt_det_id) "No. Of. Payments Agreed",
to_char(to_timestamp(repay_start_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "Agreed Date of First Principal",
CASE WHEN (Select to_char(to_timestamp(actual_repay_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''YES'',''PARTIAL'')
          AND principal_amnt_paid > 0
    ORDER BY z.repay_date DESC
    LIMIT 1) IS NULL THEN '''' ELSE (Select to_char(to_timestamp(actual_repay_date,''YYYY-MM-DD''),''DD-Mon-YYYY'')  FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''YES'',''PARTIAL'')
          AND principal_amnt_paid > 0
    ORDER BY z.repay_date DESC
    LIMIT 1) END "Date of Last Actual Principal Repayment",
CASE WHEN (Select principal_amnt_paid FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''YES'',''PARTIAL'')
          AND principal_amnt_paid > 0
    ORDER BY z.repay_date DESC
    LIMIT 1) IS NULL THEN 0 ELSE (Select principal_amnt_paid FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''YES'',''PARTIAL'')
          AND principal_amnt_paid > 0
    ORDER BY z.repay_date DESC
    LIMIT 1) END "Amount of Last Actual Principal Repayment",    
CASE WHEN b.loan_repayment_type = ''daily'' THEN ''Daily'' 
WHEN b.loan_repayment_type = ''weekly'' THEN ''Weekly'' 
WHEN b.loan_repayment_type = ''biweekly'' THEN ''Every 2 Weeks'' 
WHEN b.loan_repayment_type = ''halfmonth'' THEN ''Half Monthly'' 
WHEN b.loan_repayment_type = ''month'' THEN ''Monthly'' 
WHEN b.loan_repayment_type = ''quarter'' THEN ''Quarterly'' 
WHEN b.loan_repayment_type = ''halfyear'' THEN ''Semi-Annually''
ELSE ''Yearly'' END "Frequency",  
CASE WHEN (SELECT EXTRACT(DAY FROM (to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD'') - to_timestamp(z.repay_date,''YYYY-MM-DD''))) :: INTEGER
    FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''NO'', ''PARTIAL'')
    ORDER BY z.repay_date ASC
    LIMIT 1) > 0 THEN (SELECT EXTRACT(DAY FROM (to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD'') - to_timestamp(z.repay_date,''YYYY-MM-DD''))) :: INTEGER
    FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''NO'', ''PARTIAL'')
    ORDER BY z.repay_date ASC
    LIMIT 1) ELSE 0.00 END "Days in Arreas",
CASE WHEN a.cust_type = ''Group'' THEN ''Group Guarantee and Cash'' else ''Guarantors and Cash'' END "Type of Security",
CASE WHEN (SELECT round(coalesce(amount,0.00),2) from mcf.mcf_account_liens
WHERE account_id = a.cash_collateral_id
and loan_rqst_id = a.loan_rqst_id) IS NULL THEN round((0.2*c.principal_amount),2) ELSE 
(SELECT round(coalesce(amount,0.00),2) from mcf.mcf_account_liens
WHERE account_id = a.cash_collateral_id
and loan_rqst_id = a.loan_rqst_id) END "Value of Security",
0.00 "Provisions",
org.get_site_name(a.branch_id::integer) "Branch Number",
round(a.apprvd_interest_rate,2) "Interest Rate (%) PA",
prs.get_prsn_name(rcvry_officer_prsn_id) "Loan Officer",
CASE WHEN org.get_site_name(a.branch_id::integer) = ''001'' THEN ''David Nii Boi Clottey''
WHEN org.get_site_name(a.branch_id::integer) = ''002'' THEN ''Emmanuel Kwetey''
WHEN org.get_site_name(a.branch_id::integer) = ''003'' THEN ''Martin Agyeman''
WHEN org.get_site_name(a.branch_id::integer) = ''004'' THEN ''Michael Adjartey Dumanya''
WHEN org.get_site_name(a.branch_id::integer) = ''005'' THEN ''John Otoo''
END "Branch Manager",
to_char(to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''), ''1901-01-01''),''YYYY-MM-DD''),''DD-Mon-YYYY'')  "Param Start Date",
to_char(to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param End Date",
c.disbmnt_det_id,
a.loan_rqst_id
FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
INNER JOIN mcf.mcf_customers f ON a.cust_id = f.cust_id
WHERE  1 = 1
  AND b.currency_id = e.crncy_id
 AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND a.crdt_type = ''Loan''
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
 AND e.iso_code = ''GHS''
  AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(d.disbmnt_date,''YYYY-MM-DD'') END BETWEEN  
to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''1901-01-01''),''YYYY-MM-DD'')
AND to_timestamp(coalesce(NULLIF(''{:p_end_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
ORDER BY c.disbmnt_det_id asc
)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:11', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='138.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 138)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:11
UPDATE rpt.rpt_reports SET report_name = 'Actual Loan Repayments', report_desc = 'CR-Actual Loan Repayments', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 6 DESC) as "No.", tbl1.*
FROM (SELECT org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END                 "Customer Name",
gst.get_pssbl_val(mcf.get_mppd_lov_crncy_id(f.currency_id)) currency,
round(c.principal_amount,2) "Disbursed Amount",
mcf.get_cust_account_number(account_id) "Loan Account Number",
(select round(SUM(amount),2) amount from mcf.mcf_cust_account_transactions
where trns_type IN (''REPAYMENT'',''SETTLEMENT'')
and amount > 0 and status = ''Paid''
AND account_id = repayment_account_id
AND SUBSTR(description,POSITION(''LR'' in description)) = trnsctn_id
and to_timestamp(substr(trns_date,1,10),''YYYY-MM-DD'') = 
to_timestamp(coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'')) "Actual Payment Amount",
coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')) "Pay Date",
CASE WHEN {:branchID} = -1 THEN ''All Branches'' ELSE org.get_site_code_desc({:branchID}) END "Selected Branch",
a.loan_rqst_id, c.disbmnt_det_id
FROM mcf.mcf_loan_request a, mcf.mcf_loan_disbursement_det c, mcf.mcf_loan_disbursement_hdr d, mcf.mcf_loan_schedule e, mcf.mcf_prdt_loans f 
WHERE c.loan_rqst_id = a.loan_rqst_id 
 AND c.disbmnt_hdr_id = d.disbmnt_hdr_id
 AND e.disbmnt_det_id = c.disbmnt_det_id
 AND a.loan_product_id = f.loan_product_id
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
 AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES'' 
 AND crdt_type = ''Loan'' 
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND upper(is_paid) IN (''NO'',''PARTIAL'')
 AND to_timestamp(actual_repay_date,''YYYY-MM-DD'') = to_timestamp(coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'')
ORDER BY c.disbmnt_det_id desc) tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:11', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '4', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='137.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 137)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:11
UPDATE rpt.rpt_reports SET report_name = 'Expected Loan Repayment Today', report_desc = 'CR-Expected Loan Repayment Today', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 6 DESC) as "No.", tbl1.*
FROM ( SELECT org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END "Customer Name",
gst.get_pssbl_val(mcf.get_mppd_lov_crncy_id(f.currency_id)) currency,
c.principal_amount "Disbursed Amount",
mcf.get_cust_account_number(account_id) "Loan Account Number",
(SELECT SUM(round(((principal_amnt - principal_amnt_paid) + (interest_amnt - interest_amnt_paid)),2)) FROM
mcf.mcf_loan_schedule z
WHERE z.disbmnt_det_id = c.disbmnt_det_id
AND upper(z.is_paid) IN (''NO'', ''PARTIAL'')
AND to_timestamp(z.repay_date,''YYYY-MM-DD'') <= to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD'')) "Expected Payment Amount",
to_char(to_timestamp(min(repay_date),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Due Date",
to_char(to_timestamp(COALESCE(NULLIF(''{:p_asat_date}'',''''),mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "As At Date",
CASE WHEN {:branchID} = -1 THEN ''All Branches'' ELSE org.get_site_code_desc({:branchID}) END "Selected Branch",
to_char(to_timestamp(COALESCE(NULLIF(''{:p_start_date}'',''''),''1901-01-01''),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Start Date",
a.loan_rqst_id, c.disbmnt_det_id
FROM mcf.mcf_loan_request a, mcf.mcf_loan_disbursement_det c, mcf.mcf_loan_disbursement_hdr d, mcf.mcf_loan_schedule e, mcf.mcf_prdt_loans f 
WHERE c.loan_rqst_id = a.loan_rqst_id 
AND c.disbmnt_hdr_id = d.disbmnt_hdr_id
AND e.disbmnt_det_id = c.disbmnt_det_id
AND a.loan_product_id = f.loan_product_id
AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES'' 
AND crdt_type = ''Loan'' 
AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
AND upper(is_paid) IN (''NO'',''PARTIAL'')
/*AND to_timestamp(repay_date,''YYYY-MM-DD'') <= to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD'')*/
AND to_timestamp(repay_date,''YYYY-MM-DD'') <= to_timestamp(coalesce(NULLIF(''{:p_asat_date}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(d.disbmnt_date,''YYYY-MM-DD'') END >= to_timestamp(coalesce(NULLIF(''{:p_start_date}'',''''),''1901-01-01''),''YYYY-MM-DD'')
GROUP BY a.loan_rqst_id, c.disbmnt_det_id, a.branch_id, f.currency_id, account_id
ORDER BY c.disbmnt_det_id desc)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:11', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '4', output_type = 'HTML', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='136.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 136)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:11
UPDATE rpt.rpt_reports SET report_name = 'Loan Defaulters List As At', report_desc = 'CR-Loan Defaulters List As At', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 7 DESC) as "No.", tbl1.*
FROM (SELECT
org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END                 "Customer Name",
iso_code "Currency",
round(c.principal_amount,2) "Disbursed Amount",
round((mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY''))) + mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')))),2) "Total In Default",
round((mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''PRINCIPAL PAYMENT AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY''))) + mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''INTEREST PAYMENT AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')))),2) "Total Payment",
CASE WHEN round(mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''TENURE OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY''))),2)%1 <> 0 
THEN round(mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''TENURE OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY''))),2) ELSE round(mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''TENURE OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')))) END "Tenure Outstanding",
COALESCE((SELECT EXTRACT(DAY FROM (to_timestamp(coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY'')),''DD-Mon-YYYY'') - to_timestamp(z.repay_date,''YYYY-MM-DD''))) :: INTEGER
    FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''NO'', ''PARTIAL'')
    ORDER BY z.repay_date ASC
    LIMIT 1),0) "Tenure Outstanding In Days",
b.product_code||''.''||product_desc "Loan Product",
a.apprvd_loan_tenor||'' ''||a.apprvd_loan_tenor_type "Tenure", c.disbmnt_det_id,
mcf.get_cust_account_number(account_id) "Loan Account Number", a.loan_rqst_id,
''{:pAsAtDte}'' "As At Date"
FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
WHERE  1 = 1
  AND b.currency_id = e.crncy_id
 AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND a.crdt_type = ''Loan''
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
/*AND ((mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY''))) > 0
 OR mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD''),''DD-Mon-YYYY''))) > 0) AND (SELECT EXTRACT(DAY FROM (to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD'') - to_timestamp(z.repay_date,''YYYY-MM-DD''))) :: INTEGER
    FROM mcf.mcf_loan_schedule z
    WHERE 1 = 1
          AND z.disbmnt_det_id = c.disbmnt_det_id
          AND upper(z.is_paid) IN (''NO'', ''PARTIAL'')
    ORDER BY z.repay_date ASC
    LIMIT 1)> 0)*/
 AND e.iso_code = ''{:pCurrency}''
ORDER BY c.disbmnt_det_id asc
)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:11', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '4,5,6', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='135.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 135)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:12
UPDATE rpt.rpt_reports SET report_name = 'Customer Statement of Account', report_desc = 'CAR-Customer Statement of Account', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 trns_type,
  tbl1.gnrl_data3 comments_desc,
  tbl1.gnrl_data4::NUMERIC debit,
  tbl1.gnrl_data5::NUMERIC credit,
  tbl1.gnrl_data6 branch_nm, 
  to_char(to_timestamp(tbl1.gnrl_data7, ''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trans_date, 
  tbl1.gnrl_data8 ::INTEGER order_no,
  tbl1.gnrl_data9 crncy_nm, 
  tbl1.gnrl_data10 account_title,
  tbl1.gnrl_data11 account_number,
  tbl1.gnrl_data12 cheque_no,
  tbl1.gnrl_data13::NUMERIC opening_bal,
  tbl1.gnrl_data14:: NUMERIC closing_bal, 
  tbl1.gnrl_data15:: NUMERIC trndid, 
  tbl1.gnrl_data16 product_type,
  tbl1.gnrl_data17 cust_type,
  tbl1.gnrl_data13::NUMERIC + (SELECT SUM(b.gnrl_data5::NUMERIC-b.gnrl_data4::NUMERIC) /*SUM(CASE WHEN b.gnrl_data3 ilike ''%REVERSAL%'' AND b.gnrl_data5::NUMERIC > 0 THEN (-1*b.gnrl_data5::NUMERIC) ELSE b.gnrl_data5::NUMERIC END-CASE WHEN b.gnrl_data3 ilike ''%REVERSAL%'' AND b.gnrl_data4::NUMERIC > 0 THEN (-1*b.gnrl_data4::NUMERIC) ELSE b.gnrl_data4::NUMERIC END)*/ FROM rpt.rpt_gnrl_data_storage b
                       WHERE b.gnrl_data1::INTEGER <= tbl1.gnrl_data1::INTEGER
 AND b.gnrl_data3 not ilike ''%BALANCE BF%'' AND b.gnrl_data3 not ilike ''%LIEN Transaction%''
 AND b.gnrl_data3 not ilike ''%Account Balance from TEKSOL%'' AND b.gnrl_data3 not ilike ''%OVEDRAFT%''
                       AND b.rpt_run_id=tbl1.rpt_run_id) bals_afta, 
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE,
  (select sum(gnrl_data4::NUMERIC) FROM rpt.rpt_gnrl_data_storage x
 WHERE x.rpt_run_id=tbl1.rpt_run_id) ttl_debit,
   (select sum(gnrl_data5::NUMERIC) FROM rpt.rpt_gnrl_data_storage y
 WHERE y.rpt_run_id=tbl1.rpt_run_id) ttl_credit
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID}
  AND tbl1.gnrl_data3 not ilike ''%BALANCE BF%''
 ORDER BY tbl1.gnrl_data1::INTEGER DESC', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:12', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '3,4,13,14,16', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='134.jrxml', pre_rpt_sql_query='SELECT mcf.populate_tllr_cash_trns_soa1_excldn_staff({:rptRunID},
{:P_ACCT_ID},''{:P_FROM_DATE} 00:00:00'',''{:P_TO_DATE} 23:59:59'',
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 134)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:12
UPDATE rpt.rpt_reports SET report_name = 'All Branch Transactions Report', report_desc = 'CBR-All Branch Transactions Report', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 trns_type,
  tbl1.gnrl_data3 comments_desc,
  tbl1.gnrl_data4::NUMERIC amnt_rcvd,
  tbl1.gnrl_data5::NUMERIC amnt_issued,
  tbl1.gnrl_data6 branch_nm,
  tbl1.gnrl_data7 manager,
  tbl1.gnrl_data8 opng_cage_value,
  tbl1.gnrl_data9 clsng_cage_value,
  to_char(to_timestamp(tbl1.gnrl_data10,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trans_date,
  tbl1.gnrl_data11::INTEGER order_no,
  tbl1.gnrl_data12 vlt_name,
  tbl1.gnrl_data13 cage_name, 
  tbl1.gnrl_data14 crncy_nm, 
REPLACE(tbl1.gnrl_data8,'','','''')::NUMERIC + (SELECT SUM(b.gnrl_data4::NUMERIC-b.gnrl_data5::NUMERIC) FROM rpt.rpt_gnrl_data_storage b
                       WHERE b.gnrl_data1::INTEGER <= tbl1.gnrl_data1::INTEGER
                       AND b.rpt_run_id=tbl1.rpt_run_id
			 AND b.gnrl_data3 ilike ''%{:P_TRANS_TYPE}%'') bals_afta,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE, 
  org.get_site_code_desc({:P_BRNCH_ID}) branch_param
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} AND tbl1.gnrl_data3 ilike ''%{:P_TRANS_TYPE}%''
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:12', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '3,4,7,8,14', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='133.jrxml', pre_rpt_sql_query='SELECT mcf.populate_banking_trns({:rptRunID},
{:P_BRNCH_ID},''{:P_FROM_DATE} 00:00:00'',''{:P_TO_DATE} 23:59:59'',
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 133)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:12
UPDATE rpt.rpt_reports SET report_name = 'Automatic System Backup-Linux', report_desc = 'Automatic System Backup-Linux', rpt_sql_query = '#!/bin/sh
echo "import pty; pty.spawn(''/bin/bash'')" > /tmp/asdf.py
#sudo python /tmp/asdf.py
find {:db_ftp_prnt}/{:db_ftp_dir}/ -type f -mmin +300 -name ''*.backup'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/ -type f -mmin +5 -name ''*.tar.gz'' -exec rm {} \;
find {:db_ftp_prnt}/allBkps/ -type f -mmin +5 -name ''*.tar.gz'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/Rpts/ -type f -mmin +300 -name ''*.pdf'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/Rpts/ -type f -mmin +300 -name ''*.xls'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/Rpts/ -type f -mmin +300 -name ''*.html*'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/Rpts/ -type f -mmin +300 -name ''*.csv'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/Logs/ -type f -mmin +300 -name ''*.txt'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/bin/ -type f -mmin +5 -name ''*.sh'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/bin/ -type f -mmin +5 -name ''*.bat'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/bin/log_files/ -type f -mmin +60 -name ''*.rho'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/bin/log_files/adt_trail/ -type f -mmin +60 -name ''*.rho'' -exec rm {} \; 
#tar cvzf {:db_ftp_prnt}/{:db_ftp_dir}/DB_Backups/$(date +%d%m%y_%H%M%S)_www_folder.tar.gz /var/www/yilostargh.com/portal
echo AFTER WWW TAR 
tar cvzf {:db_ftp_prnt}/allBkps/$(date +%d%m%y_%H%M%S)_{:db_ftp_dir}_bkp.tar.gz {:db_ftp_prnt}/{:db_ftp_dir}
echo FILES BACKUP COMPLETED
exit', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:12', rpt_or_sys_prcs = 'Command Line Script-Linux', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 132)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:12
UPDATE rpt.rpt_reports SET report_name = 'Change Group Customer Account to Individual', report_desc = 'Change Group Customer Account to Individual', rpt_sql_query = 'update mcf.mcf_accounts
set cust_type = ''Individual'',
cust_id = (select cust_id from mcf.mcf_customers_ind
where local_id_no = ''{:p_customer_no}'')
where account_number = ''{:p_account_no}'';

update mcf.mcf_accounts_hstrc
set cust_type = ''Individual'',
cust_id = (select cust_id from mcf.mcf_customers_ind
where local_id_no = ''{:p_customer_no}'')
where account_number = ''{:p_account_no}'';', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:12', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 131)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:12
UPDATE rpt.rpt_reports SET report_name = 'Delete COB Outstandings', report_desc = 'Delete COB Outstandings', rpt_sql_query = 'SELECT mcf.xx_cob_delete_notsubmitted_transactions(''{:p_date}'',1);', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:12', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 130)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:12
UPDATE rpt.rpt_reports SET report_name = 'Loan Statement', report_desc = 'CR-Loan Statement', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, tbl1.schedule_id ASC) as "No.",  tbl1.*
FROM (SELECT
org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END                 "Customer Name",
a.cust_type "Customer Type",
b.product_code||''.''||product_desc "Loan Product",
to_char(to_timestamp(f.repay_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "payment_date",
iso_code "Currency",
round(f.begining_bal,2) "Begining Balance",
round(f.interest_amnt,2) "Interest Balance",
round(f.principal_amnt,2) "Principal Balance",
round(f.ending_bal,2) "Ending Balance",
mcf.get_cust_account_number(a.account_id) "Loan Account",
round((f.interest_amnt + f.principal_amnt),2) "Periodic Payment",
f.interest_amnt_paid "Interest Paid",
f.principal_amnt_paid "Principal Paid",
(f.interest_amnt_paid + f.principal_amnt_paid) "Total Paid",
c.principal_amount Principal,
a.apprvd_interest_rate "Interest Rate",
a.apprvd_loan_tenor||'' ''||a.apprvd_loan_tenor_type "Tenure",
round(mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''TENURE OUTSTANDING'') + mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''TENURE PAYMENT'')) Installment,
CASE WHEN b.loan_repayment_type = ''daily'' THEN ''Daily'' 
WHEN b.loan_repayment_type = ''weekly'' THEN ''Weekly'' 
WHEN b.loan_repayment_type = ''biweekly'' THEN ''Every 2 Weeks'' 
WHEN b.loan_repayment_type = ''halfmonth'' THEN ''Half Monthly'' 
WHEN b.loan_repayment_type = ''month'' THEN ''Monthly'' 
WHEN b.loan_repayment_type = ''quarter'' THEN ''Quarterly'' 
WHEN b.loan_repayment_type = ''halfyear'' THEN ''Semi-Annually''
ELSE ''Yearly'' END "Installment Type",
to_char(to_timestamp(c.repay_start_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'') "Start Date",
to_char(to_timestamp(c.repay_end_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'')   "End Date",
mcf.get_cust_account_number(repayment_account_id) "Repayment Account",
coalesce(nullif(to_char(to_timestamp(f.actual_repay_date,''YYYY-MM-DD''),''DD-Mon-YYYY''),''01-Jan-0001''),'''') "Actual Payment Date",
case when to_timestamp(f.repay_date,''YYYY-MM-DD'') <= to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD'') then ''YES'' ELSE ''NO'' END "Installment Due",
CASE WHEN to_timestamp(f.repay_date,''YYYY-MM-DD'') <= to_timestamp(mcf.xx_get_start_of_day_date(1),''YYYY-MM-DD'') then round(((f.interest_amnt + f.principal_amnt) - (f.interest_amnt_paid + f.principal_amnt_paid)),2) ELSE 0.00 END "Arreas",
c.principal_amount,
f.schedule_id
 FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
INNER JOIN mcf.mcf_loan_schedule f ON f.disbmnt_det_id = c.disbmnt_det_id
WHERE  1 = 1
  AND c.disbmnt_det_id = COALESCE(NULLIF({:dsbmntDetID},-1),c.disbmnt_det_id)    
  AND b.currency_id = e.crncy_id
  /*AND c.ttl_tenor_bal > 0*/
  AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
  AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
  AND a.crdt_type = ''Loan'' 
ORDER BY c.disbmnt_det_id asc
)tbl1', owner_module = 'Banking', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:12', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='129.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 129)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:12
UPDATE rpt.rpt_reports SET report_name = 'Batch Transaction Report', report_desc = 'CBR-Batch Transaction Report', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 trns_type,
  tbl1.gnrl_data3 comments_desc,
  tbl1.gnrl_data4::NUMERIC amnt_rcvd,
  tbl1.gnrl_data5::NUMERIC amnt_issued,
  tbl1.gnrl_data6 branch_nm,
  tbl1.gnrl_data7 manager,
  tbl1.gnrl_data8 ttl_amount,
  tbl1.gnrl_data9 clsng_cage_value,
  to_char(to_timestamp(tbl1.gnrl_data10,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trans_date,
  tbl1.gnrl_data11::INTEGER order_no,
  tbl1.gnrl_data12 vlt_name,
  tbl1.gnrl_data13 cage_name, 
  tbl1.gnrl_data14 crncy_nm, 
  (SELECT SUM(b.gnrl_data4::NUMERIC-b.gnrl_data5::NUMERIC) FROM rpt.rpt_gnrl_data_storage b
                       WHERE b.gnrl_data1::INTEGER <= tbl1.gnrl_data1::INTEGER
                       AND b.rpt_run_id=tbl1.rpt_run_id) bals_afta, 
  tbl1.gnrl_data15 sales_exec,
    tbl1.gnrl_data16 rmrk_cmmnt
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID}
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:12', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '3,4,7,8,14', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='128.jrxml', pre_rpt_sql_query='SELECT mcf.populate_batch_trns({:rptRunID},{:P_BATCH_ID},{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 128)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:12
UPDATE rpt.rpt_reports SET report_name = 'Process Batch Transaction', report_desc = 'CBR-Process Batch Transaction', rpt_sql_query = 'select mcf.process_batch_trns({:batch_id}, {:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:12', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='SELECT 1/(CASE WHEN mcf.chk_updt_batch_prcsng(bulk_trns_hdr_id) = ''1''
  THEN 0 ELSE 1 END) processing_ongoing 
 FROM mcf.mcf_bulk_trns_hdr 
 WHERE bulk_trns_hdr_id = COALESCE(NULLIF({:batch_id}, -1), bulk_trns_hdr_id)
 AND (CASE WHEN {:batch_id}<=0 THEN processing_ongoing ELSE ''0'' END)!=''1''
 AND (created_by = {:usrID} OR (branch_id IN ( SELECT r.location_id
 FROM org.org_sites_locations r
 WHERE org.does_prsn_hv_crtria_id(sec.get_usr_prsn_id({:usrID}), r.allwd_group_value :: BIGINT, r.allwd_group_type) > 0)))', pst_rpt_sql_query='' WHERE (report_id = 127)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:12
UPDATE rpt.rpt_reports SET report_name = 'Teller''s Call Over Report', report_desc = 'CBR-Teller''s Call Over Report', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 trns_type,
  tbl1.gnrl_data3 comments_desc,
  tbl1.gnrl_data4::NUMERIC amnt_rcvd,
  tbl1.gnrl_data5::NUMERIC amnt_issued,
  tbl1.gnrl_data6 branch_nm,
  tbl1.gnrl_data7 manager,
  tbl1.gnrl_data8 opng_cage_value,
  tbl1.gnrl_data9 clsng_cage_value,
  to_char(to_timestamp(tbl1.gnrl_data10,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trans_date,
  tbl1.gnrl_data11::INTEGER order_no,
  tbl1.gnrl_data12 vlt_name,
  tbl1.gnrl_data13 cage_name, 
  tbl1.gnrl_data14 crncy_nm, 
REPLACE(tbl1.gnrl_data8,'','','''')::NUMERIC + (SELECT SUM(b.gnrl_data4::NUMERIC-b.gnrl_data5::NUMERIC) FROM rpt.rpt_gnrl_data_storage b
                       WHERE b.gnrl_data1::INTEGER <= tbl1.gnrl_data1::INTEGER
                       AND b.rpt_run_id=tbl1.rpt_run_id) bals_afta,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE, 
  org.get_site_code_desc(mcf.get_vlt_brnch_id(mcf.get_cage_vlt_id({:P_CAGE_ID}))) branch_param, 
  inv.get_shelve_name({:P_CAGE_ID}) cage_param,
  inv.get_store_name(mcf.get_cage_vlt_id({:P_CAGE_ID})) vault_param,
  prs.get_prsn_name(inv.get_shelve_mngr_id({:P_CAGE_ID})) || '' ('' ||
  prs.get_prsn_loc_id(inv.get_shelve_mngr_id({:P_CAGE_ID})) || '')'' manager_param 
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID}
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:12', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '3,4,7,8,14', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='126.jrxml', pre_rpt_sql_query='SELECT mcf.populate_tllr_cash_trns({:rptRunID},
{:P_CAGE_ID},''{:P_FROM_DATE} 00:00:00'',''{:P_TO_DATE} 23:59:59'',
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 126)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:13
UPDATE rpt.rpt_reports SET report_name = 'Loan Schedule', report_desc = 'CR-Loan Schedule', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, tbl1.schedule_id ASC) as "No.",  tbl1.*
FROM (SELECT
org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END                 "Customer Name",
a.cust_type "Customer Type",
b.product_code||''.''||product_desc "Loan Product",
to_char(to_timestamp(f.repay_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "payment_date",
iso_code "Currency",
round(f.begining_bal,2) "Begining Balance",
round(f.interest_amnt,2) "Interest Balance",
round(f.principal_amnt,2) "Principal Balance",
round(f.ending_bal,2) "Ending Balance",
mcf.get_cust_account_number(a.account_id) "Loan Account",
round((f.interest_amnt + f.principal_amnt),2) "Periodic Payment",
f.schedule_id
 FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
INNER JOIN mcf.mcf_loan_schedule f ON f.disbmnt_det_id = c.disbmnt_det_id
WHERE  1 = 1
  AND c.disbmnt_det_id = COALESCE(NULLIF({:dsbmntDetID},-1),c.disbmnt_det_id)    
  AND b.currency_id = e.crncy_id
  /*AND c.ttl_tenor_bal > 0*/
  AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
  AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
  AND a.crdt_type = ''Loan'' 
ORDER BY c.disbmnt_det_id asc
)tbl1', owner_module = 'Banking', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:13', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '8,9', cols_to_average = '', cols_to_no_frmt = '7,8,9,10,12', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='125.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 125)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:13
UPDATE rpt.rpt_reports SET report_name = 'Past Due Loan Recovery', report_desc = 'CR-Past Due Loan Recovery', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 7 DESC) as "No.", tbl1.*
FROM (SELECT
org.get_site_code_desc(a.branch_id::integer) branch,
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END                 "Customer Name",
a.cust_type "Customer Type",
a.crdt_type "Credit Type",
b.product_code||''.''||product_desc "Loan Product",
iso_code "Currency",
c.principal_amount "Disbursed Amount",
a.apprvd_interest_rate "Interest Rate",
a.apprvd_loan_tenor||'' ''||a.apprvd_loan_tenor_type "Tenure",
round(mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''TENURE OUTSTANDING'') + mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''TENURE PAYMENT'')) "Installment",
CASE WHEN b.loan_repayment_type = ''daily'' THEN ''Daily'' 
WHEN b.loan_repayment_type = ''weekly'' THEN ''Weekly'' 
WHEN b.loan_repayment_type = ''biweekly'' THEN ''Every 2 Weeks'' 
WHEN b.loan_repayment_type = ''halfmonth'' THEN ''Half Monthly'' 
WHEN b.loan_repayment_type = ''month'' THEN ''Monthly'' 
WHEN b.loan_repayment_type = ''quarter'' THEN ''Quarterly'' 
WHEN b.loan_repayment_type = ''halfyear'' THEN ''Semi-Annually''
ELSE ''Yearly'' END "Installment Type",
to_char(to_timestamp(c.repay_start_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'') "Start Date",
to_char(to_timestamp(c.repay_end_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'')   "End Date",
mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(now(),''DD-Mon-YYYY''))) "Principal Outstanding",
mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(now(),''DD-Mon-YYYY''))) "Interest Outstanding",
(mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(now(),''DD-Mon-YYYY''))) + mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(now(),''DD-Mon-YYYY'')))) "Total Outstanding",
CASE WHEN round(mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''TENURE OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(now(),''DD-Mon-YYYY''))),2)%1 <> 0 
THEN round(mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''TENURE OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(now(),''DD-Mon-YYYY''))),2) ELSE round(mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''TENURE OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(now(),''DD-Mon-YYYY'')))) END "Tenure Outstanding",
mcf.get_cust_account_number(repayment_account_id) "Repayment Account",
mcf.get_cust_account_title(repayment_account_id) "Repayment Account Title",
mcf.get_cust_account_number(account_id) "Loan Account Number"
FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
WHERE  1 = 1
  AND b.currency_id = e.crncy_id
 AND c.ttl_tenor_bal > 0 AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND a.crdt_type = ''Loan''
 AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
AND (mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(now(),''DD-Mon-YYYY''))) > 0
 OR mcf.calc_loan_ttl_bal_asat(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING AS AT'',coalesce(NULLIF(''{:pAsAtDte}'',''''),to_char(now(),''DD-Mon-YYYY''))) > 0)
ORDER BY c.disbmnt_det_id asc
)tbl1', owner_module = 'Banking', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:13', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '14,15,16', cols_to_average = '', cols_to_no_frmt = '7,8,14,15,16', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 124)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:13
UPDATE rpt.rpt_reports SET report_name = 'Loan Applications', report_desc = 'CR-Loan Applications', rpt_sql_query = 'SELECT
row_number() over (order by 1 ASC, 2 ASC, 7 DESC) as "No.", tbl1.*
FROM (SELECT
org.get_site_code_desc(a.branch_id::integer) "Branch",
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END "Customer Name",
a.cust_type "Customer Type",
a.crdt_type "Credit Type",
b.product_code||''.''||product_desc "Loan Product",
iso_code "Currency",
CASE WHEN upper(a.status) = ''APPROVED'' THEN a.loan_amount ELSE a.approved_amount END "Principal",
CASE WHEN upper(a.status) = ''APPROVED'' THEN a.interest_rate ELSE a.apprvd_interest_rate END "Interest Rate",
CASE WHEN upper(a.status) = ''APPROVED'' THEN a.loan_tenor||'' ''||a.loan_tenor_type ELSE a.apprvd_loan_tenor||'' ''||a.apprvd_loan_tenor_type END "Tenure",
mcf.get_cust_account_number(repayment_account_id) "Repayment Account",
mcf.get_cust_account_title(repayment_account_id) "Repayment Account Title",
prs.get_prsn_name(rcvry_officer_prsn_id) "Credit Officer",
to_char(to_timestamp(application_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') "Application Date",
a.status "Approval Status",
CASE WHEN {:branchID} > 0 THEN org.get_site_code_desc({:branchID}) ELSE ''All Branches'' END "sltdBranch",
to_char(to_timestamp(coalesce(NULLIF(''{:pStartDte}'',''''), ''1901-01-01''),''YYYY-MM-DD''),''DD-Mon-YYYY'')  "Param Start Date",
to_char(to_timestamp(coalesce(NULLIF(''{:pEndDte}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param End Date"
FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
WHERE  1 = 1
AND b.currency_id = e.crncy_id
AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
AND repayment_type = ''Account Deductions'' 
AND UPPER(a.status) = COALESCE(NULLIF(''{:apprvlStatus}'',''%''),UPPER(a.status)) 
AND a.crdt_type =  COALESCE(NULLIF(''{:crdtType}'',''%''),a.crdt_type )
AND to_timestamp(application_date,''YYYY-MM-DD'') between 
to_timestamp(coalesce(NULLIF(''{:pStartDte}'',''''),''1901-01-01''),''YYYY-MM-DD'')
AND to_timestamp(coalesce(NULLIF(''{:pEndDte}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
ORDER BY 1 ASC, 2 ASC, a.approved_amount DESC
)tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:13', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 123)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:13
UPDATE rpt.rpt_reports SET report_name = 'Daily Loan Disbursements', report_desc = 'CR-Daily Loan Disbursements', rpt_sql_query = 'SELECT
row_number() over (order by 7 desc) as "No.", tbl1.*
FROM (SELECT
org.get_site_code_desc(a.branch_id::integer) "Branch",
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(grp_applicant_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END                 "Customer Name",
a.cust_type "Customer Type",
a.crdt_type "Credit Type",
b.product_code||''.''||product_desc "Loan Product",
iso_code "Currency",
c.principal_amount "Disbursed Amount",
a.apprvd_interest_rate  "Interest Rate",
a.apprvd_loan_tenor||'' ''||a.apprvd_loan_tenor_type tenure,
round(mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''TENURE OUTSTANDING'') + mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''TENURE PAYMENT'')) Installment,
CASE WHEN b.loan_repayment_type = ''daily'' THEN ''Daily'' 
WHEN b.loan_repayment_type = ''weekly'' THEN ''Weekly'' 
WHEN b.loan_repayment_type = ''biweekly'' THEN ''Every 2 Weeks'' 
WHEN b.loan_repayment_type = ''halfmonth'' THEN ''Half Monthly'' 
WHEN b.loan_repayment_type = ''month'' THEN ''Monthly'' 
WHEN b.loan_repayment_type = ''quarter'' THEN ''Quarterly'' 
WHEN b.loan_repayment_type = ''halfyear'' THEN ''Semi-Annually''
ELSE ''Yearly'' END "Installment Type",
to_char(to_timestamp(c.repay_start_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'') "Start Date",
to_char(to_timestamp(c.repay_end_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'')   "End DAte",
mcf.get_cust_account_number(repayment_account_id) "Repayment Account",
mcf.get_cust_account_title(repayment_account_id) "Repayment Accoun Title",
mcf.get_cust_account_number(account_id) "Loan Account Number",
prs.get_prsn_name(rcvry_officer_prsn_id) "Credit Officer",
prs.get_prsn_name(sec.get_usr_prsn_id(d.created_by::INTEGER)) "Disbursed By",
CASE WHEN segment8_dataload != '''' THEN to_char(to_timestamp(segment8_dataload,''YYYY-MM-DD''),''DD-Mon-YYYY'') ELSE to_char(to_timestamp(d.disbmnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY'') END "Disbursement Date",
CASE WHEN {:branchID} > 0 THEN org.get_site_code_desc({:branchID}) ELSE ''All Branches'' END "sltdBranch",
to_char(to_timestamp(coalesce(NULLIF(''{:pStartDte}'',''''), ''1901-01-01''),''YYYY-MM-DD''),''DD-Mon-YYYY'')  "Param Start Date",
to_char(to_timestamp(coalesce(NULLIF(''{:pEndDte}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD''),''DD-Mon-YYYY'') "Param End Date"
FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
WHERE  1 = 1
  AND b.currency_id = e.crncy_id
AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
 AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND a.crdt_type =  COALESCE(NULLIF(''{:crdtType}'',''%''),a.crdt_type )
  AND CASE WHEN segment8_dataload != '''' THEN to_timestamp(segment8_dataload,''YYYY-MM-DD'') ELSE to_timestamp(substr(disbmnt_date,1,10),''YYYY-MM-DD'') END between
  to_timestamp(coalesce(NULLIF(''{:pStartDte}'',''''),''1901-01-01''),''YYYY-MM-DD'')
AND to_timestamp(coalesce(NULLIF(''{:pEndDte}'',''''), mcf.xx_get_start_of_day_date(1)),''YYYY-MM-DD'')
ORDER BY 1 ASC, 2 ASC, c.principal_amount DESC
)tbl1', owner_module = 'Banking', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:13', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '7', cols_to_average = '', cols_to_no_frmt = '7,8', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 122)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:13
UPDATE rpt.rpt_reports SET report_name = '50 Largest Loans', report_desc = 'CR-50 Largest Loans', rpt_sql_query = 'SELECT
row_number() over (order by tbl1.principal desc) as "No.", tbl1.*
FROM (SELECT  
org.get_site_code_desc(a.branch_id::integer) Branch,
CASE WHEN a.cust_type = ''Group'' AND a.grp_cust_id > 0 THEN mcf.get_customer_name(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')''||'' [Group: ''||mcf.get_customer_name(a.cust_type, a.grp_cust_id)||'']''
ELSE mcf.get_customer_name_LastNameFirst(a.cust_type, a.cust_id)||'' (''||mcf.get_cust_local_idno(a.cust_id)||'')'' END                 "Customer Name",
a.cust_type "Customer Type",
a.crdt_type "Credit Type",
iso_code "Currency",
c.principal_amount Principal,
a.apprvd_interest_rate "Interest Rate",
a.apprvd_loan_tenor||'' ''||a.apprvd_loan_tenor_type "Tenure",
to_char(to_timestamp(c.repay_start_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'') "Start Date",
to_char(to_timestamp(c.repay_end_date, ''YYYY-MM-DD''), ''DD-Mon-YYYY'')   "End Date",
mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING'') "Principal Outstanding",
mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING'') "Interest Outstanding",
(mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING'') + mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING'')) "Total Outstanding"
FROM mcf.mcf_loan_request a INNER JOIN mcf.mcf_prdt_loans b ON a.loan_product_id = b.loan_product_id
INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
INNER JOIN mcf.mcf_currencies e ON b.currency_id = e.crncy_id
WHERE  1 = 1
  AND b.currency_id = e.crncy_id
AND a.branch_id = COALESCE(NULLIF({:branchID},-1),a.branch_id)
 AND c.ttl_tenor_bal > 0 AND repayment_type = ''Account Deductions'' AND is_disbursed = ''YES''
 AND a.status = ''Approved'' AND d.status = ''Disbursed'' AND c.principal_amount > 0
 AND a.crdt_type = ''Loan''
 AND (mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''PRINCIPAL OUTSTANDING'') + mcf.calc_loan_ttl_bal(a.loan_rqst_id::INTEGER,''INTEREST OUTSTANDING'')) > 0
ORDER BY c.principal_amount DESC LIMIT 50
) tbl1', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:13', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6,11,12,13', cols_to_average = '', cols_to_no_frmt = '6,7,11,12,13', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 121)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:13
UPDATE rpt.rpt_reports SET report_name = 'Tellers Cash Transactions Report', report_desc = 'CBR-Tellers Cash Transactions Report', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 trns_type,
  tbl1.gnrl_data3 comments_desc,
  tbl1.gnrl_data4::NUMERIC amnt_rcvd,
  tbl1.gnrl_data5::NUMERIC amnt_issued,
  tbl1.gnrl_data6 branch_nm,
  tbl1.gnrl_data7 manager,
  tbl1.gnrl_data8 opng_cage_value,
  tbl1.gnrl_data9 clsng_cage_value,
  to_char(to_timestamp(tbl1.gnrl_data10,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trans_date,
  tbl1.gnrl_data11::INTEGER order_no,
  tbl1.gnrl_data12 vlt_name,
  tbl1.gnrl_data13 cage_name, 
  tbl1.gnrl_data14 crncy_nm, 
REPLACE(tbl1.gnrl_data8,'','','''')::NUMERIC + (SELECT SUM(b.gnrl_data4::NUMERIC-b.gnrl_data5::NUMERIC) FROM rpt.rpt_gnrl_data_storage b
                       WHERE b.gnrl_data1::INTEGER <= tbl1.gnrl_data1::INTEGER
                       AND b.rpt_run_id=tbl1.rpt_run_id 
		       AND b.gnrl_data13 !='''') bals_afta,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE, 
  org.get_site_code_desc(mcf.get_vlt_brnch_id(mcf.get_cage_vlt_id({:P_CAGE_ID}))) branch_param, 
  inv.get_shelve_name({:P_CAGE_ID}) cage_param,
  inv.get_store_name(mcf.get_cage_vlt_id({:P_CAGE_ID})) vault_param,
  prs.get_prsn_name(inv.get_shelve_mngr_id({:P_CAGE_ID})) || '' ('' ||
  prs.get_prsn_loc_id(inv.get_shelve_mngr_id({:P_CAGE_ID})) || '')'' manager_param   
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} AND tbl1.gnrl_data13 !='''' 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:13', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '3,4,7,8,14', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='119.jrxml', pre_rpt_sql_query='SELECT mcf.populate_tllr_cash_trns({:rptRunID},
{:P_CAGE_ID},''{:P_FROM_DATE} 00:00:00'',''{:P_TO_DATE} 23:59:59'',
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 119)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:13
UPDATE rpt.rpt_reports SET report_name = 'Execute Leave Plan', report_desc = 'Execute Leave Plan', rpt_sql_query = 'select pay.auto_execute_leave_plns({:p_for_prsn_id}, {:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:13', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 118)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:13
UPDATE rpt.rpt_reports SET report_name = 'End of Year Process Runs', report_desc = 'End of Year Process Runs', rpt_sql_query = 'select mcf.mcf_run_end_of_day({:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:13', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 117)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:13
UPDATE rpt.rpt_reports SET report_name = 'End of Month Process Runs', report_desc = 'End of Month Process Runs', rpt_sql_query = 'select mcf.mcf_run_end_of_day({:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:13', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 116)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:14
UPDATE rpt.rpt_reports SET report_name = 'Post GL Transaction Batches-Java', report_desc = 'Post GL Transaction Batches-Java', rpt_sql_query = 'SELECT 
batch_id, 
batch_name, 
batch_source, 
batch_status mt, 

CASE WHEN batch_status=''1'' THEN ''POSTED'' ELSE ''NOT POSTED'' END "Posting Status", 

batch_description,  
org_id m1, 
avlbl_for_postng m2, 

(select count(1) from accb.accb_trnsctn_details y where y.batch_id=a.batch_id)  "No. of Trns.  "
 
FROM accb.accb_trnsctn_batches a 

WHERE org_id={:orgID} and batch_status=''0'' and avlbl_for_postng=''1'' 

and ((select count(1) from accb.accb_trnsctn_details y where y.batch_id=a.batch_id)>0 or batch_source=''Period Close Process'') 
and age(now(), 
to_timestamp(last_update_date,''YYYY-MM-DD HH24:MI:SS''))>= interval ''5 second'' 

ORDER BY 1 ASC LIMIT 500 OFFSET 0;', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:14', rpt_or_sys_prcs = 'Posting of GL Trns. Batches', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 115)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:14
UPDATE rpt.rpt_reports SET report_name = 'Execute Standing Order/Transfer', report_desc = 'CBR-Execute Standing Order/Transfer', rpt_sql_query = 'select mcf.execute_standing_order({:ordr_trnsfr_id}, {:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:14', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='SELECT 1/(CASE WHEN mcf.chk_updt_order_prcsng(stndn_order_id) = ''1''
  THEN 0 ELSE 1 END) processing_ongoing
 FROM mcf.mcf_standing_orders   
      WHERE stndn_order_id = COALESCE({:ordr_trnsfr_id}, stndn_order_id)', pst_rpt_sql_query='' WHERE (report_id = 114)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:14
UPDATE rpt.rpt_reports SET report_name = 'Automatic Database Backup-Linux', report_desc = 'Automatic Database Backup-Linux', rpt_sql_query = '#!/bin/sh
echo "import pty; pty.spawn(''/bin/bash'')" > /tmp/asdf.py
#sudo python /tmp/asdf.py
#su postgres
#export PGPASSWORD="{:db_password}"
export MYDB=postgresql://postgres:{:db_password}@127.0.0.1:5432/{:dbase_name} 
#echo $PGPASSWORD
pg_dump -F c -b -v -f "{:db_ftp_prnt}/{:db_ftp_dir}/DB_Backups/$(date +%d%m%y_%H%M%S)_{:dbase_name}.backup" --dbname=$MYDB 
echo DB BACKUP COMPLETED 
find {:db_ftp_prnt}/{:db_ftp_dir}/ -type f -mmin +600 -name ''*.backup'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/ -type f -mmin +5 -name ''*.tar.gz'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/Rpts/ -type f -mmin +600 -name ''*.pdf'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/Rpts/ -type f -mmin +600 -name ''*.xls'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/Rpts/ -type f -mmin +600 -name ''*.html*'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/Rpts/ -type f -mmin +600 -name ''*.csv'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/Logs/ -type f -mmin +600 -name ''*.txt'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/bin/ -type f -mmin +50 -name ''*.sh'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/bin/ -type f -mmin +50 -name ''*.bat'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/bin/log_files/ -type f -mtime +300 -name ''*.rho'' -exec rm {} \;
find {:db_ftp_prnt}/{:db_ftp_dir}/bin/log_files/adt_trail/ -type f -mtime +300 -name ''*.rho'' -exec rm {} \; 
#echo AFTER WWW TAR 
#tar cvzf {:db_ftp_prnt}/allBkps/$(date +%d%m%y_%H%M%S)_{:db_ftp_dir}_bkp.tar.gz {:db_ftp_prnt}/{:db_ftp_dir}
echo FILES BACKUP COMPLETED
exit', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:14', rpt_or_sys_prcs = 'Command Line Script-Linux', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 113)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:14
UPDATE rpt.rpt_reports SET report_name = 'Teller Transaction Receipt (A4)', report_desc = 'CBR-Teller Transaction Receipt (A4)', rpt_sql_query = 'SELECT a.acct_trns_id, 
	b.account_number account_number,
	b.account_title,
            to_char(to_timestamp(a.trns_date, ''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trns_date, 
	a.trns_type, 
           a.amount, 
           trim(to_char(a.amount,''999G999G999G999G999G999G999D00'')) amount1, 
           gst.get_pssbl_val(c.mapped_lov_crncy_id) crncy_nm, 
            a.trns_no, 
            org.get_site_code_desc(a.branch_id::integer) branch, 
            a.doc_type, a.doc_no, 
            CASE WHEN a.trns_person_type=''Others'' THEN a.trns_person_name ELSE a.trns_person_type END trns_by, 
            a.trns_person_tel_no,
            a.trns_person_address, 
            a.trns_person_id_type, 
            a.trns_person_id_number,
            sec.get_usr_name(a.created_by) user_nm,
            (SELECT SUM(COALESCE((y.value * z.qty),0))
          FROM mcf.mcf_currency_denominations y, mcf.mcf_account_trns_cash_analysis z
          WHERE y.crncy_denom_id = z.denomination_id 
           AND z.acct_trns_id = {:trns_id} AND COALESCE(z.qty,0)!=0 ) ttl_cash_amnt,
            (SELECT count(1)
          FROM mcf.mcf_currency_denominations y, mcf.mcf_account_trns_cash_analysis z
          WHERE y.crncy_denom_id = z.denomination_id 
           AND z.acct_trns_id = {:trns_id} AND COALESCE(z.qty,0)!=0 ) ttl_cash_cnt,
           (SELECT SUM(f.amount)
            FROM mcf.mcf_cust_account_trns_cheques f 
			WHERE f.acct_trns_id ={:trns_id}) ttl_chq_amnt,
           (SELECT count(1)
            FROM mcf.mcf_cust_account_trns_cheques f 
			WHERE f.acct_trns_id ={:trns_id}) ttl_chq_cnt
           FROM mcf.mcf_cust_account_transactions a
            LEFT OUTER JOIN mcf.mcf_accounts b ON (a.account_id = b.account_id)
            LEFT OUTER JOIN mcf.mcf_currencies c ON (b.currency_id = c.crncy_id)
            WHERE ((a.acct_trns_id ={:trns_id}  and a.acct_trns_id >0 ))', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:14', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='112.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 112)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:14
UPDATE rpt.rpt_reports SET report_name = 'VMS Bin Card Report', report_desc = 'VMS Bin Card Report', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data19 trns_type,
  tbl1.gnrl_data2 item_code,
  tbl1.gnrl_data9 comments_desc,
  tbl1.gnrl_data5 tray,
  tbl1.gnrl_data6 bundle,
  tbl1.gnrl_data7 wad,
  tbl1.gnrl_data8 pcs,
  tbl1.gnrl_data11::NUMERIC amnt_rcvd,
  tbl1.gnrl_data12::NUMERIC amnt_issued,
  tbl1.gnrl_data13 branch_nm,
  tbl1.gnrl_data14 manager,
  tbl1.gnrl_data15 owned_by,
  tbl1.gnrl_data16 cage_value,
  tbl1.gnrl_data10 trans_date,
  tbl1.gnrl_data17::INTEGER order_no,
  tbl1.gnrl_data3 vlt_name,
  tbl1.gnrl_data4 cage_name, 
  tbl1.gnrl_data18 crncy_nm, 
  (SELECT SUM(b.gnrl_data11::NUMERIC-b.gnrl_data12::NUMERIC) FROM rpt.rpt_gnrl_data_storage b
                       WHERE b.gnrl_data1::INTEGER <= tbl1.gnrl_data1::INTEGER
                       AND b.rpt_run_id=tbl1.rpt_run_id) bals_afta,
  ''{:P_FROM_DATE}'' P_FROM_DATE,
  ''{:P_TO_DATE}'' P_TO_DATE
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID}
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Vault Management', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:14', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='111.jrxml', pre_rpt_sql_query='SELECT vms.populate_bin_card({:rptRunID}, {:P_CAGE_ID}, {:P_ITM_ID},''{:P_FROM_DATE} 00:00:00'',''{:P_TO_DATE} 23:59:59'',
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 111)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:14
UPDATE rpt.rpt_reports SET report_name = 'VMS DEP/WITHDRAW Voucher', report_desc = 'VMS DEP/WITHDRAW Voucher', rpt_sql_query = 'SELECT a.trans_hdr_id, 
        to_char(to_timestamp(a.trans_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trnsDate,
       a.trans_number, 
       a.trans_type, 
       CASE WHEN a.trans_type=''Withdrawals'' THEN ''Paid By:'' WHEN a.trans_type=''Deposits'' THEN ''Received By:'' ELSE ''Authorized By:'' END signature_lbl,
       a.comments_desc, 
       CASE WHEN a.cstmr_spplr_id>0 THEN scm.get_cstmr_splr_name(a.cstmr_spplr_id) ELSE ''N/A'' END cstmr_name,
       scm.get_cstmr_splr_site_name(a.cstmr_spplr_site_id) site_name, 
       a.approval_status,
       a.next_aproval_action, 
       a.validity_status, 
       a.voided_trns_hdr_id, 
       a.voided_trns_type,  
       prs.get_prsn_name(sec.get_usr_prsn_id(a.created_by)) prpard_by,
       prs.get_prsn_name(a.approved_by_prsn_id) || ''(''||prs.get_prsn_loc_id(a.approved_by_prsn_id)||'')'' authrzer,  
       a.mtchd_athrzr_lmt_id, 
       org.get_site_code_desc(a.trns_loc_site_id) brnch_loc, 
       a.ttl_trns_amount,
       trim(to_char(a.ttl_trns_amount,''999G999G999G999G999G999G999D00'')) doc_net_ttl, 
       inv.get_store_name(a.src_store_vault_id) srcVltNm,
       inv.get_shelve_name(a.src_cage_shelve_id) srcCageNm,
       inv.get_store_name(a.dest_store_vault_id) destVltNm,
       inv.get_shelve_name(a.dest_cage_shelve_id) destCageID,
       gst.get_pssbl_val(a.crncy_id) curr, 
       gst.get_pssbl_val(a.pymnt_crncy_id),        
       a.pymnt_ttl_amnt, 
       a.avrg_exchange_rate, 
       a.reversal_reason, 
       a.trns_prsntd_by_person, 
       prs.get_prsn_name(a.trns_officiated_by) || ''(''||prs.get_prsn_loc_id(a.trns_officiated_by)||'')'' supervisor,
	a.cheque_slip_no,
        COALESCE(f.site_name,'' '') site_name, 
        COALESCE(f.billing_address,'' '') billing_address, 
        COALESCE(f.ship_to_address,'' '') ship_to_address,
        e.trans_det_ln_id,
		b.item_code, 
        inv.get_uom_qty(b.item_id::integer,  e.doc_qty, ''tray'') tray,
        inv.get_uom_qty(b.item_id::integer,  e.doc_qty, ''bundle'') bundle,
        inv.get_uom_after_qty(b.item_id::integer,  e.doc_qty, ''bundle'') pcs,  
                e.doc_qty,
                    e.unit_value, 
                    (e.doc_qty * e.unit_value) amnt, 
                    e.validity_status, 
                    e.voided_src_line_id, 
                    e.pymt_cur_exchng_rate,  
                   c.uom_name, 
                   d.cat_name, 
                   b.item_type, 
                   CASE WHEN e.dest_cage_shelve_id>0 and e.src_cage_shelve_id>0 THEN e.dst_balance_afta_trns
			WHEN e.src_cage_shelve_id>0 THEN e.src_balance_afta_trns ELSE e.dst_balance_afta_trns 	                END running_balance,
                   e.src_balance_b4_trns,
                   e.dst_balance_b4_trns,
                   e.src_balance_afta_trns,
                   e.dst_balance_afta_trns, 
			(CASE WHEN e.src_cage_shelve_id>0 THEN e.src_itm_state_clsfctn  
				ELSE e.dst_itm_state_clsfctn END)  line_desc, 
                    inv.get_store_name(e.src_store_vault_id) srcVltNm,
                   inv.get_store_name(e.dest_store_vault_id) destVltNm
  FROM  
       vms.vms_transaction_lines e, 
       inv.inv_itm_list b, 
       inv.unit_of_measure c, 
       inv.inv_product_categories d,
       vms.vms_transactions_hdr a
       LEFT OUTER JOIN scm.scm_cstmr_suplr_sites f  ON (a.cstmr_spplr_site_id =f.cust_sup_site_id)  
        WHERE (a.trans_hdr_id =  {:trns_id} and a.trans_hdr_id=e.trans_hdr_id and e.itm_id = b.item_id
             and b.base_uom_id = c.uom_id and d.cat_id = b.category_id) 
            ORDER BY e.unit_value DESC,e.itm_id, e.trans_det_ln_id, b.category_id', owner_module = 'Vault Management', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:14', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='110.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 110)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:14
UPDATE rpt.rpt_reports SET report_name = 'Expulsion List Report', report_desc = 'Expulsion List Report', rpt_sql_query = 'Select 
 '''''''' || tbl1.id_no "ID No.   ", 
 tbl1.fullnm "Full Name                      ",
 tbl1.Grade "Grade                        ",
 tbl1.Division "Division                  ",
 SUM(tbl1.amnt) "Arrears from 3 years and beyond      ",
 600 m1,
 tbl1.cmpny "Company                       ",
 b.billing_address "Address                ",
tbl1.email "Email Address             ",
tbl1.tel "Contact Numbers          "
 from (select distinct pnn.local_id_no id_no, 
 pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name fullnm, 
 org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division, 
       b.item_code_name,
       coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0) amnt, b.pay_run_priority, scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny,pnn.lnkd_firm_org_id,
pnn.email,
pnn.cntct_no_mobl || '' '' || pnn.cntct_no_tel tel
  FROM prs.prsn_names_nos pnn 
  LEFT OUTER JOIN pasn.prsn_grades pg on pnn.person_id = pg.person_id
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id 
  and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
  LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))
   and (b.org_id = 1)  
  AND (b.item_code_name NOT ilike ''%'' || to_char(now(),''YYYY'')||''%'' 
	and b.item_code_name NOT ilike ''%'' || to_char((now()-interval ''1 year''),''YYYY'')||''%'' 
	and b.item_code_name NOT ilike ''%'' || to_char((now()-interval ''2 year''),''YYYY'')||''%''
	and b.item_code_name ilike ''Annual%Dues%'')
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')) tbl1 
  LEFT OUTER JOIN scm.scm_cstmr_suplr a ON (tbl1.lnkd_firm_org_id = a.cust_sup_id)
  LEFT OUTER JOIN scm.scm_cstmr_suplr_sites b ON (a.cust_sup_id = b.cust_supplier_id 
  and b.cust_sup_site_id = (SELECT MIN(c.cust_sup_site_id) 
  FROM scm.scm_cstmr_suplr_sites c WHERE c.cust_supplier_id=a.cust_sup_id))
  WHERE tbl1.cmpny = coalesce(NULLIF('''',''''), tbl1.cmpny)
 GROUP BY 1, 2,3,4,6,7,8,9,10
 ORDER BY 5 DESC, 1,3,5,6 LIMIT 20000 OFFSET 0', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:14', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '4', cols_to_average = '', cols_to_no_frmt = '4', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 109)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:14
UPDATE rpt.rpt_reports SET report_name = 'Top 200 Dues Debtors Individuals-Last 2 Years', report_desc = 'Top 200 Dues Debtors Individuals-Last 2 Years', rpt_sql_query = 'select row_number() over (order by round(SUM(tbl2.amnt),2) DESC, tbl2.id_no ASC) "No.", 
COALESCE(NULLIF(tbl2.fullnm||'' (''||tbl2.id_no||'')'',''''),''Unknown Person'') "Name of Member                                ",
round((select coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)
  FROM prs.prsn_names_nos pnn 
  LEFT OUTER JOIN pasn.prsn_grades pg on pnn.person_id = pg.person_id
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) 
  AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id 
  and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
  LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pg.valid_end_date is null OR (now() between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))
   and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char(now(),''YYYY'') || ''%'' and b.item_code_name ilike ''Annual%Dues%'')
  AND pnn.person_id = tbl2.person_id
  AND (b.item_maj_type=''Balance Item'') 
  AND b.local_classfctn ilike ''%Membership Balance Item'')), 2) "Annual Dues (Current Year)",
round((select coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)
  FROM prs.prsn_names_nos pnn 
  LEFT OUTER JOIN pasn.prsn_grades pg on pnn.person_id = pg.person_id
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id 
  and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
  LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))
   and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char((now() - interval ''1 year''),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  AND pnn.person_id = tbl2.person_id
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')) , 2) "Annual Dues (Previous Year)",
round((select coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)
  FROM prs.prsn_names_nos pnn 
  LEFT OUTER JOIN pasn.prsn_grades pg on pnn.person_id = pg.person_id
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id 
  and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
  LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))
   and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char((now()-interval ''2 year''),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  AND pnn.person_id = tbl2.person_id
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')),2) "Annual Dues (Previous Year 2)", round(SUM(tbl2.amnt), 2) "Total Amount Owing ", 
tbl2.id_no m1,
tbl2.person_id m2
FROM (Select 
 tbl1.id_no, 
 tbl1.fullnm,
 tbl1.item_code_name,
 SUM(tbl1.amnt) amnt,
 600 " ",
 tbl1.Grade,
 tbl1.Division,
 tbl1.cmpny,
tbl1.person_id
 from (select distinct pnn.local_id_no id_no, 
 pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name fullnm, 
 org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division, 
       b.item_code_name,
       coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0) amnt, b.pay_run_priority, scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny, pnn.person_id
  FROM prs.prsn_names_nos pnn 
  LEFT OUTER JOIN pasn.prsn_grades pg on pnn.person_id = pg.person_id
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id 
  and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
  LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))
   and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char(now(),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  /*AND coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)>0*/
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')
  UNION
  select distinct pnn.local_id_no, 
  pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name as "Full Name                                                ", 
  org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division,
       ''Annual Dues Arreas(''||to_char((now()-interval ''1 year''),''YYYY'')||'')''  "Pay Item                ", 
       SUM(coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)) "Amount  ",
       MAX(b.pay_run_priority) " ", scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny, pnn.person_id
  FROM prs.prsn_names_nos pnn 
  left outer join pasn.prsn_grades pg on pnn.person_id = pg.person_id 
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
       LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
       LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and (pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char((now()-interval ''1 year''),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  /*AND coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)>0*/
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')
  GROUP BY 1,2,3,4,5,8,9
UNION
  select distinct pnn.local_id_no, 
  pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name as "Full Name                                                ", 
  org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division,
       ''Annual Dues Arreas(''||to_char((now()-interval ''2 year''),''YYYY'')||'')''  "Pay Item                ", 
       SUM(coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)) "Amount  ",
       MAX(b.pay_run_priority) " ", scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny, pnn.person_id
  FROM prs.prsn_names_nos pnn 
  left outer join pasn.prsn_grades pg on pnn.person_id = pg.person_id 
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
       LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
       LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and (pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char((now()-interval ''2 year''),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  /*AND coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)>0*/
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')
  GROUP BY 1,2,3,4,5,8,9) tbl1
WHERE COALESCE(NULLIF(tbl1.cmpny,''''),''Unknown Company'')=''Unknown Company''
 GROUP BY 1,2,3,5,6,7,8,9) tbl2 group by 2,7,8 
 order by round(SUM(tbl2.amnt),2) DESC, tbl2.id_no ASC LIMIT 200 OFFSET 0', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:14', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '1100600', cols_to_count = '1', cols_to_sum = '2', cols_to_average = '', cols_to_no_frmt = '2', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 108)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:14
UPDATE rpt.rpt_reports SET report_name = 'Top 50 Dues Debtors-Last 2 Years', report_desc = 'Top 50 Dues Debtors-Last 2 Years', rpt_sql_query = 'select row_number() over (order by round(SUM(tbl2.amnt),2) DESC) "No.", 
COALESCE(NULLIF(tbl2.cmpny,''''),''Unknown Company'') "Name of Company                   ",
round((select SUM(coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0))
  FROM prs.prsn_names_nos pnn 
  LEFT OUTER JOIN pasn.prsn_grades pg on pnn.person_id = pg.person_id
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) 
  AND org.get_div_type(pdg.div_id) = ''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id 
  and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
  LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))
   and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char(now(),''YYYY'') || ''%'' and b.item_code_name ilike ''Annual%Dues%'')
  AND COALESCE(scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id),'''') = COALESCE(tbl2.cmpny,'''')
  AND (b.item_maj_type=''Balance Item'') 
  AND b.local_classfctn ilike ''%Membership Balance Item'')), 2) "Annual Dues (Current Year)",
round((select SUM(coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0))
  FROM prs.prsn_names_nos pnn 
  LEFT OUTER JOIN pasn.prsn_grades pg on pnn.person_id = pg.person_id
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id 
  and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
  LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and (pg.valid_end_date is null OR (now() between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))
   and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char((now() - interval ''1 year''),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  AND COALESCE(scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id),'''') = COALESCE(tbl2.cmpny,'''')
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')) , 2) "Annual Dues (Previous Year 1)",
round((select SUM(coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0))
  FROM prs.prsn_names_nos pnn 
  LEFT OUTER JOIN pasn.prsn_grades pg on pnn.person_id = pg.person_id
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id 
  and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
  LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and (pg.valid_end_date is null OR (now() between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))
  AND (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char((now()-interval ''2 year''),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  AND COALESCE(scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id),'''') = COALESCE(tbl2.cmpny,'''')
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')), 2) "Annual Dues (Previous Year 2)", round(SUM(tbl2.amnt), 2) "Amount Owing" 
FROM (Select distinct  
 tbl1.id_no, 
 tbl1.fullnm,
 tbl1.item_code_name,
 SUM(tbl1.amnt) amnt,
 600 " ",
 tbl1.Grade,
 tbl1.Division,
 tbl1.cmpny,
 b.billing_address
 from (select distinct pnn.local_id_no id_no, 
 pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name fullnm, 
 org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division, 
       b.item_code_name,
       coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0) amnt, b.pay_run_priority, scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny,pnn.lnkd_firm_org_id
  FROM prs.prsn_names_nos pnn 
  LEFT OUTER JOIN pasn.prsn_grades pg on pnn.person_id = pg.person_id
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id 
  and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
  LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))
   and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char(now(),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')
  UNION
  select distinct pnn.local_id_no, 
  pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name as "Full Name                                                ", 
  org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division,
       ''Annual Dues Arreas(''||to_char((now()-interval ''1 year''),''YYYY'')||'')''  "Pay Item                ", 
       coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0) "Amount  ",
       b.pay_run_priority " ", scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny,pnn.lnkd_firm_org_id
  FROM prs.prsn_names_nos pnn 
  left outer join pasn.prsn_grades pg on pnn.person_id = pg.person_id 
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
       LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
       LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and (pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char((now()-interval ''1 year''),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')
UNION
  select distinct pnn.local_id_no, 
  pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name as "Full Name                                                ", 
  org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division,
       ''Annual Dues Arreas(''||to_char((now()-interval ''2 year''),''YYYY'')||'')''  "Pay Item                ", 
 coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0) "Amount  ",
       b.pay_run_priority " ", scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny,pnn.lnkd_firm_org_id
  FROM prs.prsn_names_nos pnn 
  left outer join pasn.prsn_grades pg on pnn.person_id = pg.person_id 
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
       LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
       LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and (pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char((now()-interval ''2 year''),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')) tbl1 
  LEFT OUTER JOIN scm.scm_cstmr_suplr a ON (tbl1.lnkd_firm_org_id = a.cust_sup_id)
  LEFT OUTER JOIN scm.scm_cstmr_suplr_sites b ON (a.cust_sup_id = b.cust_supplier_id 
  and b.cust_sup_site_id = (SELECT MIN(c.cust_sup_site_id) 
  FROM scm.scm_cstmr_suplr_sites c WHERE c.cust_supplier_id=a.cust_sup_id))
  WHERE tbl1.cmpny = coalesce(NULLIF('''',''''), tbl1.cmpny)
 GROUP BY 1, 2,3,5,6,7,8,9) tbl2 Group by 2,tbl2.cmpny order by 6 DESC LIMIT 50 OFFSET 0', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:14', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '1100600', cols_to_count = '1', cols_to_sum = '2,3,4,5', cols_to_average = '', cols_to_no_frmt = '2,3,4,5', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 107)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:15
UPDATE rpt.rpt_reports SET report_name = 'Company Bills (Dues Only) Report', report_desc = 'Company Bills (Dues Only) Report', rpt_sql_query = 'Select 
 tbl1.id_no, 
 tbl1.fullnm,
 tbl1.item_code_name,
 SUM(tbl1.amnt) amnt,
 600 " ",
 tbl1.Grade,
 tbl1.Division,
 tbl1.cmpny,
 b.billing_address
 from (select distinct pnn.local_id_no id_no, 
 pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name fullnm, 
 org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division, 
       b.item_code_name,
       coalesce(pay.get_ltst_blsitm_bals(pnn.person_id, org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0) amnt, b.pay_run_priority, scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny, pnn.lnkd_firm_org_id
  FROM prs.prsn_names_nos pnn 
  LEFT OUTER JOIN pasn.prsn_grades pg on pnn.person_id = pg.person_id
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id 
  and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
  LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))
   and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char(now(),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  /*AND coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)>0*/
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')
  UNION
  select distinct pnn.local_id_no, 
  pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name as "Full Name                                                ", 
  org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division,
       ''Dues Arreas for Prev. Year 1 (''||to_char((now()-interval ''1 year''),''YYYY'')||'')''  "Pay Item                ", 
       SUM(coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)) "Amount  ",
       MAX(b.pay_run_priority) " ", scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny,pnn.lnkd_firm_org_id
  FROM prs.prsn_names_nos pnn 
  left outer join pasn.prsn_grades pg on pnn.person_id = pg.person_id 
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
       LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
       LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and (pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char((now()-interval ''1 year''),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  /*AND coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)>0*/
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')
  GROUP BY 1,2,3,4,5,8,9
UNION
  select distinct pnn.local_id_no, 
  pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name as "Full Name                                                ", 
  org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division,
       ''Dues Arreas for Prev. Year 2 (''||to_char((now()-interval ''2 year''),''YYYY'')||'')''  "Pay Item                ", 
       SUM(coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)) "Amount  ",
       MAX(b.pay_run_priority) " ", scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny,pnn.lnkd_firm_org_id
  FROM prs.prsn_names_nos pnn 
  left outer join pasn.prsn_grades pg on pnn.person_id = pg.person_id 
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
       LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
       LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and (pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char((now()-interval ''2 year''),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  /*AND coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)>0*/
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')
  GROUP BY 1,2,3,4,5,8,9) tbl1 
  LEFT OUTER JOIN scm.scm_cstmr_suplr a ON (tbl1.lnkd_firm_org_id = a.cust_sup_id)
  LEFT OUTER JOIN scm.scm_cstmr_suplr_sites b ON (a.cust_sup_id = b.cust_supplier_id 
  and b.cust_sup_site_id = (SELECT MIN(c.cust_sup_site_id) 
  FROM scm.scm_cstmr_suplr_sites c WHERE c.cust_supplier_id=a.cust_sup_id))
  WHERE tbl1.cmpny = coalesce(NULLIF(''{:instu_nm}'',''''), tbl1.cmpny)
 GROUP BY 1, 2,3,5,6,7,8,9
 ORDER BY 1,3,5,6', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:15', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Customised Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 106)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:15
UPDATE rpt.rpt_reports SET report_name = 'Remove Unnecessary Reports', report_desc = 'Remove Unnecessary Reports', rpt_sql_query = 'DELETE from rpt.rpt_report_parameters 
  WHERE report_id IN (Select report_id from rpt.rpt_reports WHERE report_name ilike ''%GhIE%'');

DELETE from rpt.rpt_reports WHERE report_name ilike ''%GhIE%'';

Delete from rpt.rpt_report_parameters 
  WHERE report_id IN (Select report_id from rpt.rpt_reports WHERE report_name ilike ''%KoM%'');

Delete from rpt.rpt_report_parameters where parameter_name ilike ''Start'' and paramtr_rprstn_nm_in_query =''{:endDte}'';
  Delete from rpt.rpt_reports WHERE report_name ilike ''%KoM%'';', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:15', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 105)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:15
UPDATE rpt.rpt_reports SET report_name = 'Purge Old Unnecessary Data', report_desc = 'Purge Old Unnecessary Data', rpt_sql_query = 'DELETE FROM accb.accb_trnsctn_batches a 
WHERE batch_status=''0'' and batch_source not ilike ''%Manual%'' 
and ((select count(1) from accb.accb_trnsctn_details y where y.batch_id=a.batch_id)<=0) and age(now(), 
to_timestamp(last_update_date,''YYYY-MM-DD HH24:MI:SS''))>= interval ''{:p_days_to_keep} days'';

DELETE FROM alrt.alrt_msgs_sent WHERE age(now(), 
to_timestamp(date_sent,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''{:p_days_to_keep} days'';

DELETE FROM alrt.bulk_msgs_sent WHERE age(now(), to_timestamp(date_sent,''YYYY-MM-DD HH24:MI:SS'')) >=  interval ''{:p_days_to_keep} days'';

DELETE FROM rpt.rpt_report_runs WHERE age(now(), to_timestamp(last_actv_date_tme,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''{:p_days_to_keep} days'';

DELETE FROM rpt.rpt_run_msgs WHERE age(now(), to_timestamp(last_update_date,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''{:p_days_to_keep} days'';
DELETE FROM accb.accb_post_trns_msgs WHERE age(now(), to_timestamp(last_update_date,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''{:p_days_to_keep} days'';
DELETE FROM rpt.rpt_accb_data_storage WHERE age(now(), to_timestamp(rpt_run_date, ''YYYY-MM-DD HH24:MI:SS'')) > INTERVAL ''{:p_days_to_keep} days'';
DELETE FROM rpt.rpt_gnrl_data_storage WHERE age(now(), to_timestamp(rpt_run_date, ''YYYY-MM-DD HH24:MI:SS'')) > INTERVAL ''{:p_days_to_keep} days'';

DELETE FROM accb.accb_audit_trail_tbl WHERE age(now(), to_timestamp(action_time,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''{:p_days_to_keep} days'';

DELETE FROM mcf.mcf_audit_trail_tbl WHERE age(now(), to_timestamp(action_time,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''{:p_days_to_keep} days'';
DELETE FROM vms.vms_audit_trail_tbl WHERE age(now(), to_timestamp(action_time,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''{:p_days_to_keep} days'';
DELETE FROM pay.pay_audit_trail_tbl WHERE age(now(), to_timestamp(action_time,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''{:p_days_to_keep} days'';
DELETE FROM sec.sec_audit_trail_tbl WHERE age(now(), to_timestamp(action_time,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''{:p_days_to_keep} days'';

DELETE FROM wkf.wkf_actual_msgs_hdr WHERE age(now(), to_timestamp(last_update_date,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''{:p_days_to_keep} days'' and msg_typ IN (''Informational'') and msg_status!=''1'';
DELETE FROM wkf.wkf_actual_msgs_routng WHERE msg_id NOT IN (select z.msg_id from wkf.wkf_actual_msgs_hdr z);', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:15', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 104)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:15
UPDATE rpt.rpt_reports SET report_name = 'VMS Transaction Voucher', report_desc = 'VMS Transaction Voucher', rpt_sql_query = 'SELECT a.trans_hdr_id, 
        to_char(to_timestamp(a.trans_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trnsDate,
       a.trans_number, 
       a.trans_type, 
       a.comments_desc, 
       scm.get_cstmr_splr_name(a.cstmr_spplr_id) cstmr_name,
       scm.get_cstmr_splr_site_name(a.cstmr_spplr_site_id) site_name, 
       a.approval_status,
       a.next_aproval_action, 
       a.validity_status, 
       a.voided_trns_hdr_id, 
       a.voided_trns_type,  
       prs.get_prsn_name(sec.get_usr_prsn_id(a.created_by)) prpard_by,
       prs.get_prsn_name(a.approved_by_prsn_id) || ''(''||prs.get_prsn_loc_id(a.approved_by_prsn_id)||'')'' authrzer,  
       a.mtchd_athrzr_lmt_id, 
       org.get_site_code_desc(a.trns_loc_site_id) brnch_loc, 
       a.ttl_trns_amount,
       trim(to_char(a.ttl_trns_amount,''999G999G999G999G999G999G999D00'')) doc_net_ttl, 
       inv.get_store_name(a.src_store_vault_id) srcVltNm,
       inv.get_shelve_name(a.src_cage_shelve_id) srcCageNm,
       inv.get_store_name(a.dest_store_vault_id) destVltNm,
       inv.get_shelve_name(a.dest_cage_shelve_id) destCageID,
       gst.get_pssbl_val(a.crncy_id) curr, 
       gst.get_pssbl_val(a.pymnt_crncy_id),        
       a.pymnt_ttl_amnt, 
       a.avrg_exchange_rate, 
       a.reversal_reason, 
       a.trns_prsntd_by_person,
       a.cheque_slip_no, 
       prs.get_prsn_name(a.trns_officiated_by) || ''(''||prs.get_prsn_loc_id(a.trns_officiated_by)||'')'' supervisor,
        COALESCE(f.site_name,'' '') site_name, 
        COALESCE(f.billing_address,'' '') billing_address, 
        COALESCE(f.ship_to_address,'' '') ship_to_address,
        e.trans_det_ln_id, 
		b.item_code, 
        inv.get_uom_qty(b.item_id::integer,  e.doc_qty, ''tray'') tray,
        inv.get_uom_qty(b.item_id::integer,  e.doc_qty, ''bundle'') bundle,
        inv.get_uom_qty(b.item_id::integer,  e.doc_qty, ''wad'') wad,
        inv.get_uom_after_qty(b.item_id::integer,  e.doc_qty, ''wad'') pcs, 
                e.doc_qty,
                    e.unit_value, 
                    CASE WHEN e.src_cage_shelve_id>0 AND e.dest_cage_shelve_id<=0 
  AND a.trans_type=''Direct Cage/Shelve Transaction'' THEN 
 -1*(e.doc_qty * e.unit_value) ELSE (e.doc_qty * e.unit_value) END amnt, 
                    e.validity_status, 
                    e.voided_src_line_id, 
                    e.pymt_cur_exchng_rate,  
                   c.uom_name, 
                   d.cat_name, 
                   b.item_type, 
                   CASE WHEN e.dest_cage_shelve_id>0 and e.src_cage_shelve_id>0 THEN e.dst_balance_afta_trns
			WHEN e.src_cage_shelve_id>0 THEN e.src_balance_afta_trns ELSE e.dst_balance_afta_trns 	                END running_balance,
                   e.src_balance_b4_trns,
                   e.dst_balance_b4_trns,
                   e.src_balance_afta_trns,
                   e.dst_balance_afta_trns, 
			TRIM(e.line_desc 
			|| (CASE WHEN e.src_cage_shelve_id>0 THEN '' [From:''||inv.get_shelve_name(e.src_cage_shelve_id) || ''-'' ||e.src_itm_state_clsfctn || '''' ELSE '' ['' END)
			||(CASE WHEN e.dest_cage_shelve_id>0 and e.src_cage_shelve_id>0 THEN '' To:''||inv.get_shelve_name(e.dest_cage_shelve_id) || ''-''||e.dst_itm_state_clsfctn ||''''
			WHEN e.dest_cage_shelve_id>0 THEN ''To:''||inv.get_shelve_name(e.dest_cage_shelve_id) || ''-''||e.dst_itm_state_clsfctn ||'''' ELSE '''' END)) || '']''  line_desc, 
                    inv.get_store_name(e.src_store_vault_id) srcVltNm,
                   inv.get_store_name(e.dest_store_vault_id) destVltNm
  FROM  
       vms.vms_transaction_lines e, 
       inv.inv_itm_list b, 
       inv.unit_of_measure c, 
       inv.inv_product_categories d,
       vms.vms_transactions_hdr a
       LEFT OUTER JOIN scm.scm_cstmr_suplr_sites f  ON (a.cstmr_spplr_site_id =f.cust_sup_site_id)  
        WHERE (a.trans_hdr_id =  {:trns_id} and a.trans_hdr_id=e.trans_hdr_id and e.itm_id = b.item_id
             and b.base_uom_id = c.uom_id and d.cat_id = b.category_id) 
            ORDER BY e.unit_value DESC,e.itm_id, e.trans_det_ln_id, b.category_id', owner_module = 'Vault Management', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:15', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='103.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 103)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:15
UPDATE rpt.rpt_reports SET report_name = 'Teller Transaction Receipt', report_desc = 'CBR-Teller Transaction Receipt', rpt_sql_query = 'SELECT a.acct_trns_id, 
	''****''||SUBSTR(b.account_number,10,13) account_number,
	b.account_title,
            to_char(to_timestamp(a.trns_date, ''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trns_date, 
	a.trns_type, 
           a.amount, 
           gst.get_pssbl_val(c.mapped_lov_crncy_id) crncy_nm, 
            a.trns_no, 
            org.get_site_code_desc(a.branch_id::integer) branch, 
            a.doc_type, a.doc_no, 
            CASE WHEN a.trns_person_type=''Others'' THEN a.trns_person_name ELSE a.trns_person_type END trns_by, 
            a.trns_person_tel_no,
            a.trns_person_address, 
            a.trns_person_id_type, 
            a.trns_person_id_number,
            sec.get_usr_name(a.created_by) user_nm,
            (SELECT SUM(COALESCE((y.value * z.qty),0))
          FROM mcf.mcf_currency_denominations y, mcf.mcf_account_trns_cash_analysis z
          WHERE y.crncy_denom_id = z.denomination_id 
           AND z.acct_trns_id = {:trns_id} AND COALESCE(z.qty,0)!=0 ) ttl_cash_amnt,
            (SELECT count(1)
          FROM mcf.mcf_currency_denominations y, mcf.mcf_account_trns_cash_analysis z
          WHERE y.crncy_denom_id = z.denomination_id 
           AND z.acct_trns_id = {:trns_id} AND COALESCE(z.qty,0)!=0 ) ttl_cash_cnt,
           (SELECT SUM(f.amount)
            FROM mcf.mcf_cust_account_trns_cheques f 
			WHERE f.acct_trns_id ={:trns_id}) ttl_chq_amnt,
           (SELECT count(1)
            FROM mcf.mcf_cust_account_trns_cheques f 
			WHERE f.acct_trns_id ={:trns_id}) ttl_chq_cnt
           FROM mcf.mcf_cust_account_transactions a
            LEFT OUTER JOIN mcf.mcf_accounts b ON (a.account_id = b.account_id)
            LEFT OUTER JOIN mcf.mcf_currencies c ON (b.currency_id = c.crncy_id)
            WHERE ((a.acct_trns_id ={:trns_id}  and a.acct_trns_id >0 ))', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:15', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='102.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 102)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:15
UPDATE rpt.rpt_reports SET report_name = 'End of Day Process Runs', report_desc = 'End of Day Process Runs', rpt_sql_query = 'select mcf.mcf_run_end_of_day({:usrID}, ''{:runMode}'', {:orgID}, {:msgID}, ''{:prcsType}'');', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:15', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='UPDATE mcf.mcf_bulk_trns_hdr
SET batch_date=mcf.xx_get_start_of_day_date(1)||'' ''||mcf.get_crnt_time()
WHERE is_batch_cashless=''1'' and status NOT IN (''Processed'');' WHERE (report_id = 101)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:15
UPDATE rpt.rpt_reports SET report_name = 'Journal Import from VMS Module', report_desc = 'Journal Import from VMS Module', rpt_sql_query = 'SELECT a.accnt_id, 

to_char(to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trnsdte
, 
SUM(a.dbt_amount) dbt_sum, 
SUM(a.crdt_amount) crdt_sum, 
SUM(a.net_amount) net_sum, 

a.func_cur_id 
FROM {:intrfc_tbl_name} a, 
accb.accb_chart_of_accnts b 

WHERE a.gl_batch_id = -1 and a.accnt_id = b.accnt_id and b.org_id={:orgID} 
and age(now(),
to_timestamp(a.last_update_date,''YYYY-MM-DD HH24:MI:SS'')) > interval ''5 minute'' 
GROUP BY a.accnt_id, a.trnsctn_date, func_cur_id 
ORDER BY to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS'')', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:15', rpt_or_sys_prcs = 'Journal Import', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 100)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:15
UPDATE rpt.rpt_reports SET report_name = 'Journal Import from Banking Module', report_desc = 'Journal Import from Banking Module', rpt_sql_query = 'SELECT a.accnt_id,  to_char(to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trnsdte,  
SUM(a.dbt_amount) dbt_sum, 
SUM(a.crdt_amount) crdt_sum, 
SUM(a.net_amount) net_sum, 
a.func_cur_id 
 FROM {:intrfc_tbl_name} a, accb.accb_chart_of_accnts b  
WHERE a.gl_batch_id = -1 and a.accnt_id = b.accnt_id and b.org_id={:orgID} 
and age(now(), to_timestamp(a.last_update_date,''YYYY-MM-DD HH24:MI:SS'')) >= interval ''5 minute'' 
GROUP BY a.accnt_id, a.trnsctn_date, func_cur_id 
ORDER BY to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS'')', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:15', rpt_or_sys_prcs = 'Journal Import', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 99)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:16
UPDATE rpt.rpt_reports SET report_name = 'Send Outstanding Bulk Messages-Scheduled', report_desc = 'Send Outstanding Bulk Messages-Scheduled', rpt_sql_query = 'SELECT msg_sent_id, batch_id, to_list, cc_list, msg_body, date_sent, 
       msg_sbjct, bcc_list, created_by, creation_date, sending_status, 
       err_msg, attch_urls, msg_type
  FROM alrt.bulk_msgs_sent a 

WHERE sending_status=''0'' 
and age(now(), 
to_timestamp(creation_date,''YYYY-MM-DD HH24:MI:SS''))>= interval ''5 hours'' 
and to_timestamp(creation_date,''YYYY-MM-DD HH24:MI:SS'')>=to_timestamp(''2017-03-06 00:00:00'',''YYYY-MM-DD HH24:MI:SS'')
and (err_msg='''' or err_msg ilike ''%timed%out%''or err_msg ilike ''%no%internet%'') 
ORDER BY 1 ASC;', owner_module = 'Generic Module', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:16', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 98)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:16
UPDATE rpt.rpt_reports SET report_name = 'Send Outstanding Bulk Messages', report_desc = 'Send Outstanding Bulk Messages', rpt_sql_query = 'SELECT msg_sent_id, batch_id, to_list, cc_list, msg_body, date_sent, 
       msg_sbjct, bcc_list, created_by, creation_date, sending_status, 
       err_msg, attch_urls, msg_type
  FROM alrt.bulk_msgs_sent a 

WHERE batch_id=COALESCE(NULLIF({:msg_batch_id},-1),batch_id) and sending_status=''0'' 
and age(now(), 
to_timestamp(creation_date,''YYYY-MM-DD HH24:MI:SS''))>= interval ''5 second'' 
and err_msg='''' 
ORDER BY 1 ASC;', owner_module = 'Generic Module', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:16', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 97)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:16
UPDATE rpt.rpt_reports SET report_name = 'Withholding Tax Report', report_desc = 'Withholding Tax Report (Internal Use)', rpt_sql_query = 'select 
row_number() OVER (ORDER BY tbl2.pybls_invc_date ASC, tbl2.pybls_invc_hdr_id ASC) AS "No.  ", 
tbl2.pybls_invc_hdr_id || '' (''||tbl2.pybls_invc_number||'')'' AS "PV No. (Invoice Number) ",
tbl2.pybls_invc_date mt,
to_char(to_timestamp(tbl2.pybls_invc_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') AS "Document Date  ",
REPLACE(scm.get_cstmr_splr_name(tbl2.supplier_id)||'' (''||scm.get_cstmr_splr_site_name(tbl2.supplier_id)||'')'',''GHANA INSTITUTION OF ENGINEERS (GhIE)'',''Unknown'') AS "Vendor/Supplier          ",
tbl3.tin_number AS "TIN NUMBER ",
tbl2.work_desc AS "Transaction Description                              ",
tbl2.invc_amnt AS "Invoice Amount",
tbl2.pybls_smmry_amnt AS "Amount Withheld",
tbl2.code_name AS "Tax Type               "
from (Select tbl1.*, d.pybls_smmry_amnt, c.code_name 
FROM (SELECT pybls_invc_hdr_id, pybls_invc_date,  pybls_invc_number, pybls_invc_type, 
 supplier_id, 
       SUM(b.pybls_smmry_amnt) invc_amnt,
       -1,
string_agg(b.pybls_smmry_desc,'' & '') work_desc 
  FROM accb.accb_pybls_invc_hdr a, 
  accb.accb_pybls_amnt_smmrys b
   WHERE b.pybls_smmry_type =''1Initial Amount''
  and a.pybls_invc_hdr_id = b.src_pybls_hdr_id
  and a.pybls_invc_type = b.src_pybls_type 
  and b.pybls_smmry_desc not ilike ''%vat %''
  and a.approval_status=''Approved''
  and a.org_id = {:orgID}
  GROUP BY 1,2,3,4,5,7) tbl1,
  scm.scm_tax_codes c, 
  accb.accb_pybls_amnt_smmrys d
   WHERE 
  tbl1.pybls_invc_hdr_id = d.src_pybls_hdr_id
  and tbl1.pybls_invc_type = d.src_pybls_type 
  and d.code_id_behind = c.code_id
  and c.itm_type =''Tax'' and c.is_withldng_tax=''1'' 
  and d.initial_amnt_line_id < 0 
  UNION
  Select tbl1.*, d.pybls_smmry_amnt, c.code_name 
FROM (SELECT pybls_invc_hdr_id, pybls_invc_date,  pybls_invc_number, pybls_invc_type, 
  supplier_id, 
       SUM(b.pybls_smmry_amnt) invc_amnt,
       b.pybls_smmry_id,
string_agg(b.pybls_smmry_desc,'' & '') work_desc 
  FROM accb.accb_pybls_invc_hdr a, 
  accb.accb_pybls_amnt_smmrys b
   WHERE b.pybls_smmry_type =''1Initial Amount''
  and a.pybls_invc_hdr_id = b.src_pybls_hdr_id
  and a.pybls_invc_type = b.src_pybls_type 
 and a.org_id = {:orgID}
  and b.pybls_smmry_desc not ilike ''%vat %''
  and a.approval_status=''Approved''
  GROUP BY 1,2,3,4,5,7) tbl1,
  scm.scm_tax_codes c, 
  accb.accb_pybls_amnt_smmrys d
   WHERE 
  tbl1.pybls_invc_hdr_id = d.src_pybls_hdr_id
  and tbl1.pybls_smmry_id=d.initial_amnt_line_id
  and tbl1.pybls_invc_type = d.src_pybls_type 
  and d.code_id_behind = c.code_id
  and c.itm_type =''Tax'' and c.is_withldng_tax=''1'' 
  and d.initial_amnt_line_id > 0) tbl2,
  scm.scm_cstmr_suplr tbl3
  WHERE  
  tbl2.supplier_id = tbl3.cust_sup_id 
  and (to_timestamp(tbl2.pybls_invc_date||'' 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'')
 and to_timestamp(''{:endDte}'',''DD-Mon-YYYY HH24:MI:SS'')) 
 and (scm.get_cstmr_splr_name(tbl2.supplier_id)||'' (''||scm.get_cstmr_splr_site_name(tbl2.supplier_id)||'')'') ilike ''%{:sppplr_nm}%'' 
  ORDER BY tbl2.pybls_invc_date ASC, tbl2.pybls_invc_hdr_id ASC;', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:16', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '7,8', cols_to_average = '', cols_to_no_frmt = '7,8', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 96)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:16
UPDATE rpt.rpt_reports SET report_name = 'Withholding Tax Report - GRA', report_desc = 'Withholding Tax Report  - GRA', rpt_sql_query = 'select 
row_number() OVER (ORDER BY tbl2.pybls_invc_date ASC, tbl2.pybls_invc_hdr_id ASC) AS "No.  ", 
tbl2.pybls_invc_date mt,
to_char(to_timestamp(tbl2.pybls_invc_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') AS "Document Date  ",
REPLACE(scm.get_cstmr_splr_name(tbl2.supplier_id),''GHANA INSTITUTION OF ENGINEERS (GhIE)'',''Unknown'') AS "Vendor/Supplier          ",
tbl3.tin_number AS "TIN NUMBER ",
tbl2.invc_amnt AS "Invoice Amount",
tbl2.pybls_smmry_amnt AS "Amount Withheld",
tbl2.code_name AS "Tax Type               "
from (Select tbl1.*, d.pybls_smmry_amnt, substring(c.code_name from 16) as code_name
FROM (SELECT pybls_invc_hdr_id, pybls_invc_date,  pybls_invc_number, pybls_invc_type, 
 supplier_id, 
       SUM(b.pybls_smmry_amnt) invc_amnt,
       -1,
string_agg(b.pybls_smmry_desc,'' & '') work_desc 
  FROM accb.accb_pybls_invc_hdr a, 
  accb.accb_pybls_amnt_smmrys b
   WHERE b.pybls_smmry_type =''1Initial Amount''
  and a.pybls_invc_hdr_id = b.src_pybls_hdr_id
  and a.pybls_invc_type = b.src_pybls_type 
  and b.pybls_smmry_desc not ilike ''%vat %''
  and a.approval_status=''Approved''
  and a.org_id = {:orgID}
  GROUP BY 1,2,3,4,5,7) tbl1,
  scm.scm_tax_codes c, 
  accb.accb_pybls_amnt_smmrys d
   WHERE 
  tbl1.pybls_invc_hdr_id = d.src_pybls_hdr_id
  and tbl1.pybls_invc_type = d.src_pybls_type 
  and d.code_id_behind = c.code_id
  and c.itm_type =''Tax'' and c.is_withldng_tax=''1'' 
  and d.initial_amnt_line_id < 0 
  UNION
  Select tbl1.*, d.pybls_smmry_amnt, substring(c.code_name from 16) as code_name
FROM (SELECT pybls_invc_hdr_id, pybls_invc_date,  pybls_invc_number, pybls_invc_type, 
  supplier_id, 
       SUM(b.pybls_smmry_amnt) invc_amnt,
       b.pybls_smmry_id,
string_agg(b.pybls_smmry_desc,'' & '') work_desc 
  FROM accb.accb_pybls_invc_hdr a, 
  accb.accb_pybls_amnt_smmrys b
   WHERE b.pybls_smmry_type =''1Initial Amount''
  and a.pybls_invc_hdr_id = b.src_pybls_hdr_id
  and a.pybls_invc_type = b.src_pybls_type 
 and a.org_id = {:orgID}
  and b.pybls_smmry_desc not ilike ''%vat %''
  and a.approval_status=''Approved''
  GROUP BY 1,2,3,4,5,7) tbl1,
  scm.scm_tax_codes c, 
  accb.accb_pybls_amnt_smmrys d
   WHERE 
  tbl1.pybls_invc_hdr_id = d.src_pybls_hdr_id
  and tbl1.pybls_smmry_id=d.initial_amnt_line_id
  and tbl1.pybls_invc_type = d.src_pybls_type 
  and d.code_id_behind = c.code_id
  and c.itm_type =''Tax'' and c.is_withldng_tax=''1'' 
  and d.initial_amnt_line_id > 0) tbl2,
  scm.scm_cstmr_suplr tbl3
  WHERE  
  tbl2.supplier_id = tbl3.cust_sup_id 
  and (to_timestamp(tbl2.pybls_invc_date||'' 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'')
 and to_timestamp(''{:endDte}'',''DD-Mon-YYYY HH24:MI:SS'')) 
 and (scm.get_cstmr_splr_name(tbl2.supplier_id)||'' (''||scm.get_cstmr_splr_site_name(tbl2.supplier_id)||'')'') ilike ''%{:sppplr_nm}%'' 
  ORDER BY tbl2.pybls_invc_date ASC, tbl2.pybls_invc_hdr_id ASC;', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:16', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '5,6', cols_to_average = '', cols_to_no_frmt = '5,6', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 95)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:16
UPDATE rpt.rpt_reports SET report_name = 'All Petty Cash Documents', report_desc = 'All Petty Cash Documents', rpt_sql_query = 'SELECT row_number() OVER (ORDER BY a.approval_status DESC, a.ptycsh_vchr_date DESC, a.ptycsh_vchr_hdr_id DESC
) AS "No.  ", 
a.ptycsh_vchr_hdr_id mt, a.ptycsh_vchr_number "Invoice Number", 
to_char(to_timestamp(a.ptycsh_vchr_date,''YYYY-MM-DD HH24:MI:SS''),
''DD-Mon-YYYY HH24:MI:SS'') "Invoice Date", 
/*a.rcvbls_invc_type "Invoice Type",*/scm.get_cstmr_splr_name(a.supplier_id)||
'' ('' ||scm.get_cstmr_splr_site_name(a.supplier_site_id)||'')''  "Customer Name/Site", 
a.comments_desc ||'' (''|| scm.get_src_doc_num(a.src_doc_hdr_id, a.src_doc_type) || ''-''||a.src_doc_type ||'')'' "Invoice Description",
round(accb.get_ptycsh_smry_typ_amnt(a.ptycsh_vchr_hdr_id, a.ptycsh_vchr_type, ''6Grand Total'') + 
abs(accb.get_ptycsh_smry_typ_amnt(a.ptycsh_vchr_hdr_id, a.ptycsh_vchr_type, ''3Discount'')),2) "Invoice Amount", 
round(accb.get_ptycsh_smry_typ_amnt(a.ptycsh_vchr_hdr_id, a.ptycsh_vchr_type, ''3Discount''),2)  "Discount Amount",
round(accb.get_ptycsh_smry_typ_amnt(a.ptycsh_vchr_hdr_id, a.ptycsh_vchr_type, ''7Total Payments Made''),2)  "Payments Made", 
round(accb.get_ptycsh_smry_typ_amnt(a.ptycsh_vchr_hdr_id, a.ptycsh_vchr_type, ''8Outstanding Balance''),2)  "Outstanding Amount",
 a.approval_status "Approval Status"
        FROM accb.accb_ptycsh_vchr_hdr a 
        WHERE((a.org_id = {:orgID}) and a.approval_status!=''Cancelled''
 and (COALESCE(scm.get_cstmr_splr_name(a.supplier_id),'''') ilike ''{:sppplr_nm}''))', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:16', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6', cols_to_average = '', cols_to_no_frmt = '6', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 94)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:16
UPDATE rpt.rpt_reports SET report_name = 'Petty Cash Voucher', report_desc = 'Petty Cash Voucher', rpt_sql_query = 'SELECT b.ptycsh_vchr_hdr_id pybls_invc_hdr_id,
to_char(to_timestamp(b.ptycsh_vchr_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') invc_date,
b.ptycsh_vchr_number pybls_invc_number,
b.ptycsh_vchr_type pybls_invc_type,
b.comments_desc, 
scm.get_cstmr_splr_name(b.supplier_id) customer_name, 
        COALESCE(f.site_name,'' '') site_name, COALESCE(f.billing_address,'' '') billing_address, 
        COALESCE(f.ship_to_address,'' '') ship_to_address,
         b.payment_terms,
a.ptycsh_smmry_id pybls_smmry_id, 
a.ptycsh_smmry_desc pybls_smmry_desc,
CASE WHEN substr(a.ptycsh_smmry_type,1,1) IN (''3'',''5'') 
THEN -1 * a.ptycsh_smmry_amnt ELSE a.ptycsh_smmry_amnt END amnt, 
a.code_id_behind, a.ptycsh_smmry_type pybls_smmry_type, a.auto_calc,
	    gst.get_pssbl_val(b.invc_curr_id) curr   
FROM accb.accb_ptycsh_amnt_smmrys a, accb.accb_ptycsh_vchr_hdr b 
      LEFT OUTER JOIN scm.scm_cstmr_suplr_sites f  ON (b.supplier_site_id =f.cust_sup_site_id)
WHERE((a.src_ptycsh_hdr_id ={:invoice_id}  and b.ptycsh_vchr_hdr_id=a.src_ptycsh_hdr_id) 
 and (substr(a.ptycsh_smmry_type,1,1) NOT IN (''6'',''7'',''8''))
) ORDER BY a.ptycsh_smmry_type', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:16', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='93.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 93)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:16
UPDATE rpt.rpt_reports SET report_name = 'Dues Collections not done Properly', report_desc = 'Dues Collections not done Properly', rpt_sql_query = 'SELECT  
row_number() over (ORDER BY c.invc_date DESC) "No. ",
 invc_det_ln_id, c.invc_number, 
c.invc_date, (doc_qty*unit_selling_price) amnt, 
       b.item_code_name
  FROM scm.scm_sales_invc_det a,
  org.org_pay_items b,
  scm.scm_sales_invc_hdr c
  WHERE a.itm_id=b.inv_item_id
  and a.lnkd_person_id <=0
  and a.invc_hdr_id = c.invc_hdr_id
  and b.item_code_name ilike ''%Dues%''
  /*and c.allow_dues=''1''*/
  ORDER BY c.invc_date DESC;', owner_module = 'Generic Module', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:16', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 92)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:16
UPDATE rpt.rpt_reports SET report_name = 'Withholding Tax Report (Internal Use)', report_desc = 'Withholding Tax Report (Internal Use)', rpt_sql_query = 'select 
row_number() OVER (ORDER BY tbl2.pybls_invc_date ASC, tbl2.pybls_invc_hdr_id ASC) AS "No.  ", 
tbl2.pybls_invc_hdr_id || '' (''||tbl2.pybls_invc_number||'')'' AS "PV No. (Invoice Number) ",
tbl2.pybls_invc_date mt,
to_char(to_timestamp(tbl2.pybls_invc_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') AS "Document Date  ",
REPLACE(scm.get_cstmr_splr_name(tbl2.supplier_id)||'' (''||scm.get_cstmr_splr_site_name(tbl2.supplier_id)||'')'',''GHANA INSTITUTION OF ENGINEERS (GhIE)'',''Unknown'') AS "Vendor/Supplier          ",
tbl3.tin_number AS "TIN NUMBER ",
tbl2.work_desc AS "Transaction Description                              ",
tbl2.invc_amnt AS "Invoice Amount",
tbl2.pybls_smmry_amnt AS "Amount Withheld",
tbl2.code_name AS "Tax Type               "
from (Select tbl1.*, d.pybls_smmry_amnt, c.code_name 
FROM (SELECT pybls_invc_hdr_id, pybls_invc_date,  pybls_invc_number, pybls_invc_type, 
 supplier_id, 
       SUM(b.pybls_smmry_amnt) invc_amnt,
       -1,
string_agg(b.pybls_smmry_desc,'' & '') work_desc 
  FROM accb.accb_pybls_invc_hdr a, 
  accb.accb_pybls_amnt_smmrys b
   WHERE b.pybls_smmry_type =''1Initial Amount''
  and a.pybls_invc_hdr_id = b.src_pybls_hdr_id
  and a.pybls_invc_type = b.src_pybls_type 
  and b.pybls_smmry_desc not ilike ''%vat %''
  and a.approval_status=''Approved''
  and a.org_id = {:orgID}
  GROUP BY 1,2,3,4,5,7) tbl1,
  scm.scm_tax_codes c, 
  accb.accb_pybls_amnt_smmrys d
   WHERE 
  tbl1.pybls_invc_hdr_id = d.src_pybls_hdr_id
  and tbl1.pybls_invc_type = d.src_pybls_type 
  and d.code_id_behind = c.code_id
  and c.itm_type =''Tax'' and c.is_withldng_tax=''1'' 
  and d.initial_amnt_line_id < 0 
  UNION
  Select tbl1.*, d.pybls_smmry_amnt, c.code_name 
FROM (SELECT pybls_invc_hdr_id, pybls_invc_date,  pybls_invc_number, pybls_invc_type, 
  supplier_id, 
       SUM(b.pybls_smmry_amnt) invc_amnt,
       b.pybls_smmry_id,
string_agg(b.pybls_smmry_desc,'' & '') work_desc 
  FROM accb.accb_pybls_invc_hdr a, 
  accb.accb_pybls_amnt_smmrys b
   WHERE b.pybls_smmry_type =''1Initial Amount''
  and a.pybls_invc_hdr_id = b.src_pybls_hdr_id
  and a.pybls_invc_type = b.src_pybls_type 
 and a.org_id = {:orgID}
  and b.pybls_smmry_desc not ilike ''%vat %''
  and a.approval_status=''Approved''
  GROUP BY 1,2,3,4,5,7) tbl1,
  scm.scm_tax_codes c, 
  accb.accb_pybls_amnt_smmrys d
   WHERE 
  tbl1.pybls_invc_hdr_id = d.src_pybls_hdr_id
  and tbl1.pybls_smmry_id=d.initial_amnt_line_id
  and tbl1.pybls_invc_type = d.src_pybls_type 
  and d.code_id_behind = c.code_id
  and c.itm_type =''Tax'' and c.is_withldng_tax=''1'' 
  and d.initial_amnt_line_id > 0) tbl2,
  scm.scm_cstmr_suplr tbl3
  WHERE  
  tbl2.supplier_id = tbl3.cust_sup_id 
  and (to_timestamp(tbl2.pybls_invc_date||'' 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'')
 and to_timestamp(''{:endDte}'',''DD-Mon-YYYY HH24:MI:SS'')) 
 and (scm.get_cstmr_splr_name(tbl2.supplier_id)||'' (''||scm.get_cstmr_splr_site_name(tbl2.supplier_id)||'')'') ilike ''%{:sppplr_nm}%'' 
  ORDER BY tbl2.pybls_invc_date ASC, tbl2.pybls_invc_hdr_id ASC;', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:16', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '7,8', cols_to_average = '', cols_to_no_frmt = '7,8', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 91)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:16
UPDATE rpt.rpt_reports SET report_name = 'Payables Invoice', report_desc = 'Payables Invoice', rpt_sql_query = 'SELECT b.pybls_invc_hdr_id,
to_char(to_timestamp(b.pybls_invc_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') invc_date,
b.pybls_invc_number,
b.pybls_invc_type,
b.comments_desc, 
scm.get_cstmr_splr_name(b.supplier_id) customer_name, 
        COALESCE(f.site_name,'' '') site_name, COALESCE(f.billing_address,'' '') billing_address, 
        COALESCE(f.ship_to_address,'' '') ship_to_address,
         b.payment_terms,
a.pybls_smmry_id, 
a.pybls_smmry_desc,
CASE WHEN substr(a.pybls_smmry_type,1,1) IN (''3'',''5'') 
THEN -1 * a.pybls_smmry_amnt ELSE a.pybls_smmry_amnt END amnt, 
a.code_id_behind, a.pybls_smmry_type, a.auto_calc,
	    gst.get_pssbl_val(b.invc_curr_id) curr   
FROM accb.accb_pybls_amnt_smmrys a, accb.accb_pybls_invc_hdr b 
      LEFT OUTER JOIN scm.scm_cstmr_suplr_sites f  ON (b.supplier_site_id =f.cust_sup_site_id)
WHERE((a.src_pybls_hdr_id ={:invoice_id}  and b.pybls_invc_hdr_id=a.src_pybls_hdr_id) 
 and (substr(a.pybls_smmry_type,1,1) NOT IN (''6'',''7'',''8''))
) ORDER BY a.pybls_smmry_type', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:16', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='90.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 90)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:17
UPDATE rpt.rpt_reports SET report_name = 'Receivables Invoice', report_desc = 'Receivables Invoice', rpt_sql_query = 'SELECT b.rcvbls_invc_hdr_id,
to_char(to_timestamp(b.rcvbls_invc_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') invc_date,
b.rcvbls_invc_number,
b.rcvbls_invc_type,
b.comments_desc, 
scm.get_cstmr_splr_name(b.customer_id) customer_name, 
        COALESCE(f.site_name,'' '') site_name, COALESCE(f.billing_address,'' '') billing_address, 
        COALESCE(f.ship_to_address,'' '') ship_to_address,
         b.payment_terms,
a.rcvbl_smmry_id, 
a.rcvbl_smmry_desc,
CASE WHEN substr(a.rcvbl_smmry_type,1,1) IN (''3'',''5'') 
THEN -1 * a.rcvbl_smmry_amnt ELSE a.rcvbl_smmry_amnt END amnt, 
a.code_id_behind, a.rcvbl_smmry_type, a.auto_calc,
	    gst.get_pssbl_val(b.invc_curr_id) curr   
FROM accb.accb_rcvbl_amnt_smmrys a, accb.accb_rcvbls_invc_hdr b 
      LEFT OUTER JOIN scm.scm_cstmr_suplr_sites f  ON (b.customer_site_id =f.cust_sup_site_id)
WHERE((a.src_rcvbl_hdr_id ={:invoice_id}  and b.rcvbls_invc_hdr_id=a.src_rcvbl_hdr_id) 
 and (substr(a.rcvbl_smmry_type,1,1) NOT IN (''6'',''7'',''8''))
) ORDER BY a.rcvbl_smmry_type', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:17', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='89.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 89)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:17
UPDATE rpt.rpt_reports SET report_name = 'Customized Pay Slip (Sample 1)', report_desc = 'Customized Pay Slip (Sample 1)', rpt_sql_query = 'SELECT 
c.local_id_no id_num, 
trim(c.title || '' '' || c.first_name || '' '' || c.other_names || '' '' || c.sur_name) full_name, 
to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''Mon-YYYY'') payment_date, 
 c.person_id, 
      org.get_div_name(pasn.get_prsn_divid_of_spctype(a.person_id,''Department'')) department_name, 
      org.get_grade_name(pasn.get_prsn_grdid(a.person_id)) grade_nm,
      org.get_job_name(pasn.get_prsn_jobid(a.person_id)) job_nm,
      org.get_pos_name(pasn.get_prsn_posid(a.person_id)) pos_nm,
      COALESCE(e.id_number,''-'') ssnit_num,
      COALESCE(d.bank_name, ''-'') bank_nm,
      COALESCE(d.bank_branch,''-'') bank_brnch,
      COALESCE(d.account_number,''-'') bank_acc_num,
      pay.get_blsitem_bals(a.person_id,org.get_payitm_id(''Take Home Pay''),substring(a.paymnt_date from 1 for 10)) net_pay,
      ''{:fromDate} 00:00:00'' from_date,
      ''{:toDate} 23:59:59'' to_date,
      b.org_id,
      gst.get_pssbl_val(a.crncy_id) curr   
FROM (pay.pay_itm_trnsctns a 
LEFT OUTER JOIN org.org_pay_items b ON a.item_id = b.item_id)
LEFT OUTER JOIN prs.prsn_names_nos c on a.person_id = c.person_id 
LEFT OUTER JOIN pasn.prsn_bank_accounts d on a.person_id = d.person_id 
LEFT OUTER JOIN prs.prsn_national_ids e on a.person_id = e.person_id and e.national_id_typ=''SSNIT''
WHERE((a.pymnt_vldty_status=''VALID'' and a.src_py_trns_id<=0) and (trim(c.title || '' '' || c.sur_name || '', '' || c.first_name || '' '' || c.other_names) ilike ''%'') 
and (b.org_id ={:orgID}) 
and (to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS'') 
between to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') 
AND to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS''))) 
AND c.local_id_no IN ({:IDNos})
AND b.local_classfctn ilike ''%Staff Payroll Item%''
 GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17
 ORDER BY 1', owner_module = 'Generic Module', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:17', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '2,3,4,5,6,7,8,9,10', cols_to_average = '', cols_to_no_frmt = '2,3,4,5,6,7,8,9,10', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='88.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 88)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:17
UPDATE rpt.rpt_reports SET report_name = 'All Receivables Invoices', report_desc = 'All Receivables Invoices', rpt_sql_query = 'SELECT row_number() OVER (ORDER BY a.approval_status DESC, a.rcvbls_invc_date DESC, a.rcvbls_invc_hdr_id DESC) AS "No.  ", 
rcvbls_invc_hdr_id mt, rcvbls_invc_number "Invoice Number", 
to_char(to_timestamp(a.rcvbls_invc_date,''YYYY-MM-DD HH24:MI:SS''),
''DD-Mon-YYYY HH24:MI:SS'') "Invoice Date", 
/*a.rcvbls_invc_type "Invoice Type",*/scm.get_cstmr_splr_name(a.customer_id)||
'' ('' ||scm.get_cstmr_splr_site_name(customer_site_id)||'')''  "Customer Name/Site", 
a.comments_desc ||'' (''|| scm.get_src_doc_num(a.src_doc_hdr_id, a.src_doc_type) || ''-''||a.src_doc_type ||'')'' "Invoice Description",
round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''6Grand Total'') + 
abs(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''3Discount'')),2) "Invoice Amount", 
round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''3Discount''),2)  "Discount Amount",
round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''7Total Payments Made''),2)  "Payments Made", 
round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''8Outstanding Balance''),2)  "Outstanding Amount",
 a.approval_status "Approval Status"
        FROM accb.accb_rcvbls_invc_hdr a 
        
WHERE((a.org_id = {:orgID}) and a.approval_status!=''Cancelled'' and (COALESCE(scm.get_cstmr_splr_name(a.customer_id),'''') ilike ''{:cstmr_nm}'') 
               
AND (to_timestamp(a.rcvbls_invc_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:endDte}'',''DD-Mon-YYYY HH24:MI:SS''))) 
        
ORDER BY a.approval_status DESC, a.rcvbls_invc_date DESC, a.rcvbls_invc_hdr_id DESC', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:17', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6,7,8,9', cols_to_average = '', cols_to_no_frmt = '6,7,8,9', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 87)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:17
UPDATE rpt.rpt_reports SET report_name = 'All Payables Invoices', report_desc = 'All Payables Invoices', rpt_sql_query = 'SELECT row_number() OVER (ORDER BY a.approval_status DESC, a.pybls_invc_date DESC, a.pybls_invc_hdr_id DESC
) AS "No.  ", 
a.pybls_invc_hdr_id mt, a.pybls_invc_number "Invoice Number", 
to_char(to_timestamp(a.pybls_invc_date,''YYYY-MM-DD HH24:MI:SS''),
''DD-Mon-YYYY HH24:MI:SS'') "Invoice Date", 
/*a.rcvbls_invc_type "Invoice Type",*/scm.get_cstmr_splr_name(a.supplier_id)||
'' ('' ||scm.get_cstmr_splr_site_name(a.supplier_site_id)||'')''  "Customer Name/Site", 
a.comments_desc ||'' (''|| scm.get_src_doc_num(a.src_doc_hdr_id, a.src_doc_type) || ''-''||a.src_doc_type ||'')'' "Invoice Description",
round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''6Grand Total'') + 
abs(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''3Discount'')),2) "Invoice Amount", 
round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''3Discount''),2)  "Discount Amount",
round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''7Total Payments Made''),2)  "Payments Made", 
round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''8Outstanding Balance''),2)  "Outstanding Amount",
 a.approval_status "Approval Status"
        FROM accb.accb_pybls_invc_hdr a 
        WHERE((a.org_id = {:orgID}) and a.approval_status!=''Cancelled''
 and (COALESCE(scm.get_cstmr_splr_name(a.supplier_id),'''') ilike ''{:sppplr_nm}'') 
        
AND (to_timestamp(a.pybls_invc_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:endDte}'',''DD-Mon-YYYY HH24:MI:SS''))) 
       
 ORDER BY a.approval_status DESC, a.pybls_invc_date DESC, a.pybls_invc_hdr_id DESC', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:17', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6,7,8,9', cols_to_average = '', cols_to_no_frmt = '6,7,8,9', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 86)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:17
UPDATE rpt.rpt_reports SET report_name = 'Date Summary Invoice', report_desc = 'Date Summary Invoice', rpt_sql_query = 'SELECT 
	a.invc_hdr_id,
	e.invc_number, 
	e.invc_type, 
	to_char(to_timestamp(e.invc_date,''YYYY-MM-DD''),''DD-Mon-YYYY'')  invc_date,
    SUM(a.doc_qty) doc_qty, 
    SUM(a.unit_selling_price) unit_selling_price, 
    SUM(a.doc_qty * a.unit_selling_price) amnt, 
    CASE WHEN a.extra_desc !='''' THEN 
      a.extra_desc
    ELSE 
      to_char(to_timestamp(a.last_update_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY'')
    END item_desc, 
    CASE WHEN char_length(MAX(a.extra_desc)) = 20 THEN 
      to_timestamp(MAX(a.extra_desc),''DD-Mon-YYYY HH24:MI:SS'')
    ELSE 
      to_timestamp(MAX(a.last_update_date),''YYYY-MM-DD HH24:MI:SS'')
    END dte_rcvd,
     d.cat_name,
     scm.get_cstmr_splr_name(e.customer_id) customer_name, 
     COALESCE(f.site_name,'' '') site_name, 
     COALESCE(f.billing_address,'' '') billing_address, 
     COALESCE(f.ship_to_address,'' '') ship_to_address, e.payment_terms,
	    gst.get_pssbl_val(e.invc_curr_id) curr 
      FROM scm.scm_sales_invc_det a, inv.inv_itm_list b, inv.inv_product_categories d, scm.scm_sales_invc_hdr e 
      LEFT OUTER JOIN scm.scm_cstmr_suplr_sites f  ON (e.customer_site_id =f.cust_sup_site_id)
      WHERE(a.invc_hdr_id=e.invc_hdr_id  and a.invc_hdr_id ={:invoice_id}  and a.invc_hdr_id >0 
      and a.itm_id = b.item_id and d.cat_id = b.category_id) 
      GROUP BY 1,2,3,4,8,10,11,12,13,14,15 
      ORDER BY 8,1', owner_module = 'Generic Module', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:17', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='112.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 85)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:17
UPDATE rpt.rpt_reports SET report_name = 'Sales Invoice - No Qty & Unit Price', report_desc = 'Sales Invoice - No Qty & Unit Price', rpt_sql_query = 'SELECT 
	a.invc_hdr_id,
	e.invc_number, 
	e.invc_type, 
	to_char(to_timestamp(e.invc_date,''YYYY-MM-DD''),''DD-Mon-YYYY'')  invc_date,
        a.doc_qty, a.unit_selling_price, (a.doc_qty * a.unit_selling_price) amnt, 
        b.item_code, (CASE WHEN a.alternate_item_name='''' THEN b.item_desc ELSE a.alternate_item_name END) || '' for '' || REPLACE(prs.get_prsn_surname(a.lnkd_person_id) || '' ('' 
      || prs.get_prsn_loc_id(a.lnkd_person_id) || '')'', '' ()'', '''') item_desc, 
        b.base_uom_id,c.uom_name, d.cat_name, scm.get_cstmr_splr_name(e.customer_id) customer_name, 
        COALESCE(f.site_name,'' '') site_name, COALESCE(f.billing_address,'' '') billing_address, 
        COALESCE(f.ship_to_address,'' '') ship_to_address, e.payment_terms,
	    gst.get_pssbl_val(e.invc_curr_id) curr 
      FROM scm.scm_sales_invc_det a, inv.inv_itm_list b, 
        inv.unit_of_measure c, inv.inv_product_categories d, scm.scm_sales_invc_hdr e 
      LEFT OUTER JOIN scm.scm_cstmr_suplr_sites f  ON (e.customer_site_id =f.cust_sup_site_id)
      WHERE(a.invc_hdr_id=e.invc_hdr_id  and a.invc_hdr_id = {:invoice_id} and a.invc_hdr_id >0 
      and a.itm_id = b.item_id and b.base_uom_id=c.uom_id and d.cat_id = b.category_id) 
      ORDER BY a.invc_det_ln_id', owner_module = 'Generic Module', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:17', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='111.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 84)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:17
UPDATE rpt.rpt_reports SET report_name = 'Sales Invoice', report_desc = 'Sales Invoice', rpt_sql_query = 'SELECT 
	a.invc_hdr_id,
	e.invc_number, 
	e.invc_type, 
	to_char(to_timestamp(e.invc_date,''YYYY-MM-DD''),''DD-Mon-YYYY'')  invc_date,
        a.doc_qty, a.unit_selling_price, (a.doc_qty * a.unit_selling_price*a.rented_itm_qty) amnt, 
        b.item_code, CASE WHEN a.alternate_item_name='''' THEN b.item_desc ELSE a.alternate_item_name END item_desc, 
        b.base_uom_id,c.uom_name, d.cat_name, scm.get_cstmr_splr_name(e.customer_id) customer_name, 
        COALESCE(f.site_name,'' '') site_name, COALESCE(f.billing_address,'' '') billing_address, 
        COALESCE(f.ship_to_address,'' '') ship_to_address, e.payment_terms,
	    gst.get_pssbl_val(e.invc_curr_id) curr,
	    CASE WHEN a.rented_itm_qty>1 THEN ''''||a.rented_itm_qty||'' x '' || a.doc_qty ELSE ''''|| a.doc_qty END  doc_qty2 
      FROM scm.scm_sales_invc_det a, inv.inv_itm_list b, 
        inv.unit_of_measure c, inv.inv_product_categories d, scm.scm_sales_invc_hdr e 
      LEFT OUTER JOIN scm.scm_cstmr_suplr_sites f  ON (e.customer_site_id =f.cust_sup_site_id)
      WHERE(a.invc_hdr_id=e.invc_hdr_id  and a.invc_hdr_id = {:invoice_id} and a.invc_hdr_id >0 
      and a.itm_id = b.item_id and b.base_uom_id=c.uom_id and d.cat_id = b.category_id) 
      ORDER BY a.invc_det_ln_id', owner_module = 'Generic Module', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:17', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='83.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 83)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:18
UPDATE rpt.rpt_reports SET report_name = 'Persons Below 60 Years (EXCEL)', report_desc = 'Persons Below 60 Years (EXCEL)', rpt_sql_query = 'SELECT  
row_number() over (ORDER BY c.local_id_no) "No. ",
c.title || '' '' || c.first_name || '' '' || c.other_names 
|| '' '' || c.sur_name || '' ('' || c.local_id_no || '')'' as "Full Name                ", 
(select org.get_grade_name(pg.grade_id)) "Grade                  ", 
(select org.get_div_name(pdg.div_id)) "Division                  ", 
scm.get_cstmr_splr_name(c.lnkd_firm_org_id) "Linked Firm/Workplace             ",/**/
CASE WHEN c.pstl_addrs !='''' THEN c.pstl_addrs ELSE c.res_address END "Postal Address              ",
/*''Tel.: '' || c.cntct_no_tel || '' Mobile No.: '' || c.cntct_no_mobl "Tel. No.          ",
''Fax.: '' || c.cntct_no_fax "Fax                     ",
''E-mail: '' || c.email "Email Address             ",*/
REPLACE(c.nationality,''ian'','''') "Country            ",
to_char(to_timestamp(c.date_of_birth,''YYYY-MM-DD''),''DD-Mon-YYYY'') "Date of Birth ",
extract(YEAR from age(now(), to_timestamp(c.date_of_birth,''YYYY-MM-DD''))) || '' Years'' "AGE                    ",
c.gender
FROM prs.prsn_names_nos c 
left outer join pasn.prsn_prsntyps ppt
 on (c.person_id = ppt.person_id
  and now() between to_timestamp(ppt.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
AND to_timestamp(ppt.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) 
left outer join pasn.prsn_divs_groups pdg 
  on  (c.person_id = pdg.person_id and org.get_div_type(pdg.div_id)=''Technical Division'')
left outer join pasn.prsn_grades pg on c.person_id = pg.person_id
 
where '''' || coalesce(ppt.prsn_type,''-1'') = coalesce(NULLIF(''{:pstntyp}'',''''), '''' || coalesce(ppt.prsn_type,''-1''))

AND (age(now(), to_timestamp(c.date_of_birth,''YYYY-MM-DD'')) between interval ''20 years'' and interval ''60 Years'')  
ORDER BY c.local_id_no', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:18', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 82)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:18
UPDATE rpt.rpt_reports SET report_name = 'Persons Above 60 Years (EXCEL)', report_desc = 'Persons Above 60 Years (EXCEL)', rpt_sql_query = 'SELECT  
row_number() over (ORDER BY c.local_id_no) "No. ",
c.title || '' '' || c.first_name || '' '' || c.other_names 
|| '' '' || c.sur_name || '' ('' || c.local_id_no || '')'' as "Full Name                ", 
(select org.get_grade_name(pg.grade_id)) "Grade                  ", 
(select org.get_div_name(pdg.div_id)) "Division                  ", 
scm.get_cstmr_splr_name(c.lnkd_firm_org_id) "Linked Firm/Workplace             ",/**/
CASE WHEN c.pstl_addrs !='''' THEN c.pstl_addrs ELSE c.res_address END "Postal Address              ",
/*''Tel.: '' || c.cntct_no_tel || '' Mobile No.: '' || c.cntct_no_mobl "Tel. No.          ",
''Fax.: '' || c.cntct_no_fax "Fax                     ",
''E-mail: '' || c.email "Email Address             ",*/
REPLACE(c.nationality,''ian'','''') "Country            ",
to_char(to_timestamp(c.date_of_birth,''YYYY-MM-DD''),''DD-Mon-YYYY'') "Date of Birth ",
extract(YEAR from age(now(), to_timestamp(c.date_of_birth,''YYYY-MM-DD''))) || '' Years'' "AGE                    ",
c.gender
FROM prs.prsn_names_nos c 
left outer join pasn.prsn_prsntyps ppt
 on (c.person_id = ppt.person_id
  and now() between to_timestamp(ppt.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
AND to_timestamp(ppt.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) 
left outer join pasn.prsn_divs_groups pdg 
  on  (c.person_id = pdg.person_id and org.get_div_type(pdg.div_id)=''Technical Division'')
left outer join pasn.prsn_grades pg on c.person_id = pg.person_id
 
where '''' || coalesce(ppt.prsn_type,''-1'') = coalesce(NULLIF(''{:pstntyp}'',''''), '''' || coalesce(ppt.prsn_type,''-1''))

AND NOT(age(now(), to_timestamp(c.date_of_birth,''YYYY-MM-DD'')) between interval ''20 years'' and interval ''60 Years'')  
ORDER BY c.local_id_no', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:18', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 81)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:18
UPDATE rpt.rpt_reports SET report_name = 'Asset Preventive Maintenance Records', report_desc = 'Asset Preventive Maintenance Records', rpt_sql_query = 'SELECT asset_pm_rec_id, measurement_type, uom, 
to_char(to_timestamp(record_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS''), 
to_char(to_timestamp(record_date,''YYYY-MM-DD HH24:MI:SS''),''Day''), 
starting_fig, ending_fig, (ending_fig-starting_fig) "Net Figure ",
accb.getMxAllwdDailyFig(a.asset_id, measurement_type,uom)-(ending_fig-starting_fig) "Excess/Overtime Figure ",
accb.getCumFigForPM(a.asset_id, measurement_type,uom)-
accb.getSumPrevPMNetFigs(a.asset_id, measurement_type,uom,to_char(now(),''YYYY-MM-DD'')) "Cumulative Figure Left for PM ",
is_pm_done "Is PM Done?", 
exact_pm_action_done "PM Action Taken ", 
comments_remarks "Remarks        "
  FROM accb.accb_fa_assets_pm_recs a,
accb.accb_fa_assets_rgstr b 
WHERE a.asset_id = b.asset_id and b.org_id = {:orgID}
AND ''''||a.asset_id = coalesce(NULLIF(''{:asset_id}'',''''), ''''||a.asset_id) 
and (to_timestamp(a.record_date,''YYYY-MM-DD HH24:MI:SS'') between 
        to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'') AND 
        to_timestamp(''{:endDte}'', ''DD-Mon-YYYY HH24:MI:SS''));', owner_module = 'Hospitality Management', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:18', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6', cols_to_average = '', cols_to_no_frmt = '6', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 80)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:18
UPDATE rpt.rpt_reports SET report_name = 'Asset Expenditure Report', report_desc = 'Asset Expenditure Report', rpt_sql_query = 'SELECT a.asset_trns_id mt1, b.asset_code_name, 
       b.asset_desc, a.line_desc, a.trns_amount,       
       to_char(to_timestamp(a.trns_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') "Transaction Date  ", 
       a.entrd_curr_id mt2, gst.get_pssbl_val(a.entrd_curr_id), 
       a.incrs_dcrs1, accb.get_accnt_num(a.cost_accnt_id) || ''.'' || accb.get_accnt_name(a.cost_accnt_id) "Charge Account  ", 
       a.incrs_dcrs2, accb.get_accnt_num(a.bals_leg_accnt_id) || ''.'' || accb.get_accnt_name(a.bals_leg_accnt_id) "Balancing Account  ", 
       accb.get_gl_batch_name(a.gl_batch_id) "GL Batch Name     ",        
       a.func_curr_id mt3, gst.get_pssbl_val(a.func_curr_id), 
       a.accnt_curr_id mt4, gst.get_pssbl_val(a.accnt_curr_id), 
       a.func_curr_rate, a.accnt_curr_rate, a.func_curr_amount, a.accnt_curr_amnt
  FROM accb.accb_fa_asset_trns a,
accb.accb_fa_assets_rgstr b 
WHERE a.asset_id = b.asset_id  and b.org_id = {:orgID} 
and a.trns_type ilike ''{:assetTrnsTyp}'' 
AND ''''||a.asset_id = coalesce(NULLIF(''{:asset_id}'',''''), ''''||a.asset_id);', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:18', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6', cols_to_average = '', cols_to_no_frmt = '6', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 79)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:18
UPDATE rpt.rpt_reports SET report_name = 'Asset Register Report', report_desc = 'Asset Register Report', rpt_sql_query = 'SELECT asset_id mt, asset_code_name, asset_desc, asset_classification, 
       asset_category, asset_div_grp_id mt1, org.get_div_name(asset_div_grp_id), 
       asset_site_id mt2, org.get_site_name(asset_site_id), asset_building_loc, 
       asset_room_no, asset_caretaker, 
       prs.get_prsn_name(asset_caretaker) || '' ('' || prs.get_prsn_loc_id(asset_caretaker) || '')'' "Full Name             ", 
       tag_number, serial_number, barcode, 
       to_char(to_timestamp(asset_life_start_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') "Start Date      ", 
       to_char(to_timestamp(asset_life_end_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'')  "End Date      ", 
       asset_accnt_id mt3, accb.get_accnt_num(asset_accnt_id) || ''.'' || accb.get_accnt_name(asset_accnt_id) assetacc,
       dpr_aprc_accnt_id mt4, accb.get_accnt_num(dpr_aprc_accnt_id) || ''.'' || accb.get_accnt_name(dpr_aprc_accnt_id) depreacc,
       expns_rvnu_accnt_id mt5, accb.get_accnt_num(expns_rvnu_accnt_id) || ''.'' || accb.get_accnt_name(expns_rvnu_accnt_id) expnsacc,
       inv_item_id mt6, inv.get_invitm_name(inv_item_id), 
       sql_formula mt7, asset_salvage_value, enbl_auto_dprctn mt8
  FROM accb.accb_fa_assets_rgstr a 
Where org_id = {:orgID};', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:18', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6', cols_to_average = '', cols_to_no_frmt = '6', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 78)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:18
UPDATE rpt.rpt_reports SET report_name = 'Asset Rentals Report', report_desc = 'Asset Rentals Report', rpt_sql_query = 'SELECT row_number() OVER (ORDER BY a.invc_date, y.user_name, c.item_desc ASC, b.alternate_item_name ASC) AS "No.  ", 
	e.asset_code_name, 
        CASE WHEN b.alternate_item_name = '''' THEN 
        trim(c.item_code || '' '' || REPLACE(c.item_desc, c.item_code,'''')) ELSE b.alternate_item_name END "Item Code/Desc.                     ", 
        a.invc_number || ''('' || i.doc_num || '')'' "Document Number    ", 
	a.comments_desc "Invoice Description                             ", 
        b.doc_qty "QTY           ", 
        d.uom_name "UOM              ", 
        b.unit_selling_price "Sales Price ", 
        b.doc_qty * b.unit_selling_price "Total Amount  ",
        c.item_desc mt,
        gst.get_pssbl_val(b.crncy_id) "Curr. ",
	y.user_name "User Name " 
        FROM scm.scm_sales_invc_hdr a, sec.sec_users y, scm.scm_sales_invc_det b, inv.inv_itm_list c, inv.unit_of_measure d,
	accb.accb_fa_assets_rgstr e, hotl.rooms f, hotl.checkins_hdr g, hotl.service_types h, hotl.checkins_hdr i  
        WHERE ((a.invc_hdr_id = b.invc_hdr_id AND b.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
	AND f.lnkd_asset_id = e.asset_id
	AND g.service_det_id = f.room_id
	AND b.other_mdls_doc_id = g.check_in_id 
	AND b.other_mdls_doc_type = g.doc_type
	AND a.other_mdls_doc_id = i.check_in_id 
	AND a.other_mdls_doc_type = i.doc_type
	AND g.service_type_id = h.service_type_id
	AND f.service_type_id = h.service_type_id
	AND h.inv_item_id = b.itm_id 
	AND f.lnkd_asset_id = e.asset_id 
	AND ''''||e.asset_id = coalesce(NULLIF(''{:asset_id}'',''''), ''''||e.asset_id)
        AND (b.is_itm_delivered =''1'') AND (a.org_id = {:orgID}) AND 
        (b.created_by=y.user_id) and (a.invc_type ilike ''{:doctype}'') 
        and (to_timestamp(a.invc_date || '' 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') between 
        to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'') AND 
        to_timestamp(''{:endDte}'', ''DD-Mon-YYYY HH24:MI:SS'')))  
        ORDER BY a.invc_date, y.user_name, c.item_desc ASC, b.alternate_item_name ASC;', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:18', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6', cols_to_average = '', cols_to_no_frmt = '6', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 77)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:18
UPDATE rpt.rpt_reports SET report_name = 'Items Sold Report-Detail', report_desc = 'Items Sold Report-Detail', rpt_sql_query = 'SELECT row_number() OVER (ORDER BY a.invc_date, y.user_name, c.item_desc ASC, b.alternate_item_name ASC) AS "No.  ", 
        CASE WHEN b.alternate_item_name = '''' THEN 
        trim(c.item_code || '' '' || REPLACE(c.item_desc, c.item_code,'''')) ELSE b.alternate_item_name END "Item Code/Desc.                     ", 
        a.invc_number "Document Number    ", 
        SUM(b.doc_qty) "QTY           ", 
        d.uom_name "UOM              ", 
        b.unit_selling_price "Sales Price ", 
        SUM(b.doc_qty * b.unit_selling_price) "Total Amount  ",
        c.item_desc mt,
        gst.get_pssbl_val(b.crncy_id) "Curr. ",
y.user_name "User Name " 
        FROM scm.scm_sales_invc_hdr a, sec.sec_users y, scm.scm_sales_invc_det b, inv.inv_itm_list c, inv.unit_of_measure d
        WHERE ((a.invc_hdr_id = b.invc_hdr_id AND b.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
        AND (b.is_itm_delivered =''1'') AND (a.org_id = {:orgID}) AND 
        (b.created_by=y.user_id) and (a.invc_type ilike ''{:doctype}'') 
        and (to_timestamp(a.invc_date || '' 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') between 
        to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'') AND 
        to_timestamp(''{:endDte}'', ''DD-Mon-YYYY HH24:MI:SS'')))         
        GROUP BY b.alternate_item_name, a.invc_date, a.invc_number, c.item_desc, y.user_name, b.itm_id, c.item_code, d.uom_name, b.unit_selling_price, b.crncy_id
        ORDER BY a.invc_date, y.user_name, c.item_desc ASC, b.alternate_item_name ASC;', owner_module = 'Stores And Inventory Manager', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:18', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6', cols_to_average = '', cols_to_no_frmt = '6', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 76)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:19
UPDATE rpt.rpt_reports SET report_name = 'Approved Payables Invoices', report_desc = 'Approved Payables Invoices', rpt_sql_query = 'SELECT row_number() OVER (ORDER BY a.approval_status DESC, a.pybls_invc_date DESC, a.pybls_invc_hdr_id DESC
) AS "No.  ", 
a.pybls_invc_hdr_id mt, a.pybls_invc_number "Invoice Number", 
to_char(to_timestamp(a.pybls_invc_date,''YYYY-MM-DD HH24:MI:SS''),
''DD-Mon-YYYY HH24:MI:SS'') "Invoice Date", 
/*a.rcvbls_invc_type "Invoice Type",*/scm.get_cstmr_splr_name(a.supplier_id)||
'' ('' ||scm.get_cstmr_splr_site_name(a.supplier_site_id)||'')''  "Customer Name/Site", 
a.comments_desc ||'' (''|| scm.get_src_doc_num(a.src_doc_hdr_id, a.src_doc_type) || ''-''||a.src_doc_type ||'')'' "Invoice Description",
round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''6Grand Total'') + 
abs(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''3Discount'')),2) "Invoice Amount", 
round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''3Discount''),2)  "Discount Amount",
round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''7Total Payments Made''),2)  "Payments Made", 
round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''8Outstanding Balance''),2)  "Outstanding Amount",
 a.approval_status "Approval Status"
        FROM accb.accb_pybls_invc_hdr a 
        WHERE((a.org_id = {:orgID}) and a.approval_status!=''Cancelled'' and a.approval_status ilike ''Approved'' and (COALESCE(scm.get_cstmr_splr_name(a.supplier_id),'''') ilike ''{:sppplr_nm}'') 
        
/*and round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''8Outstanding Balance''),2)>0*/
         
AND (to_timestamp(a.pybls_invc_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:endDte}'',''DD-Mon-YYYY HH24:MI:SS''))) 
        ORDER BY a.approval_status DESC, a.pybls_invc_date DESC, a.pybls_invc_hdr_id DESC', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:19', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6,7,8,9', cols_to_average = '', cols_to_no_frmt = '6,7,8,9', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 75)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:19
UPDATE rpt.rpt_reports SET report_name = 'Approved Receivables Invoices', report_desc = 'Approved Receivables Invoices', rpt_sql_query = 'SELECT row_number() OVER (ORDER BY a.approval_status DESC, a.rcvbls_invc_date DESC, a.rcvbls_invc_hdr_id DESC) AS "No.  ", 
rcvbls_invc_hdr_id mt, rcvbls_invc_number "Invoice Number", 
to_char(to_timestamp(a.rcvbls_invc_date,''YYYY-MM-DD HH24:MI:SS''),
''DD-Mon-YYYY HH24:MI:SS'') "Invoice Date", 
/*a.rcvbls_invc_type "Invoice Type",*/scm.get_cstmr_splr_name(a.customer_id)||
'' ('' ||scm.get_cstmr_splr_site_name(customer_site_id)||'')''  "Customer Name/Site", 
a.comments_desc ||'' (''|| scm.get_src_doc_num(a.src_doc_hdr_id, a.src_doc_type) || ''-''||a.src_doc_type ||'')'' "Invoice Description",
round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''6Grand Total'') + 
abs(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''3Discount'')),2) "Invoice Amount", 
round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''3Discount''),2)  "Discount Amount",
round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''7Total Payments Made''),2)  "Payments Made", 
round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''8Outstanding Balance''),2)  "Outstanding Amount",
 a.approval_status "Approval Status"
        FROM accb.accb_rcvbls_invc_hdr a 
        WHERE((a.org_id = {:orgID}) and a.approval_status!=''Cancelled'' and a.approval_status ilike ''Approved'' and (COALESCE(scm.get_cstmr_splr_name(a.customer_id),'''') ilike ''{:cstmr_nm}'') 
        
/*and round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''8Outstanding Balance''),2)>0
*/        
AND (to_timestamp(a.rcvbls_invc_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:endDte}'',''DD-Mon-YYYY HH24:MI:SS''))) 
        ORDER BY a.approval_status DESC, a.rcvbls_invc_date DESC, a.rcvbls_invc_hdr_id DESC', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:19', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6,7,8,9', cols_to_average = '', cols_to_no_frmt = '6,7,8,9', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 74)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:19
UPDATE rpt.rpt_reports SET report_name = 'Members over 15 Years (EXCEL)', report_desc = 'Members over 15 Years (EXCEL)', rpt_sql_query = 'SELECT  
row_number() over (ORDER BY c.local_id_no) "No. ",
c.title || '' '' || c.first_name || '' '' || c.other_names 
|| '' '' || c.sur_name || '' ('' || c.local_id_no || '')'' as "Full Name                ",
ped.data_col1 "YOG         ", 
(select org.get_grade_name(pg.grade_id)) Grade, 
(select org.get_div_name(pdg.div_id)) Division, 
scm.get_cstmr_splr_name(c.lnkd_firm_org_id) "Linked Firm/Workplace             ",
CASE WHEN c.pstl_addrs !='''' THEN c.pstl_addrs ELSE c.res_address END "Postal Address            ",
''Tel.: '' || c.cntct_no_tel || '' Mobile No.: '' || c.cntct_no_mobl "Tel. No.        ",
''Fax.: '' || c.cntct_no_fax "Fax   ",
''E-mail: '' || c.email "Email Address             " 
FROM prs.prsn_names_nos c 
left outer join pasn.prsn_prsntyps ppt
 on (c.person_id = ppt.person_id
  and now() between to_timestamp(ppt.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
AND to_timestamp(ppt.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) 
left outer join pasn.prsn_divs_groups pdg 
on (c.person_id = pdg.person_id and org.get_div_type(pdg.div_id)=''Technical Division'') 
left outer join pasn.prsn_grades pg on (c.person_id = pg.person_id
 and now() between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) 
left outer join prs.prsn_extra_data ped on ped.person_id = c.person_id 
  
where '''' || coalesce(ppt.prsn_type,''-1'') = coalesce(NULLIF(''{:pstntyp}'',''''), '''' || coalesce(ppt.prsn_type,''-1''))
 
AND '''' || coalesce(pg.grade_id,-1) = coalesce(NULLIF(''{:grd_id}'',''''), '''' || coalesce(pg.grade_id,-1))/*Grades*/
  
AND chartonumeric(to_char(now(), ''YYYY'')) - chartonumeric(ped.data_col1)>=15
ORDER BY c.local_id_no', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:19', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 73)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:19
UPDATE rpt.rpt_reports SET report_name = 'Graduate Membership Gender Distribution (Chart)', report_desc = 'Coorperate Membership Distribution (Chart)', rpt_sql_query = 'select gender || '' ('' || count(1) || '')'', count(1), gender 
FROM prs.prsn_names_nos pnn 
left outer join pasn.prsn_prsntyps ppt
  on pnn.person_id = ppt.person_id
left outer join pasn.prsn_grades pg on pnn.person_id = pg.person_id   
where ppt.prsn_type IN (''Registered Member'',''Registered Member.Staff'') 
 AND coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  and (select grade_code_name from org.org_grades og where og.grade_id = pg.grade_id ) IN (''Graduate Member (GM)'')  
group by 3;', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:19', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '800400', cols_to_count = '0,1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PIE CHART', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 72)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:19
UPDATE rpt.rpt_reports SET report_name = 'Coorperate Membership Gender Distribution (Chart)', report_desc = 'Coorperate Membership Distribution (Chart)', rpt_sql_query = 'select gender || '' ('' || count(1) || '')'', count(1), gender 
FROM prs.prsn_names_nos pnn 
left outer join pasn.prsn_prsntyps ppt
  on pnn.person_id = ppt.person_id
left outer join pasn.prsn_grades pg on pnn.person_id = pg.person_id   
where ppt.prsn_type IN (''Registered Member'',''Registered Member.Staff'') 
 AND coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  and (select grade_code_name from org.org_grades og where og.grade_id = pg.grade_id ) IN (''Member (M)'',
 ''Member (M+)'', ''Fellow (F)'',''Retired Fellow (RF)'',''Retired Member (RM)'')  
group by 3;', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:19', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '800400', cols_to_count = '0,1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PIE CHART', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 71)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:19
UPDATE rpt.rpt_reports SET report_name = 'Persons Above 74 Years (EXCEL)', report_desc = 'Persons Above 74 Years (EXCEL)', rpt_sql_query = 'SELECT  
row_number() over (ORDER BY c.local_id_no) "No. ",
c.title || '' '' || c.first_name || '' '' || c.other_names 
|| '' '' || c.sur_name || '' ('' || c.local_id_no || '')'' as "Full Name                ", 
(select org.get_grade_name(pg.grade_id)) "Grade                  ", 
(select org.get_div_name(pdg.div_id)) "Division                  ", 
scm.get_cstmr_splr_name(c.lnkd_firm_org_id) "Linked Firm/Workplace             ",/**/
CASE WHEN c.pstl_addrs !='''' THEN c.pstl_addrs ELSE c.res_address END "Postal Address              ",
/*''Tel.: '' || c.cntct_no_tel || '' Mobile No.: '' || c.cntct_no_mobl "Tel. No.          ",
''Fax.: '' || c.cntct_no_fax "Fax                     ",
''E-mail: '' || c.email "Email Address             ",*/
REPLACE(c.nationality,''ian'','''') "Country            ",
to_char(to_timestamp(c.date_of_birth,''YYYY-MM-DD''),''DD-Mon-YYYY'') "Date of Birth ",
extract(YEAR from age(now(), to_timestamp(c.date_of_birth,''YYYY-MM-DD''))) || '' Years'' "AGE                    "
FROM prs.prsn_names_nos c 
left outer join pasn.prsn_prsntyps ppt
 on (c.person_id = ppt.person_id
  and now() between to_timestamp(ppt.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
AND to_timestamp(ppt.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) 
left outer join pasn.prsn_divs_groups pdg 
  on  (c.person_id = pdg.person_id and org.get_div_type(pdg.div_id)=''Technical Division'')
left outer join pasn.prsn_grades pg on c.person_id = pg.person_id
 
where '''' || coalesce(ppt.prsn_type,''-1'') = coalesce(NULLIF(''{:pstntyp}'',''''), '''' || coalesce(ppt.prsn_type,''-1''))

AND NOT(age(now(), to_timestamp(c.date_of_birth,''YYYY-MM-DD'')) between interval ''20 years'' and interval ''75 Years'')  
ORDER BY c.local_id_no', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:19', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 70)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:19
UPDATE rpt.rpt_reports SET report_name = 'ALL OTHER ALERT', report_desc = 'ALL OTHER ALERT', rpt_sql_query = 'select 1', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:19', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Customised Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 69)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:19
UPDATE rpt.rpt_reports SET report_name = 'Addresses of Persons (WORD)', report_desc = 'Addresses of Persons', rpt_sql_query = 'SELECT  
row_number() over (ORDER BY c.local_id_no) "No. ",
c.title || '' '' || c.first_name || '' '' || c.other_names 
|| '' '' || c.sur_name || '' ('' || c.local_id_no || '')'' as "Full Name                ", 
(select org.get_grade_name(pg.grade_id)) Grade, 
(select org.get_div_name(pdg.div_id)) Division, 
scm.get_cstmr_splr_name(c.lnkd_firm_org_id) "Linked Firm/Workplace             ",/**/
trim(REPLACE(c.pstl_addrs,c.res_address,'''')) "Postal Address            ",
/*''Tel.: '' || c.cntct_no_tel || '' Mobile No.: '' || c.cntct_no_mobl "Tel. No.        ",
''Fax.: '' || c.cntct_no_fax "Fax ",
''E-mail: '' || c.email "Email Address             ",*/
c.res_address "Residential Address ",
REPLACE(c.nationality,''ian'','''') "Country         "
FROM prs.prsn_names_nos c 
left outer join pasn.prsn_prsntyps ppt
 on (c.person_id = ppt.person_id
  and now() between to_timestamp(ppt.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
AND to_timestamp(ppt.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) 
left outer join pasn.prsn_divs_groups pdg 
  on  (c.person_id = pdg.person_id and org.get_div_type(pdg.div_id)=''Technical Division'')
left outer join pasn.prsn_grades pg on c.person_id = pg.person_id
 
where '''' || coalesce(ppt.prsn_type,''-1'') = coalesce(NULLIF(''{:pstntyp}'',''''), '''' || coalesce(ppt.prsn_type,''-1''))

AND '''' || coalesce(pg.grade_id,-1) = coalesce(NULLIF(''{:grd_id}'',''''), '''' || coalesce(pg.grade_id,-1))/*Grades*/ 
AND c.local_id_no = coalesce(NULLIF(''{:pers_id}'',''''), c.local_id_no) 
AND ''''||c.lnkd_firm_org_id=coalesce(NULLIF(''{:instu_id}'',''''), ''''||c.lnkd_firm_org_id)
AND pay.get_ltst_blsitm_bals(c.person_id,org.get_payitm_id(''{:itmNm}''),to_char(now(), ''YYYY-MM-DD''))<=0
ORDER BY c.local_id_no', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:19', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT WORD', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Customised Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 68)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:19
UPDATE rpt.rpt_reports SET report_name = 'Addresses of Firms/Companies', report_desc = 'Addresses of Firms/Companies', rpt_sql_query = 'SELECT row_number() over (ORDER BY c.cust_sup_name) "No. ", 
c.cust_sup_name as "Name of Institution                ",
(select string_agg(y.email,'','') from scm.scm_cstmr_suplr_sites y where y.cust_supplier_id = c.cust_sup_id) "Email           ",  
'''''''' || (select string_agg(y.contact_nos,'','') from scm.scm_cstmr_suplr_sites y where y.cust_supplier_id = c.cust_sup_id) "Contact No.         ",
(select string_agg(y.billing_address,'','') from scm.scm_cstmr_suplr_sites y where y.cust_supplier_id = c.cust_sup_id) "Postal Address          ",
(select string_agg(y.ship_to_address,'','') from scm.scm_cstmr_suplr_sites y where y.cust_supplier_id = c.cust_sup_id) "Residential Address          ",
c.cust_sup_id "m1"
FROM scm.scm_cstmr_suplr c 
WHERE c.cust_sup_name IN 
(Select b.pssbl_value from gst.gen_stp_lov_values b 
where b.value_list_id = gst.get_lov_id(''Schools/Organisations/Institutions'')) 
AND c.cust_sup_name !=''''
ORDER BY 1', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:19', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 67)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:20
UPDATE rpt.rpt_reports SET report_name = 'Addresses of Persons (EXCEL)', report_desc = 'Addresses of Persons', rpt_sql_query = 'SELECT  
row_number() over (ORDER BY c.local_id_no) "No. ",
c.title || '' '' || c.first_name || '' '' || c.other_names 
|| '' '' || c.sur_name || '' ('' || c.local_id_no || '')'' as "Full Name                ", 
(select org.get_grade_name(pg.grade_id)) Grade, 
(select org.get_div_name(pdg.div_id)) Division, 
scm.get_cstmr_splr_name(c.lnkd_firm_org_id) "Linked Firm/Workplace             ",/**/
CASE WHEN c.pstl_addrs !='''' THEN c.pstl_addrs ELSE c.res_address END "Postal Address            ",
/*''Tel.: '' || c.cntct_no_tel || '' Mobile No.: '' || c.cntct_no_mobl "Tel. No.        ",
''Fax.: '' || c.cntct_no_fax "Fax ",
''E-mail: '' || c.email "Email Address             ",*/
REPLACE(c.nationality,''ian'','''') "Country         ",
pay.get_ltst_blsitm_bals(c.person_id,org.get_payitm_id(''{:itmNm}''),to_char(now(), ''YYYY-MM-DD'')) "Item Balance "
FROM prs.prsn_names_nos c 
left outer join pasn.prsn_prsntyps ppt
 on (c.person_id = ppt.person_id
  and now() between to_timestamp(ppt.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
AND to_timestamp(ppt.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) 
left outer join pasn.prsn_divs_groups pdg 
  on  (c.person_id = pdg.person_id and org.get_div_type(pdg.div_id)=''Technical Division'')
left outer join pasn.prsn_grades pg on c.person_id = pg.person_id
 
where '''' || coalesce(ppt.prsn_type,''-1'') = coalesce(NULLIF(''{:pstntyp}'',''''), '''' || coalesce(ppt.prsn_type,''-1''))
  
AND c.local_id_no =c.local_id_no 
AND ''''||c.lnkd_firm_org_id=coalesce(NULLIF(''{:instu_id}'',''''), ''''||c.lnkd_firm_org_id)
/*AND pay.get_ltst_blsitm_bals(c.person_id,org.get_payitm_id(''{:itmNm}''),to_char(now(), ''YYYY-MM-DD''))<=0*/
ORDER BY c.local_id_no', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:20', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 66)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:20
UPDATE rpt.rpt_reports SET report_name = 'Data Integrity Corrections', report_desc = 'Data Integrity Corrections', rpt_sql_query = '/*UPDATE inv.inv_itm_list 
  SET orgnl_selling_price = round(selling_price::numeric/(1.185),6)
  Where tax_code_id=1 and selling_price = orgnl_selling_price and selling_price<>0;

UPDATE inv.itm_uoms 
  SET price_less_tax = round(selling_price::numeric/(1.185),6)
  Where item_id IN (Select a.item_id
   from inv.itm_uoms b, inv.inv_itm_list a 
   Where a.item_id = b.item_id and a.tax_code_id=1
  and b.selling_price = b.price_less_tax and b.selling_price<>0);

UPDATE scm.scm_sales_invc_det 
 SET orgnl_selling_price = round(unit_selling_price::numeric/(1.185),6) 
  WHERE tax_code_id=1 and unit_selling_price = orgnl_selling_price;*/', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:20', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Customised Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 65)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:20
UPDATE rpt.rpt_reports SET report_name = 'Pay Run Results Slip', report_desc = 'Pay Run Results Slip', rpt_sql_query = 'select distinct pnn.person_id "toPrsnID", pnn.local_id_no "toPrsnLocID", pnn.email "toEmail",  
pnn.title || '' '' || pnn.first_name || '' '' || pnn.other_names || '' '' || pnn.sur_name as "Full Name        " 
 
  FROM prs.prsn_names_nos pnn 
  
WHERE pnn.local_id_no=''{:toPrsnLocID}''', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:20', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Customised Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 64)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:20
UPDATE rpt.rpt_reports SET report_name = 'Personal Profile Report', report_desc = 'Personal Profile Report', rpt_sql_query = 'select distinct pnn.person_id toPrsnID, pnn.local_id_no, 
pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name as "Full Name        " 
 
  FROM prs.prsn_names_nos pnn 
  
WHERE pnn.local_id_no=''{:toPrsnLocID}''', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:20', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Customised Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 63)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:20
UPDATE rpt.rpt_reports SET report_name = 'Top 20 Dues Debtors Distribution', report_desc = 'Top 20 Dues Debtors Distribution', rpt_sql_query = 'select row_number() over (order by round(SUM(tbl2.amnt),2) DESC) "No.", 
COALESCE(NULLIF(tbl2.cmpny,''''),''Unknown Company'') "Name of Company", 
round(SUM(tbl2.amnt),2) "Amount Owing" 
FROM (Select 
 tbl1.id_no, 
 tbl1.fullnm,
 tbl1.item_code_name,
 SUM(tbl1.amnt) amnt,
 600 " ",
 tbl1.Grade,
 tbl1.Division,
 tbl1.cmpny,
 b.billing_address
 from (select distinct pnn.local_id_no id_no, 
 pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name fullnm, 
 org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division, 
       b.item_code_name,
       coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0) amnt, b.pay_run_priority, scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny
  FROM prs.prsn_names_nos pnn 
  LEFT OUTER JOIN pasn.prsn_grades pg on pnn.person_id = pg.person_id
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id 
  and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
  LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))
   and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char(now(),''YYYY'')||''%'' or b.item_code_name IN(
''Welfare Fund Balance'',
''Professional Stamp Amount Balance'',
''Engineering Center, Emergency Power Fund Balance'',
''Building Levy Balance''))
  /*AND coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)>0*/
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')
  UNION
  select distinct pnn.local_id_no, 
  pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name as "Full Name                                                ", 
  org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division,
       ''Arrears from Previous Years''  "Pay Item                ", 
       SUM(coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)) "Amount  ",
       MAX(b.pay_run_priority) " ", scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny
  FROM prs.prsn_names_nos pnn 
  left outer join pasn.prsn_grades pg on pnn.person_id = pg.person_id 
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
       LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
       LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and (pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) and (b.org_id = 1)  
  AND (b.item_code_name NOT ilike ''%'' || to_char(now(),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  /*AND coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)>0*/
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')
  GROUP BY 1,2,3,4,5,8) tbl1 
  LEFT OUTER JOIN scm.scm_cstmr_suplr a ON (tbl1.cmpny = a.cust_sup_name)
  LEFT OUTER JOIN scm.scm_cstmr_suplr_sites b ON (a.cust_sup_id = b.cust_supplier_id 
  and b.cust_sup_site_id = (SELECT MIN(c.cust_sup_site_id) 
  FROM scm.scm_cstmr_suplr_sites c WHERE c.cust_supplier_id=b.cust_supplier_id))
  WHERE tbl1.cmpny = coalesce(NULLIF('''',''''), tbl1.cmpny)
 GROUP BY 1, 2,3,5,6,7,8,9
 ORDER BY 1,3,5,6) tbl2 group by 2 order by 3 DESC LIMIT 20 OFFSET 0', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:20', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '1100600', cols_to_count = '1', cols_to_sum = '2', cols_to_average = '', cols_to_no_frmt = '2', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 62)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:20
UPDATE rpt.rpt_reports SET report_name = 'Person Distribution by Workplace (Top 20)', report_desc = 'Person Distribution by Workplace (Top 20)', rpt_sql_query = 'select 
COALESCE(NULLIF(scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id),''''),''Unknown Workplace'') "Workplace Name ", count(1) "No. of Persons" 
FROM prs.prsn_names_nos pnn 
left outer join pasn.prsn_prsntyps ppt
 on (pnn.person_id = ppt.person_id
  and now() between to_timestamp(ppt.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
AND to_timestamp(ppt.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) 
where '''' || coalesce(ppt.prsn_type,''-1'') = coalesce(NULLIF(''{:pstntyp}'',''''), '''' || coalesce(ppt.prsn_type,''-1''))
  
group by 1 order by 2 Desc LIMIT 100 offset 0;', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:20', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '1100, 600', cols_to_count = '0,1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PIE CHART', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 61)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:20
UPDATE rpt.rpt_reports SET report_name = 'Company Bills (Dues/Levies) Report', report_desc = 'Company Bills (Dues/Levies) Report', rpt_sql_query = 'Select 
 tbl1.id_no, 
 tbl1.fullnm,
 tbl1.item_code_name,
 SUM(tbl1.amnt) amnt,
 600 " ",
 tbl1.Grade,
 tbl1.Division,
 tbl1.cmpny,
 b.billing_address
 from (select distinct pnn.local_id_no id_no, 
 pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name fullnm, 
 org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division, 
       b.item_code_name,
       coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0) amnt, b.pay_run_priority, scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny
  FROM prs.prsn_names_nos pnn 
  LEFT OUTER JOIN pasn.prsn_grades pg on pnn.person_id = pg.person_id
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id 
  and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
  LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
  LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))
   and (b.org_id = 1)  
  AND (b.item_code_name ilike ''%'' || to_char(now(),''YYYY'')||''%'' or b.item_code_name IN(
''Welfare Fund Balance'',
''Professional Stamp Amount Balance'',
''Engineering Center, Emergency Power Fund Balance'',
''Building Levy Balance''))
  /*AND coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)>0*/
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')
  UNION
  select distinct pnn.local_id_no, 
  pnn.title||'' ''||pnn.first_name||'' ''||pnn.other_names||'' ''||pnn.sur_name as "Full Name                                                ", 
  org.get_grade_name(pg.grade_id) Grade, 
 org.get_div_name(pdg.div_id) Division,
       ''Arrears from Previous Years''  "Pay Item                ", 
       SUM(coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)) "Amount  ",
       MAX(b.pay_run_priority) " ", scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) cmpny
  FROM prs.prsn_names_nos pnn 
  left outer join pasn.prsn_grades pg on pnn.person_id = pg.person_id 
  LEFT OUTER JOIN pasn.prsn_divs_groups pdg on (pnn.person_id = pdg.person_id and (now()
    between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')) AND org.get_div_type(pdg.div_id)=''Technical Division'')
  LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (pnn.person_id = f.person_id and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) 
       LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
       LEFT OUTER JOIN prs.prsn_extra_data ped ON (ped.person_id = pnn.person_id)
  where (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and (pg.valid_end_date is null OR (now()
    between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) and (b.org_id = 1)  
  AND (b.item_code_name NOT ilike ''%'' || to_char(now(),''YYYY'')||''%'' and b.item_code_name ilike ''Annual%Dues%'')
  /*AND coalesce(pay.get_ltst_blsitm_bals(pnn.person_id,org.get_payitm_id(b.item_code_name),to_char(now(),''YYYY-MM-DD'')),0)>0*/
  AND (b.item_maj_type=''Balance Item'') AND b.local_classfctn ilike ''%Membership Balance Item'')
  GROUP BY 1,2,3,4,5,8) tbl1 
  LEFT OUTER JOIN scm.scm_cstmr_suplr a ON (tbl1.cmpny = a.cust_sup_name)
  LEFT OUTER JOIN scm.scm_cstmr_suplr_sites b ON (a.cust_sup_id = b.cust_supplier_id 
  and b.cust_sup_site_id = (SELECT MIN(c.cust_sup_site_id) 
  FROM scm.scm_cstmr_suplr_sites c WHERE c.cust_supplier_id=b.cust_supplier_id))
  WHERE tbl1.cmpny = coalesce(NULLIF(''{:instu_nm}'',''''), tbl1.cmpny)
 GROUP BY 1, 2,3,5,6,7,8,9
 ORDER BY 1,3,5,6', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:20', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Customised Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 60)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:20
UPDATE rpt.rpt_reports SET report_name = 'Mass Bookings/Reservations Report', report_desc = 'Mass Bookings/Reservations Report', rpt_sql_query = 'SELECT DISTINCT  a.doc_num "Document No.  ", 
	b.room_name || '' ('' || d.service_type_name || '')'' "Facility No. ", 
	scm.get_cstmr_splr_name(a.customer_id) "Occupant / Participant (Sponsee) ",
	to_char(to_timestamp(a.start_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY'') "Start Date           ", 
	to_char(to_timestamp(a.end_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY'') "End Date         ",
	scm.get_doc_smry_typ_amnt(y.invc_hdr_id,''Sales Invoice'',''5Grand Total'') "Invoice Amount ",
	scm.get_doc_smry_typ_amnt(y.invc_hdr_id,''Sales Invoice'',''6Total Payments Received'')+
	scm.get_doc_smry_typ_amnt(y.invc_hdr_id,''Sales Invoice'',''8Deposits'') "Amount Paid ",
	scm.get_doc_smry_typ_amnt(y.invc_hdr_id,''Sales Invoice'',''9Actual_Change/Balance'') "Amount Left ",
	a.doc_type "Remark        ",
	a.check_in_id mt,y.invc_number m1, a.start_date m2, a.sponsor_site_id m3,  
	scm.get_cstmr_splr_name(a.sponsor_id)|| '' ('' ||scm.get_cstmr_splr_site_name(a.sponsor_site_id)||'')'' m4,
	z.billing_address m5,
	z.ship_to_address m6,
	z.contact_person_name m7,
	z.contact_nos m8,
	z.email m9    
FROM hotl.checkins_hdr a  
LEFT OUTER JOIN hotl.service_types d ON (a.service_type_id=d.service_type_id ) 
LEFT OUTER JOIN hotl.rooms b ON (a.service_det_id = b.room_id) 
LEFT OUTER JOIN scm.scm_sales_invc_hdr y ON ((a.check_in_id = y.other_mdls_doc_id or 
(a.prnt_chck_in_id=y.other_mdls_doc_id and y.other_mdls_doc_id>0))
and (a.doc_type=y.other_mdls_doc_type or (a.prnt_doc_typ=y.other_mdls_doc_type and a.prnt_doc_typ != '''')))  
LEFT OUTER JOIN scm.scm_cstmr_suplr_sites z ON (a.sponsor_site_id = z.cust_sup_site_id) 
WHERE /*(a.doc_status=''Reserved'' or a.doc_status=''Checked-In'' or a.doc_status=''Ordered'')  
	and*/ d.org_id={:orgID} and a.doc_type IN (''Reservation'',''Check-In'') 
	and a.sponsor_id = {:cstmrID}
	and a.fclty_type IN (''Room/Hall'',''Field/Yard'',''Event'') 
	and (to_timestamp(a.start_date,''YYYY-MM-DD HH24:MI:SS'') between 
	to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND /*--{:fromDate}*/ 
	to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS'')) /*--{:toDate}*/  
ORDER BY a.start_date', owner_module = 'Hospitality Management', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:20', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '5,6,7', cols_to_average = '', cols_to_no_frmt = '5,6,7', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Customised Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 59)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:21
UPDATE rpt.rpt_reports SET report_name = 'Pay Run PAYE Returns Report', report_desc = 'Pay Run PAYE Returns Report', rpt_sql_query = 'SELECT tbl1.full_name "Name of Employee (1)",
	tbl1.tax_number "Employee Tax I.D. No. (2)", 
	tbl1.basic_salary "Basic Wage or Salary Paid (3)",
	tbl1.total_allowances "Total Allowance Paid (4)",
	tbl1.basic_salary+tbl1.total_allowances "Total Emoluments (5)",
	tbl1.ssf_employee "Social Security Contribution (6)",
	tbl1.monthly_relief "Monthly Deductible Relief (7)",
	tbl1.basic_salary+tbl1.total_allowances-tbl1.ssf_employee-tbl1.monthly_relief "Net Taxable Pay (Col.5 less Col.6 & 7) (8)",
	tbl1.paye_val "Tax Deductible (9)",
	tbl1.paye_val "Tax Deducted and Paid to GRA (10)",
	'''' "Remarks (11)",
	tbl1.payment_date mt 
FROM (SELECT 
	c.local_id_no id_num, 
	trim(c.title || '' '' || c.first_name || '' '' || c.other_names || '' '' || c.sur_name) full_name,
	prs.get_prsn_ntnl_id(c.person_id,''TIN'') tax_number, 
	SUM(a.amount_paid) basic_salary, 
	(SELECT COALESCE(SUM(c.amount_paid),0) FROM pay.pay_itm_trnsctns c, org.org_pay_items d WHERE c.person_id = a.person_id 	and c.item_id = 
	d.item_id and d.item_min_type=''Earnings'' and d.item_code_name NOT IN (''Basic Monthly Salary'') 
	and (to_timestamp(c.paymnt_date,''YYYY-MM-DD HH24:MI:SS'') between 
	to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND 
	to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS''))) total_allowances,
	(SELECT COALESCE(SUM(c.amount_paid),0) FROM pay.pay_itm_trnsctns c, org.org_pay_items d WHERE c.person_id = a.person_id 	and c.item_id = 
	d.item_id and d.item_code_name IN (''Old SSF Employee (5.0%)'',''SSF Employee (5.5%)'') 
	and (to_timestamp(c.paymnt_date,''YYYY-MM-DD HH24:MI:SS'') between 
	to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND 
	to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS''))) ssf_employee,
	0 monthly_relief,
	(SELECT COALESCE(SUM(c.amount_paid),0) FROM pay.pay_itm_trnsctns c, org.org_pay_items d WHERE c.person_id = a.person_id 	and c.item_id = 
	d.item_id and d.item_code_name IN (''PAYE Income Tax'') 
	and (to_timestamp(c.paymnt_date,''YYYY-MM-DD HH24:MI:SS'') between 
	to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND 
	to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS''))) paye_val,
	to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''Mon-YYYY'') 
	payment_date
	FROM (pay.pay_itm_trnsctns a 
	LEFT OUTER JOIN org.org_pay_items b ON a.item_id = 
	b.item_id) 
	LEFT OUTER JOIN prs.prsn_names_nos c on a.person_id = c.person_id  
WHERE((trim(c.title || '' '' || c.sur_name || '', '' || c.first_name || '' '' || 
	c.other_names) ilike ''%'') 
	and (b.org_id ={:orgID}) 
	and (to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS'') between 
	to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND 
	to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS''))) 
	AND c.local_id_no IN (c.local_id_no)
	AND b.item_code_name ilike ''Basic Monthly Salary'' GROUP BY 1,2,3,5,6,7,8,9) tbl1
	WHERE tbl1.paye_val <>0 
	ORDER BY  tbl1.id_num ASC', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:21', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '2,3,4,5,6,7,8,9', cols_to_average = '', cols_to_no_frmt = '2,3,4,5,6,7,8,9', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Customised Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 58)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:21
UPDATE rpt.rpt_reports SET report_name = 'Pay Run SSF Returns Report', report_desc = 'Pay Run SSF Returns Report', rpt_sql_query = 'SELECT tbl1.* FROM 
(SELECT 
c.local_id_no id_num, 
prs.get_prsn_ntnl_id(c.person_id,''SSNIT'') ssnit_number,
trim(c.title || '' '' || 
c.first_name || '' '' || c.other_names || '' '' || c.sur_name) full_name, 
b.item_code_name item_name, SUM(a.amount_paid) amnt_paid, 
to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') 
payment_date, b.pay_run_priority 
FROM (pay.pay_itm_trnsctns a 
LEFT OUTER JOIN org.org_pay_items b ON a.item_id = b.item_id) 
LEFT OUTER JOIN prs.prsn_names_nos c on a.person_id = c.person_id 
WHERE((trim(c.title || '' '' || c.sur_name || '', '' || c.first_name || '' '' || 
c.other_names) ilike ''%'') 
and (b.org_id ={:orgID}) 
and (to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS'') between 
to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND 
to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS''))) 
AND c.local_id_no IN ({:IDNos})
AND (b.item_code_name ilike ''{:itemNm}'' or b.item_code_name ilike ''%Basic%Salary%'') 
AND pay.get_blsitem_bals(c.person_id,org.get_payitm_id(''Total SSNIT Contribution''),substr(a.paymnt_date,1,10)) <> 0
GROUP BY 1,2,3,4,6,7
 
UNION
	
SELECT distinct c.local_id_no "ID No.    ", 
prs.get_prsn_ntnl_id(c.person_id,''SSNIT'') ssnit_number,
trim(c.title ||
 '' '' || c.first_name || '' '' || c.other_names || '' '' || c.sur_name) "Full Name         ", 
 b.item_code_name  "Pay Item                ",		 
a.bals_amount "Amount  ", 		 
to_char(to_timestamp(a.bals_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') payment_date, b.pay_run_priority 
	       
FROM prs.prsn_names_nos c 
	       
LEFT OUTER JOIN pay.pay_balsitm_bals a ON (a.person_id = c.person_id and (to_timestamp(a.bals_date,''YYYY-MM-DD 00:00:00'') between to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS'')))   	       
	       
LEFT OUTER JOIN org.org_pay_items b ON (a.bals_itm_id = b.item_id) 
	       
WHERE((b.org_id = 1) and (b.item_code_name ilike ''%SSNIT%'') 
	
AND a.bals_amount<>0 
AND (c.local_id_no IN ({:IDNos})) AND (b.item_maj_type=''Balance Item'' and b.balance_type ilike ''Non%''))) tbl1
	       
ORDER BY  1, 7, 4 ASC', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:21', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '2,3,4,5,6,7,8,9,10', cols_to_average = '', cols_to_no_frmt = '2,3,4,5,6,7,8,9,10', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Customised Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 57)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:21
UPDATE rpt.rpt_reports SET report_name = 'Event Attendance Register', report_desc = 'Event Attendance Register', rpt_sql_query = 'SELECT attnd_rec_id mt, recs_hdr_id m1, person_id m2, 
	'''''''' || prs.get_prsn_loc_id(a.person_id) "ID No.", 
      CASE WHEN a.customer_id <= 0 and a.person_id <= 0 THEN a.visitor_name_desc 
           WHEN a.person_id>0 THEN prs.get_prsn_surname(a.person_id) || '' ('' || prs.get_prsn_loc_id(a.person_id) || '')'' 
            ELSE scm.get_cstmr_splr_name(a.customer_id) END "Name of Participant ", 
      CASE WHEN a.date_time_in != '''' THEN to_char(to_timestamp(a.date_time_in,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY 		HH24:MI:SS'') ELSE '''' END "Time In ", 
      CASE WHEN a.date_time_out != '''' THEN to_char(to_timestamp(a.date_time_out,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY 		HH24:MI:SS'') ELSE '''' END "Time Out ",
      CASE WHEN a.is_present=''1'' THEN ''YES'' ELSE ''NO'' END "Present? ", 
	scm.get_cstmr_splr_name(a.sponsor_id) "Linked Firm",
      tbl1.invc_number "Invoice No.", 
	COALESCE(tbl1.invoice_amnt,0) "Inv. Ttl.", 
	COALESCE(tbl1.amnt_paid,0) "Amnt. Paid", 
	COALESCE(tbl1.amnt_left,0) "Balance", 
	a.attn_comments "Remarks",
      a.visitor_classfctn "Classification ",
      a.point_scored1 "CPD Points", 
	a.no_of_persons m3, 0 m4, a.customer_id m5, a.sponsor_id m6
  FROM attn.attn_attendance_recs a
  LEFT OUTER JOIN (SELECT DISTINCT w.check_in_id, w.doc_num, y.invc_number, w.customer_id, 
            scm.get_doc_smry_typ_amnt(y.invc_hdr_id,''Sales Invoice'',''5Grand Total'') invoice_amnt,
            scm.get_doc_smry_typ_amnt(y.invc_hdr_id,''Sales Invoice'',''6Total Payments Received'')+
	    scm.get_doc_smry_typ_amnt(y.invc_hdr_id,''Sales Invoice'',''8Deposits'') amnt_paid,
            scm.get_doc_smry_typ_amnt(y.invc_hdr_id,''Sales Invoice'',''9Actual_Change/Balance'') amnt_left 
	FROM hotl.checkins_hdr w 
	LEFT OUTER JOIN hotl.service_types d ON (w.service_type_id=d.service_type_id )
	LEFT OUTER JOIN hotl.rooms b ON (w.service_det_id = b.room_id)
	LEFT OUTER JOIN scm.scm_sales_invc_hdr y ON ((w.check_in_id = y.other_mdls_doc_id or 	(w.prnt_chck_in_id=y.other_mdls_doc_id and y.other_mdls_doc_id>0))
	and (w.doc_type=y.other_mdls_doc_type or (w.prnt_doc_typ=y.other_mdls_doc_type and w.prnt_doc_typ != ''''))) 
	WHERE (w.sponsor_id IN (select c.cust_sup_id from scm.scm_cstmr_suplr c where c.cust_sup_name ilike ''%'') or 
	w.customer_id IN (select c.cust_sup_id from scm.scm_cstmr_suplr c where c.cust_sup_name ilike ''%'')) 
	and COALESCE(d.org_id, 1)=1 and w.doc_type IN (''Booking'',''Check-In'') 
	and w.fclty_type IN (''Event'')) tbl1  ON (a.customer_id = tbl1.customer_id)
   WHERE((a.recs_hdr_id = {:rgstr_id}) AND ((CASE WHEN a.customer_id <= 0 and a.person_id <= 0 THEN a.visitor_name_desc 
           WHEN a.person_id>0 THEN prs.get_prsn_surname(a.person_id) || '' ('' || prs.get_prsn_loc_id(a.person_id) || '')'' 
            ELSE scm.get_cstmr_splr_name(a.customer_id)||scm.get_cstmr_splr_name(a.sponsor_id) END) ilike ''%'')) 
	ORDER BY 5, 4, 1', owner_module = 'Events And Attendance', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:21', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '3', cols_to_sum = '10,11,12', cols_to_average = '', cols_to_no_frmt = '10,11,12', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 56)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:21
UPDATE rpt.rpt_reports SET report_name = 'Seminar/Event Income/Expenditure', report_desc = 'Seminar/Event Income/Expenditure', rpt_sql_query = 'SELECT b.pssbl_value_desc "Major Category ", 
       a.cost_classfctn "Sub-Category ", 
       sum(a.no_of_persons) || '' x '' || MAX(a.unit_cost) "No. of Participants ", 
       (CASE WHEN b.pssbl_value_desc=''1Income'' THEN 1 ELSE -1 END)*SUM(a.no_of_persons*a.unit_cost) "Total Amount (GHS) "
       FROM attn.attn_attendance_costs a, gst.gen_stp_lov_values b 
       WHERE((a.recs_hdr_id = {:rgstr_id}) 
       AND (a.cost_comments ilike ''%'') 
       AND (a.cost_classfctn = b.pssbl_value and b.value_list_id = gst.get_lov_id(''Event Cost Categories''))) 
       GROUP BY 1,2
       ORDER BY 1,2', owner_module = 'Events And Attendance', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:21', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '0', cols_to_count = 'NO', cols_to_sum = '3', cols_to_average = '', cols_to_no_frmt = '3', output_type = 'HTML', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 55)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:21
UPDATE rpt.rpt_reports SET report_name = 'Import/Overwrite Customer Names', report_desc = 'Import/Overwrite Customer Names', rpt_sql_query = 'UPDATE scm.scm_cstmr_suplr SET 
 cust_sup_name = ''{:newValColB}''
 
WHERE cust_sup_name = ''{:orgnValColA}'' and org_id={:orgID};

 

UPDATE gst.gen_stp_lov_values SET 
 pssbl_value = ''{:newValColB}''
 
WHERE pssbl_value = ''{:orgnValColA}'' 
 and value_list_id = gst.get_lov_id(''Schools/Organisations/Institutions''); 



UPDATE prs.prsn_extra_data SET data_col9 = ''{:newValColB}''
 WHERE data_col9  = ''{:orgnValColA}'';', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:21', rpt_or_sys_prcs = 'Import/Overwrite Data from Excel', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 54)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:21
UPDATE rpt.rpt_reports SET report_name = 'Daily Volume of Sales', report_desc = '', rpt_sql_query = 'SELECT  tbl1.dte, tbl1.mnth "Day", SUM(tbl1.amnt) "Amount" 
 FROM (SELECT to_char(to_timestamp(a.invc_date,''YYYY-MM-DD''),''YYYY-MM-DD'') dte, 
 to_char(to_timestamp(a.invc_date,''YYYY-MM-DD''),''YYYY-MON-DD'') mnth, 
 sum((b.doc_qty * b.unit_selling_price)) amnt
 FROM scm.scm_sales_invc_hdr a, scm.scm_sales_invc_det b WHERE 
 a.invc_hdr_id = b.invc_hdr_id
 and a.approval_status=''Approved'' 
 and ((a.invc_number ilike ''%'') AND (a.org_id = {:orgID}) and invc_type = ''Sales Invoice'')
 and to_timestamp(a.invc_date,''YYYY-MM-DD'')>=to_timestamp(''{:fromDate}'',''YYYY-MM-DD'') 
 and  to_timestamp(a.invc_date,''YYYY-MM-DD'')<=to_timestamp(''{:toDate}'',''YYYY-MM-DD'') 
 group by to_char(to_timestamp(a.invc_date,''YYYY-MM-DD''),''YYYY-MM-DD''), to_char(to_timestamp(a.invc_date,''YYYY-MM-DD''),''YYYY-MON-DD'')
 UNION
 SELECT to_char(to_timestamp(b.paymnt_date,''YYYY-MM-DD''),''YYYY-MM-DD'') dte, 
 to_char(to_timestamp(b.paymnt_date,''YYYY-MM-DD''),''YYYY-MON-DD'') mnth, 
 sum((b.amount_paid)) amnt 
 FROM org.org_pay_items a, pay.pay_itm_trnsctns b WHERE 
 a.item_id = b.item_id
 and b.pymnt_vldty_status = ''VALID'' and b.src_py_trns_id <=0 
 and b.pay_trns_id NOT IN (Select z.intnl_pay_trns_id FROM accb.accb_payments z WHERE z.intnl_pay_trns_id>0) 
 and ((a.item_code_name ilike ''%(Payment)%'') AND (a.org_id = {:orgID}) and a.item_min_type = ''Bills/Charges'')
 and to_timestamp(b.paymnt_date,''YYYY-MM-DD'')>=to_timestamp(''{:fromDate}'',''YYYY-MM-DD'') 
 and  to_timestamp(b.paymnt_date,''YYYY-MM-DD'')<=to_timestamp(''{:toDate}'',''YYYY-MM-DD'') 
 group by to_char(to_timestamp(b.paymnt_date,''YYYY-MM-DD''),''YYYY-MM-DD''), to_char(to_timestamp(b.paymnt_date,''YYYY-MM-DD''),''YYYY-MON-DD'')) tbl1 
 GROUP BY 1,2
 ORDER BY 1', owner_module = 'Stores And Inventory Manager', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:21', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '800400', cols_to_count = '1,2', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'LINE CHART', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 53)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:21
UPDATE rpt.rpt_reports SET report_name = 'Merge Trading Partners', report_desc = 'Merge Trading Partners', rpt_sql_query = 'select accb.merge_trade_partners({:prntpartner},{:childpartner},{:msgID},{:usrID},''data_col9'')', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:21', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 52)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:21
UPDATE rpt.rpt_reports SET report_name = 'Auto-Convert Applicant to Registered Member', report_desc = 'Auto-Convert Applicant to Registered Member', rpt_sql_query = 'select pasn.auto_cnvrt_prsntype({:orgID},''Applicant'',''Registered Member'',''Admission'','''', {:msgID}, {:usrID})', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:21', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 51)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:22
UPDATE rpt.rpt_reports SET report_name = 'Person Type Distribution', report_desc = 'Person Type Distribution', rpt_sql_query = 'SELECT (SELECT z.prsn_type FROM pasn.prsn_prsntyps z WHERE (z.person_id = a.person_id) 
ORDER BY z.valid_end_date DESC, z.valid_start_date DESC LIMIT 1 OFFSET 0), count(a.person_id)
  FROM prs.prsn_names_nos a 
  WHERE a.org_id=1
  GROUP BY 1
  ORDER BY 1;', owner_module = 'Basic Person Data', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:22', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '1100, 500', cols_to_count = '0,1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PIE CHART', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 50)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:22
UPDATE rpt.rpt_reports SET report_name = 'Members in Good Standing Chart', report_desc = 'Members in Good Standing Chart', rpt_sql_query = 'Select tbl1.status, count(tbl1.id_no) 
from (SELECT distinct 
'''''''' || c.local_id_no id_no, 
trim(c.title || '' '' || c.sur_name ||
         '', '' || c.first_name || '' '' || c.other_names) "Full Name                              ",
 
CASE WHEN pay.get_ltst_blsitm_bals(c.person_id,org.get_payitm_id(b.item_code_name),to_char(now(), ''YYYY-MM-DD''))>0
 THEN 
''Not In Good Standing'' 
ELSE ''In Good Standing'' END status, 
ped.data_col6 "Practice                  ",

(select org.get_grade_name(pg.grade_id)) "Grade                   "
, 
c.sur_name m1      
FROM prs.prsn_names_nos c  
left outer join prs.prsn_extra_data ped on ped.person_id = c.person_id 
  
left outer join pasn.prsn_grades pg on c.person_id = pg.person_id
       
LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (c.person_id = f.person_id and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))/**/ 
       
LEFT OUTER JOIN org.org_pay_items b ON (b.item_id=f.item_id) 
       
WHERE((b.org_id = {:orgID}) AND (b.item_code_name ilike ''{:itmNm}'' or b.item_code_name ilike ''%'' || to_char(now(), ''YYYY'') || ''%'') AND (b.item_maj_type=''Balance Item'')) 
   
ORDER BY 6, 1 ) tbl1
      
 GROUP BY tbl1.status', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:22', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '1100500', cols_to_count = '0,1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PIE CHART', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 49)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:22
UPDATE rpt.rpt_reports SET report_name = 'Members in Good Standing Details', report_desc = 'Members in Good Standing Details', rpt_sql_query = 'SELECT distinct 
'''''''' || c.local_id_no "ID No.             ", 
trim(c.title || '' '' || c.sur_name ||
         '', '' || c.first_name || '' '' || c.other_names) "Full Name                              ",
 
CASE WHEN pay.get_ltst_blsitm_bals(c.person_id,org.get_payitm_id(b.item_code_name),to_char(now(), ''YYYY-MM-DD''))>0
 THEN 
''Not In Good Standing'' 
ELSE ''In Good Standing'' END "Status                     ", 
ped.data_col6 "Practice                  ",

(select org.get_grade_name(pg.grade_id)) "Grade                   "
, 
c.sur_name m1, 
COALESCE(NULLIF(c.email,''''),''nothing'') "pers_email",
scm.get_cstmr_splr_name(c.lnkd_firm_org_id) "Linked Firm/Workplace             ",/**/
CASE WHEN c.pstl_addrs !='''' THEN c.pstl_addrs ELSE c.res_address END "Postal Address            ",
''Tel.: '' || c.cntct_no_tel || '' Mobile No.: '' || c.cntct_no_mobl "Tel. No.        ",
''Fax.: '' || c.cntct_no_fax "Fax ",
''E-mail: '' || c.email "Email Address             ",
REPLACE(c.nationality,''ian'','''') "Country         ",
to_char(to_timestamp(c.date_of_birth,''YYYY-MM-DD''),''DD-Mon-YYYY'') "Date of Birth ",
extract(YEAR from age(now(), to_timestamp(c.date_of_birth,''YYYY-MM-DD''))) || '' Years'' "AGE                    "       
FROM prs.prsn_names_nos c  
left outer join prs.prsn_extra_data ped on ped.person_id = c.person_id 
  
left outer join pasn.prsn_grades pg on c.person_id = pg.person_id
       
LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (c.person_id = f.person_id and (now() between to_timestamp(f.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))/**/ 
       
LEFT OUTER JOIN org.org_pay_items b ON (b.item_id=f.item_id) 
       
WHERE((b.org_id = {:orgID}) AND (b.item_code_name ilike ''{:itmNm}'' or b.item_code_name ilike ''%'' || to_char(now(), ''YYYY'') || ''%'') AND (b.item_maj_type=''Balance Item'') 
AND (SELECT count(z.pay_trns_id) 
  FROM pay.pay_itm_trnsctns z, org.org_pay_items y
  WHERE z.person_id=c.person_id and z.paymnt_date >= ''{:fromDate}''
  and z.paymnt_date <= ''{:toDate}''
  and z.item_id = y.item_id and y.item_code_name ilike ''%(Payment%'')>0
 AND COALESCE(pay.get_ltst_blsitm_bals(c.person_id,org.get_payitm_id(b.item_code_name),to_char(now(), ''YYYY-MM-DD'')),0)<=0) 
   
ORDER BY 6, 1', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:22', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 48)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:22
UPDATE rpt.rpt_reports SET report_name = 'Pay Run Master Sheet Report', report_desc = 'Pay Run Master Sheet Report', rpt_sql_query = 'SELECT tbl1.* FROM 
(SELECT 
c.local_id_no id_num, 
trim(c.title || '' '' || 
c.first_name || '' '' || c.other_names || '' '' || c.sur_name) full_name, 
substring(b.local_classfctn, position(''.'' in b.local_classfctn)+1)
item_name, SUM(a.amount_paid) amnt_paid, 
to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') 
payment_date, b.pay_run_priority 
FROM (pay.pay_itm_trnsctns a 
LEFT OUTER JOIN org.org_pay_items b ON a.item_id = 
b.item_id) 
LEFT OUTER JOIN prs.prsn_names_nos c on a.person_id = c.person_id 

WHERE((a.pymnt_vldty_status=''VALID'' and a.src_py_trns_id<=0) and (trim(c.title || '' '' || c.sur_name || '', '' || c.first_name || '' '' || 
c.other_names) ilike ''%'') 
and (b.org_id ={:orgID}) 
and 
(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS'') between 
to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND 
to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS''))) 

AND c.local_id_no IN ({:IDNos})
AND b.local_classfctn ilike ''%Staff Payroll Item%'' GROUP BY 1,2,3,5,6 
 
UNION
	
SELECT distinct c.local_id_no "ID No.    ", 
trim(c.title ||
 '' '' || c.first_name || '' '' || c.other_names || '' '' || c.sur_name) "Full Name         ", 
 b.item_code_name  "Pay Item                ",		 
SUM(a.bals_amount) "Amount  ", 		 
MAX(to_char(to_timestamp(a.bals_date,''YYYY-MM-DD''),''DD-Mon-YYYY'')) payment_date, b.pay_run_priority 
	       
FROM prs.prsn_names_nos c 
	       
LEFT OUTER JOIN pay.pay_balsitm_bals a ON (a.person_id = c.person_id and (to_timestamp(a.bals_date,''YYYY-MM-DD 00:00:00'') between to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS'')))   	       
	       
LEFT OUTER JOIN org.org_pay_items b ON (a.bals_itm_id = b.item_id) 
	       
WHERE((b.org_id = 1) and (b.local_classfctn ilike ''%Staff Balance Item%'') 
	
AND (c.local_id_no IN ({:IDNos})) AND (b.item_maj_type=''Balance Item'' and b.balance_type ilike ''Non%''))
GROUP BY 1,2,3,6) tbl1
	       
ORDER BY  1 DESC, 6, 3 ASC', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:22', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '2,3,4,5,6,7,8,9,10', cols_to_average = '', cols_to_no_frmt = '2,3,4,5,6,7,8,9,10', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Customised Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 47)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:22
UPDATE rpt.rpt_reports SET report_name = 'Technical Divisions Details', report_desc = 'Technical Divisions Details', rpt_sql_query = 'select div_code_name "division                  ", 
'''''''' || local_id_no as "ID No.       ",
  
title||'' ''||first_name||'' ''||other_names||'' ''||sur_name as "Full Name                 ", 
gender,  
data_col6 practice, 

scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) "Work Place Name", 
scm.get_cstmr_splr_site_name(pnn.lnkd_firm_site_id) "Work Place Location",

(select org.get_grade_name(pg.grade_id)) Grade, 
res_address, pstl_addrs, email, cntct_no_tel, cntct_no_mobl, cntct_no_fax                    
  
from prs.prsn_names_nos pnn 
left outer join prs.prsn_extra_data ped on ped.person_id = pnn.person_id 
  
left outer join pasn.prsn_grades pg on pnn.person_id = pg.person_id
  
left outer join pasn.prsn_divs_groups pdg 
  on  pnn.person_id = pdg.person_id 
  
inner join org.org_divs_groups odg on pdg.div_id = odg.div_id
  and (coalesce(pdg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and 
  (pdg.valid_end_date is null OR ((SELECT NOW())
  between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))))
  and gst.get_pssbl_val(odg.div_typ_id) = ''Technical Division''
  AND '''' || coalesce(pdg.div_id,-1) = coalesce(NULLIF(''{:dv_id}'',''''), '''' || coalesce(pdg.div_id,-1))
  order by 1', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:22', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 46)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:22
UPDATE rpt.rpt_reports SET report_name = 'Classes Details', report_desc = 'Classes Details', rpt_sql_query = 'select (select grade_code_name from org.org_grades og where og.grade_id = pg.grade_id ) "Grade           ", 
  
'''''''' ||local_id_no as "ID No.       ", 
  
title||'' ''||first_name||'' ''||other_names||'' ''||sur_name as "Full Name                    " 
  
from prs.prsn_names_nos pnn, 
pasn.prsn_grades pg
  
WHERE pnn.person_id = pg.person_id
  AND '''' || coalesce(pg.grade_id,-1) = coalesce(NULLIF(''{:grd_id}'',''''), '''' || coalesce(pg.grade_id,-1))
  
order by 1', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:22', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 45)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:22
UPDATE rpt.rpt_reports SET report_name = 'Coorperate Membership Distribution (Chart)', report_desc = 'Coorperate Membership Distribution (Chart)', rpt_sql_query = 'select case when (select grade_code_name from org.org_grades og where og.grade_id = pg.grade_id ) IN (''Member (M)'',
 ''Member (M+)'', ''Fellow (F)'', ''Honoured Fellow (HF)'') then ''Corporate''
  else ''Non-Corporate'' end, count(1) from pasn.prsn_grades pg 
  group by 1', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:22', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '800400', cols_to_count = '0,1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PIE CHART', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 44)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:22
UPDATE rpt.rpt_reports SET report_name = 'Monthly Visitor Traffic Details', report_desc = 'Monthly Visitor Traffic Details', rpt_sql_query = 'SELECT  det.visitor_classfctn "Visitor Classification", 
  CASE WHEN det.customer_id <= 0 and det.person_id <= 0 THEN det.visitor_name_desc 
           WHEN det.person_id>0 THEN prs.get_prsn_surname(det.person_id) || '' ('' || prs.get_prsn_loc_id(det.person_id) || '')'' 
            ELSE scm.get_cstmr_splr_name(det.customer_id) END "Visitor               ", 
            CASE WHEN det.date_time_in != '''' THEN 
		to_char(to_timestamp(det.date_time_in,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') 
		ELSE to_char(to_timestamp(hdr.event_date,''YYYY-MM-DD  HH24:MI:SS''),''DD-Mon-YYYY  HH24:MI:SS'') END "Date In       ",
            CASE WHEN det.date_time_out != '''' THEN to_char(to_timestamp(det.date_time_out,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') ELSE '''' END "Date Out      "
  FROM attn.attn_attendance_recs_hdr hdr, attn.attn_attendance_recs det
  where  hdr.recs_hdr_id = det.recs_hdr_id
  and '''' || coalesce(det.visitor_classfctn ,''-1'') = coalesce(NULLIF(''{:visClas}'',''''), '''' || coalesce(det.visitor_classfctn,''-1''))
  and hdr.org_id = {:orgID}
  and to_timestamp(hdr.event_date,''YYYY-MM-DD'')>=to_timestamp(''{:fromDate}'',''YYYY-MM-DD'') 
  and to_timestamp(hdr.event_date,''YYYY-MM-DD'')<=to_timestamp(''{:toDate}'',''YYYY-MM-DD'') 
  order by 1', owner_module = 'Events And Attendance', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:22', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '800400', cols_to_count = '1,2', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 43)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:23
UPDATE rpt.rpt_reports SET report_name = 'Monthly Visitor Traffic', report_desc = 'Monthly Visitor Traffic', rpt_sql_query = 'SELECT  to_char(to_timestamp(hdr.event_date,''YYYY-MM''),''YYYY-Mon'') "_", to_char(to_timestamp(hdr.event_date,''YYYY-MM''),''YYYY-Mon'') DATE,  
	 /*det.visitor_classfctn,*/ count(attnd_rec_id) "Number Of Visitors"
  FROM attn.attn_attendance_recs_hdr hdr, attn.attn_attendance_recs det
  where  hdr.recs_hdr_id = det.recs_hdr_id
  and '''' || coalesce(det.visitor_classfctn ,''-1'') = coalesce(NULLIF(''{:visClas}'',''''), '''' || coalesce(det.visitor_classfctn,''-1''))
  and hdr.org_id = {:orgID}
  and to_timestamp(hdr.event_date,''YYYY-MM-DD'')>=to_timestamp(''{:fromDate}'',''YYYY-MM-DD'') 
  and to_timestamp(hdr.event_date,''YYYY-MM-DD'')<=to_timestamp(''{:toDate}'',''YYYY-MM-DD'') 
  group by  to_char(to_timestamp(hdr.event_date,''YYYY-MM''),''YYYY-Mon''), to_char(to_timestamp(hdr.event_date,''YYYY-MM''),''YYYY-Mon'')
/*,  
	 det.visitor_classfctn*/
  order by 1', owner_module = 'Events And Attendance', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:23', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '800400', cols_to_count = '1,2', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'LINE CHART', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 42)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:23
UPDATE rpt.rpt_reports SET report_name = 'Monthly Volume of Sales', report_desc = '', rpt_sql_query = 'SELECT  tbl1.dte, tbl1.mnth "Month", SUM(tbl1.amnt) "Amount" 
 FROM (SELECT to_char(to_timestamp(a.invc_date,''YYYY-MM''),''YYYY-MM'') dte, 
 to_char(to_timestamp(a.invc_date,''YYYY-MM''),''YYYY-MON'') mnth, 
 sum((b.doc_qty * b.unit_selling_price)) amnt
 FROM scm.scm_sales_invc_hdr a, scm.scm_sales_invc_det b WHERE 
 a.invc_hdr_id = b.invc_hdr_id
 and a.approval_status=''Approved'' 
 and ((a.invc_number ilike ''%'') AND (a.org_id = {:orgID}) and invc_type = ''Sales Invoice'')
 and to_timestamp(a.invc_date,''YYYY-MM-DD'')>=to_timestamp(''{:fromDate}'',''YYYY-MM-DD'') 
 and  to_timestamp(a.invc_date,''YYYY-MM-DD'')<=to_timestamp(''{:toDate}'',''YYYY-MM-DD'') 
 group by to_char(to_timestamp(a.invc_date,''YYYY-MM''),''YYYY-MM''), to_char(to_timestamp(a.invc_date,''YYYY-MM''),''YYYY-MON'')
  UNION
 SELECT to_char(to_timestamp(b.paymnt_date,''YYYY-MM''),''YYYY-MM'') dte, 
 to_char(to_timestamp(b.paymnt_date,''YYYY-MM''),''YYYY-MON'') mnth, 
 sum((b.amount_paid)) amnt 
 FROM org.org_pay_items a, pay.pay_itm_trnsctns b WHERE 
 a.item_id = b.item_id
 and b.pymnt_vldty_status = ''VALID'' and b.src_py_trns_id <=0 
 and b.pay_trns_id NOT IN (Select z.intnl_pay_trns_id FROM accb.accb_payments z WHERE z.intnl_pay_trns_id>0) 
 and ((a.item_code_name ilike ''%(Payment)%'') AND (a.org_id = {:orgID}) and a.item_min_type = ''Bills/Charges'')
 and to_timestamp(b.paymnt_date,''YYYY-MM-DD'')>=to_timestamp(''{:fromDate}'',''YYYY-MM-DD'') 
 and  to_timestamp(b.paymnt_date,''YYYY-MM-DD'')<=to_timestamp(''{:toDate}'',''YYYY-MM-DD'') 
 group by to_char(to_timestamp(b.paymnt_date,''YYYY-MM''),''YYYY-MM''), to_char(to_timestamp(b.paymnt_date,''YYYY-MM''),''YYYY-MON'')) tbl1 
 GROUP BY 1,2
 ORDER BY 1', owner_module = 'Stores And Inventory Manager', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:23', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '800400', cols_to_count = '1,2', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'LINE CHART', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 41)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:23
UPDATE rpt.rpt_reports SET report_name = 'Gender Distribution-Details', report_desc = 'Gender Distribution-Details', rpt_sql_query = 'select '''''''' || local_id_no, title||'' ''||first_name||'' ''||other_names||'' ''||sur_name as "Full Name", gender
          FROM prs.prsn_names_nos pnn left outer join pasn.prsn_prsntyps ppt
  on pnn.person_id = ppt.person_id
  where '''' || coalesce(ppt.prsn_type,''-1'') = coalesce(NULLIF(''{:pstntyp}'',''''), '''' || coalesce(ppt.prsn_type,''-1''))
  group by 1,2,3', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:23', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '1100, 300', cols_to_count = '0,1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 40)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:23
UPDATE rpt.rpt_reports SET report_name = 'Gender Distribution', report_desc = 'Gender Distribution', rpt_sql_query = 'select gender, count(1) 
FROM prs.prsn_names_nos pnn 
left outer join pasn.prsn_prsntyps ppt
  on pnn.person_id = ppt.person_id
  
where '''' || coalesce(ppt.prsn_type,''-1'') = coalesce(NULLIF(''{:pstntyp}'',''''), '''' || coalesce(ppt.prsn_type,''-1''))
  
group by 1;', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:23', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '1100, 300', cols_to_count = '0,1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PIE CHART', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 39)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:23
UPDATE rpt.rpt_reports SET report_name = 'Person Data', report_desc = '', rpt_sql_query = 'select '''''''' || local_id_no id_no, 
title||'' ''||first_name||'' ''||other_names||'' ''||sur_name as "Full Name                                                ", 

(select org.get_grade_name(pg.grade_id)) Grade, 

(select org.get_job_name(pj.job_id)) job, 
ppt.prsn_type "Person Type", 
ppt.prn_typ_asgnmnt_rsn "Assignment Reason",

to_char(to_timestamp(ppt.valid_start_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "Start Date ", 
(select org.get_div_name(pdg.div_id)) "Division",
 
(org.get_pos_name(pstn.position_id)) "Position", 
gender, marital_status, date_of_birth, place_of_birth, religion, 

res_address, pstl_addrs, email, 
'''''''' || cntct_no_tel tel_no, 
'''''''' || cntct_no_mobl mobile_no, 

'''''''' || cntct_no_fax fax_no,
scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id) "Workplace",  
img_location, hometown, nationality
/*, pnn.person_id, pg.grade_id, pdg.div_id,pstn.position_id, pj.job_id, ppt.prsntype_id*/
  
FROM prs.prsn_names_nos pnn 
  
left outer join pasn.prsn_grades pg on pnn.person_id = pg.person_id
  
left outer join pasn.prsn_jobs pj on pnn.person_id = pj.person_id
  
left outer join pasn.prsn_prsntyps ppt on pnn.person_id = ppt.person_id
  
left outer join pasn.prsn_divs_groups pdg on pnn.person_id = pdg.person_id
  
left outer join pasn.prsn_positions pstn on pnn.person_id = pstn.person_id
  
left outer join prs.prsn_extra_data ped on ped.person_id = pnn.person_id 
  
where coalesce('''' || pnn.local_id_no) = coalesce(NULLIF(''{:pers_id}'',''''), '''' || pnn.local_id_no)
  AND (coalesce('''' || ped.data_col9) = coalesce(NULLIF(''{:instu_nm}'',''''), '''' || ped.data_col9) 
or scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id)=coalesce(NULLIF(''{:instu_nm}'',''''), scm.get_cstmr_splr_name(pnn.lnkd_firm_org_id)))
  AND '''' || coalesce(pg.grade_id,-1) = coalesce(NULLIF(''{:grd_id}'',''''), '''' || coalesce(pg.grade_id,-1))/*Grades*/
  AND (coalesce(pg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pg.valid_end_date is null OR ((SELECT NOW())
  between to_timestamp(pg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pg.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))))
  AND '''' || coalesce(pj.job_id,-1) = coalesce(NULLIF(''{:jb_id}'',''''), '''' || coalesce(pj.job_id,-1))/*Jobs*/
  AND (coalesce(pj.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pj.valid_end_date is null OR ((SELECT NOW())
  between to_timestamp(pj.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pj.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))))  
  AND '''' || coalesce(ppt.prsn_type,''-1'') = coalesce(NULLIF(''{:pstntyp}'',''''), '''' || coalesce(ppt.prsn_type,''-1''))/*Person Types*/
  AND (coalesce(ppt.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( ppt.valid_end_date is null 
  OR to_timestamp(COALESCE(NULLIF(''{:asAtDate}'',''''),to_char(NOW(),''YYYY-MM-DD'')),''YYYY-MM-DD'')
  between to_timestamp(ppt.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(ppt.valid_end_date,''YYYY-MM-DD HH24:MI:SS'')))   
AND (CASE WHEN ''{:fromDate}'' ='''' THEN 1 
          WHEN to_timestamp(COALESCE(NULLIF(''{:fromDate}'',''''),to_char(NOW(),''YYYY-MM-DD'')),''YYYY-MM-DD'')
    <=to_timestamp(ppt.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') THEN 1
    ELSE 0 END)=1
  AND '''' || coalesce(pdg.div_id,-1) = coalesce(NULLIF(''{:dv_id}'',''''), '''' || coalesce(pdg.div_id,-1))/*Divisions and Groups*/
  AND (coalesce(pdg.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pdg.valid_end_date is null OR ((SELECT NOW())
  between to_timestamp(pdg.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pdg.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))))     
  AND '''' || coalesce(pstn.position_id,-1) = coalesce(NULLIF(''{:pstn_id}'',''''), '''' || coalesce(pstn.position_id,-1))/*Positions*/
  AND (coalesce(pstn.valid_start_date, to_char((select now()),''YYYY-MM-DD'')) is not null and ( pstn.valid_end_date is null OR ((SELECT NOW())
  between to_timestamp(pstn.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
  AND to_timestamp(pstn.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))))     
  AND '''' || coalesce(ppt.prn_typ_asgnmnt_rsn ,''-1'') = coalesce(NULLIF(''{:pstntyp_rsn}'',''''), '''' || coalesce(ppt.prn_typ_asgnmnt_rsn,''-1''))
 ORDER BY 1', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:23', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 38)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:23
UPDATE rpt.rpt_reports SET report_name = 'Portability', report_desc = '', rpt_sql_query = 'select case when (trim(res_address||''''||pstl_addrs) != '''' AND trim(email) != '''' AND trim(cntct_no_tel||''''||cntct_no_mobl) != '''') then ''Grade A''
 when (trim(email) != '''' AND trim(cntct_no_tel||''''||cntct_no_mobl) != '''') then ''Grade B''
 when trim(cntct_no_tel||''''||cntct_no_mobl) != '''' then ''Grade C''
 when trim(email) != '''' then ''Grade D''
 else ''Grade E'' end portability, count(1) FROM prs.prsn_names_nos pnn left outer join pasn.prsn_prsntyps ppt
 on pnn.person_id = ppt.person_id
 where '''' || coalesce(ppt.prsn_type,''-1'') = coalesce(NULLIF(''{:pstntyp}'',''''), '''' || coalesce(ppt.prsn_type,''-1''))
 group by 1', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:23', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '1100300', cols_to_count = '0,1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PIE CHART', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 37)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:23
UPDATE rpt.rpt_reports SET report_name = 'Portability Details', report_desc = '', rpt_sql_query = 'select title||'' ''||first_name||'' ''||other_names||'' ''||sur_name||'' (''||local_id_no||'')'' as "Full Name                          ", 
 case when (trim(email) != '''' AND trim(cntct_no_tel||''''||cntct_no_mobl) != '''') then ''Grade A''
 when trim(cntct_no_tel||''''||cntct_no_mobl) != '''' then ''Grade B''
 when trim(email) != '''' then ''Grade C''
 else ''Grade D'' end portability FROM prs.prsn_names_nos pnn left outer join pasn.prsn_prsntyps ppt
 on pnn.person_id = ppt.person_id
 where '''' || coalesce(ppt.prsn_type,''-1'') = coalesce(NULLIF(''{:pstntyp}'',''''), '''' || coalesce(ppt.prsn_type,''-1''))
 order by 2;', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:23', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 36)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:24
UPDATE rpt.rpt_reports SET report_name = 'Inventory Trns Sum/Bals Mismatch', report_desc = 'Inventory Trns. Sum/Bals Mismatch', rpt_sql_query = 'SELECT tbl1.itm_id mt,tbl1.item_code "Item Code ",tbl1.item_desc "Description ",z.subinv_id m, 
 z.subinv_name "Store ",k.stock_id m,SUM(tbl1.qnty) "Transaction Total Qty ",
 scm.get_ltst_stock_avlbl_bals(k.stock_id, 
 to_char(now(),''YYYY-MM-DD'')) "System Stock Balance ", tbl1.uom  "UOM "
 FROM (SELECT a.invc_type,a.invc_number, a.comments_desc
        , c.item_code, 
        c.item_desc, 
        CASE WHEN a.invc_type=''Sales Return'' THEN 
 b.doc_qty ELSE  -1*b.doc_qty END qnty, 
        d.uom_name uom,
        a.last_update_date,  
        b.itm_id,
        b.store_id
        FROM scm.scm_sales_invc_hdr a, sec.sec_users y, scm.scm_sales_invc_det b, 
        inv.inv_itm_list c, inv.unit_of_measure d
        WHERE ((a.invc_hdr_id = b.invc_hdr_id AND b.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
        AND (a.approval_status ilike ''Approved'' or b.is_itm_delivered=''1'') AND (a.org_id ={:orgID}) AND 
        (a.created_by=y.user_id) and (a.invc_type IN 
(''Sales Invoice'',''Sales Order'',''Sales Return'',''Item Issue-Unbilled''))) 
 UNION
        select ''Receipt'',a.rcpt_id ||'''',a.description, c.item_code, 
        c.item_desc, 
        b.quantity_rcvd qnty, 
        d.uom_name uom,
        a.last_update_date,
        b.itm_id,
       b.subinv_id
         from inv.inv_consgmt_rcpt_hdr a, sec.sec_users y, inv.inv_consgmt_rcpt_det b, 
        inv.inv_itm_list c, inv.unit_of_measure d
 WHERE ((a.rcpt_id = b.rcpt_id AND b.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
        AND (a.approval_status ilike ''Received'' or a.approval_status ilike ''%Successful%'') AND (a.org_id = {:orgID}) AND 
        (a.created_by=y.user_id))
 UNION
        select distinct ''Quantity Adjustment'',a.adjstmnt_hdr_id ||'''',a.description, c.item_code, 
        c.item_desc, 
        (chartodouble(b.new_ttl_qty)-b.new_ttl_qty_old) qnty, 
        d.uom_name uom,
        a.last_update_date,
        f.itm_id,
       f.subinv_id
         from inv.inv_consgmt_adjstmnt_hdr a, sec.sec_users y, inv.inv_consgmt_adjstmnt_det b, 
         inv.inv_consgmt_rcpt_det f,
        inv.inv_itm_list c, inv.unit_of_measure d
 WHERE ((a.adjstmnt_hdr_id = b.adjstmnt_hdr_id and f.consgmt_id = b.consgmt_id AND f.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
        AND (a.status ilike ''Adjustment Successful'') AND (a.org_id = {:orgID}) AND 
        (a.created_by=y.user_id)) 
 UNION
        select ''Stock Transfer'',a.transfer_hdr_id ||'''',a.description, c.item_code, 
        c.item_desc, 
        -1*b.transfer_qty qnty, 
        d.uom_name uom,
        a.last_update_date,
        b.itm_id,
       b.src_store_id
         from inv.inv_stock_transfer_hdr a, sec.sec_users y, inv.inv_stock_transfer_det b, 
        inv.inv_itm_list c, inv.unit_of_measure d
 WHERE ((a.transfer_hdr_id = b.transfer_hdr_id AND b.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
        AND (a.status ilike ''Transfer Successful'') AND (a.org_id = {:orgID}) AND 
        (a.created_by=y.user_id))   
 UNION
        select ''Stock Transfer'',a.transfer_hdr_id ||'''',a.description, c.item_code, 
        c.item_desc, 
        b.transfer_qty qnty, 
        d.uom_name uom,
        a.last_update_date,
        b.itm_id,
       b.dest_subinv_id
         from inv.inv_stock_transfer_hdr a, sec.sec_users y, inv.inv_stock_transfer_det b, 
        inv.inv_itm_list c, inv.unit_of_measure d
 WHERE ((a.transfer_hdr_id = b.transfer_hdr_id AND b.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
        AND (a.status ilike ''Transfer Successful'') AND (a.org_id = {:orgID}) AND 
        (a.created_by=y.user_id)) 
 UNION
        select ''Receipt Return'',a.rcpt_rtns_id ||'''',a.description, c.item_code, 
        c.item_desc, 
        -1*b.qty_rtnd qnty, 
        d.uom_name uom,
        a.last_update_date,
        b.itm_id,
        b.subinv_id
         from inv.inv_consgmt_rcpt_rtns_hdr a, sec.sec_users y, inv.inv_consgmt_rcpt_rtns_det b, 
        inv.inv_itm_list c, inv.unit_of_measure d, inv.inv_consgmt_rcpt_det e
 WHERE ((b.rcpt_line_id = e.line_id AND a.rcpt_rtns_id = b.rtns_hdr_id AND b.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
        AND (a.approval_status != ''Incomplete'' or a.approval_status IS NULL) AND (a.org_id = {:orgID}) AND 
        (a.created_by=y.user_id))) tbl1 
        left outer join inv.inv_stock k on (tbl1.itm_id = k.itm_id and tbl1.store_id = k.subinv_id)
        /*left outer join inv.inv_stock_daily_bals m on (k.stock_id = m.stock_id and substr(tbl1.last_update_date,1,10)=m.bals_date)*/
        left outer join inv.inv_itm_subinventories z on (tbl1.store_id=z.subinv_id)
        WHERE tbl1.store_id>0 
        GROUP BY 1,2,3,4,5,6,8,9
        HAVING (SUM(tbl1.qnty) != scm.get_ltst_stock_avlbl_bals(k.stock_id, 
 to_char(now(),''YYYY-MM-DD'')))
         ORDER BY tbl1.item_code ASC, z.subinv_id ASC', owner_module = 'Stores And Inventory Manager', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:24', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '6,7', output_type = 'HTML', portrait_lndscp = 'Portrait', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 35)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:24
UPDATE rpt.rpt_reports SET report_name = 'Outstanding Payables Invoices', report_desc = 'Outstanding Payables Invoices', rpt_sql_query = 'SELECT row_number() OVER (ORDER BY a.approval_status DESC, a.pybls_invc_date DESC, a.pybls_invc_hdr_id DESC
) AS "No.  ", 
a.pybls_invc_hdr_id mt, a.pybls_invc_number "Invoice Number", 
to_char(to_timestamp(a.pybls_invc_date,''YYYY-MM-DD HH24:MI:SS''),
''DD-Mon-YYYY HH24:MI:SS'') "Invoice Date", 
/*a.rcvbls_invc_type "Invoice Type",*/scm.get_cstmr_splr_name(a.supplier_id)||
'' ('' ||scm.get_cstmr_splr_site_name(a.supplier_site_id)||'')''  "Customer Name/Site", 
a.comments_desc ||'' (''|| scm.get_src_doc_num(a.src_doc_hdr_id, a.src_doc_type) || ''-''||a.src_doc_type ||'')'' "Invoice Description",
round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''6Grand Total'') + 
abs(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''3Discount'')),2) "Invoice Amount", 
round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''3Discount''),2)  "Discount Amount",
round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''7Total Payments Made''),2)  "Payments Made", 
round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''8Outstanding Balance''),2)  "Outstanding Amount",
 a.approval_status "Approval Status"
        FROM accb.accb_pybls_invc_hdr a 
        WHERE((a.org_id = {:orgID}) and a.approval_status!=''Cancelled'' and a.approval_status ilike ''{:apprvl_status}'' and (COALESCE(scm.get_cstmr_splr_name(a.supplier_id),'''') ilike ''{:sppplr_nm}'') 
        and round(accb.get_pybl_smry_typ_amnt(a.pybls_invc_hdr_id, a.pybls_invc_type, ''8Outstanding Balance''),2)>0
         AND (to_timestamp(a.pybls_invc_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:endDte}'',''DD-Mon-YYYY HH24:MI:SS''))) 
        ORDER BY a.approval_status DESC, a.pybls_invc_date DESC, a.pybls_invc_hdr_id DESC', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:24', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6,7,8,9', cols_to_average = '', cols_to_no_frmt = '6,7,8,9', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 34)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:24
UPDATE rpt.rpt_reports SET report_name = 'Outstanding Receivables Invoices', report_desc = 'Outstanding Receivables Invoices', rpt_sql_query = 'SELECT row_number() OVER (ORDER BY a.approval_status DESC, a.rcvbls_invc_date DESC, a.rcvbls_invc_hdr_id DESC) AS "No.  ", 
rcvbls_invc_hdr_id mt, rcvbls_invc_number "Invoice Number", 
to_char(to_timestamp(a.rcvbls_invc_date,''YYYY-MM-DD HH24:MI:SS''),
''DD-Mon-YYYY HH24:MI:SS'') "Invoice Date", 
/*a.rcvbls_invc_type "Invoice Type",*/scm.get_cstmr_splr_name(a.customer_id)||
'' ('' ||scm.get_cstmr_splr_site_name(customer_site_id)||'')''  "Customer Name/Site", 
a.comments_desc ||'' (''|| scm.get_src_doc_num(a.src_doc_hdr_id, a.src_doc_type) || ''-''||a.src_doc_type ||'')'' "Invoice Description",
round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''6Grand Total'') + 
abs(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''3Discount'')),2) "Invoice Amount", 
round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''3Discount''),2)  "Discount Amount",
round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''7Total Payments Made''),2)  "Payments Made", 
round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''8Outstanding Balance''),2)  "Outstanding Amount",
 a.approval_status "Approval Status"
        FROM accb.accb_rcvbls_invc_hdr a 
        WHERE((a.org_id = {:orgID}) and a.approval_status!=''Cancelled'' and a.approval_status ilike ''{:apprvl_status}'' and (COALESCE(scm.get_cstmr_splr_name(a.customer_id),'''') ilike ''{:cstmr_nm}'') 
        and round(accb.get_rcvbl_smry_typ_amnt(a.rcvbls_invc_hdr_id, a.rcvbls_invc_type, ''8Outstanding Balance''),2)>0
        AND (to_timestamp(a.rcvbls_invc_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:endDte}'',''DD-Mon-YYYY HH24:MI:SS''))) 
        ORDER BY a.approval_status DESC, a.rcvbls_invc_date DESC, a.rcvbls_invc_hdr_id DESC', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:24', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6,7,8,9', cols_to_average = '', cols_to_no_frmt = '6,7,8,9', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 33)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:24
UPDATE rpt.rpt_reports SET report_name = 'SSNIT/TIER2 Account Transaction Split Report', report_desc = 'SSNIT Account Transaction Split Report', rpt_sql_query = 'SELECT row_number() OVER (ORDER BY a.trnsctn_date DESC) AS "No.  ", 
b.accnt_num ||''.''||b.accnt_name "Account Name/Number", 
a.transaction_desc "Description",
Round((13.5/18.5)*a.net_amount,2) "SSNIT Amount", 
Round((5.5/18.5)*a.net_amount,2) "TIER2 Amount", 
a.net_amount "Total Amount",
gst.get_pssbl_val(a.func_cur_id) "Currency",
to_char(to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') "Transaction Date"
FROM accb.accb_trnsctn_details a 
LEFT OUTER JOIN accb.accb_chart_of_accnts b on a.accnt_id = b.accnt_id 
WHERE(b.org_id = {:orgID} and trns_status = ''1'' AND (b.accnt_num ilike ''21060'' or accb.get_accnt_num(b.control_account_id) 
ilike ''21060'' or b.accnt_name ilike ''21060'' or accb.get_accnt_name(b.control_account_id) ilike ''21060'') 
AND (to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'')
and to_timestamp(''{:endDte}'',''DD-Mon-YYYY HH24:MI:SS''))) 
ORDER BY a.trnsctn_date DESC', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:24', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '3,4,5', cols_to_average = '', cols_to_no_frmt = '3,4,5', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 32)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:24
UPDATE rpt.rpt_reports SET report_name = 'Pay Run Bank Advice Report', report_desc = 'Pay Run Bank Advice Report', rpt_sql_query = 'select tbl1.local_id_no "ID No.", tbl1.fullname "Full Name", 
round(tbl1.total_earnings - tbl1.total_bills_charges- tbl1.total_deductions,2) "Take Home", 
tbl2.bank_name ||''/''|| tbl2.bank_branch "Bank", 
tbl2.account_name ||''/''|| tbl2.account_number ||''/''||  
tbl2.account_type "Account Details", 
tbl2.net_pay_portion "Net Pay Portion", 
tbl2.portion_uom "UOM ", 
CASE WHEN portion_uom=''Percent'' THEN round(chartonumeric(to_char((net_pay_portion/100.00) * 
(tbl1.total_earnings - tbl1.total_bills_charges- tbl1.total_deductions),''999999999999999999999999999999999999999999999D99'')),2) 
 ELSE net_pay_portion END "Amount to Transfer" 
from pay.get_payment_summrys({:orgID},''{:pay_run_name}'',''{:ordrBy}'') tbl1 
LEFT OUTER JOIN 
pasn.prsn_bank_accounts tbl2 ON (tbl1.person_id = tbl2.person_id and tbl2.net_pay_portion !=0);', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:24', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '10', cols_to_average = '', cols_to_no_frmt = '2,8,10', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 31)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:24
UPDATE rpt.rpt_reports SET report_name = 'Pay Run Summary Report', report_desc = 'Pay Run Summary Report', rpt_sql_query = 'select tbl1.local_id_no "ID No.", tbl1.fullname "Full Name", 
round(tbl1.total_earnings,2) "Total Earnings", 
round(tbl1.total_employer_charges,2)  "Total Employer Charges", 
round(tbl1.total_bills_charges+ tbl1.total_deductions,2) "Deductions",
round(tbl1.total_earnings - tbl1.total_bills_charges- tbl1.total_deductions,2) "Take Home" 
from pay.get_payment_summrys({:orgID},''{:pay_run_name}'',''{:ordrBy}'') tbl1;', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:24', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '2,3,4,5', cols_to_average = '', cols_to_no_frmt = '2,3,4,5', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 30)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:24
UPDATE rpt.rpt_reports SET report_name = 'Expiring Items Report', report_desc = 'Expiring Items Report', rpt_sql_query = 'SELECT distinct a.itm_id "m", a.consgmt_id "Consignment No.", 
 a.subinv_id "n", (select w.subinv_name from inv.inv_itm_subinventories w where w.subinv_id=a.subinv_id) "Store ",
 b.item_code "Item Code      ", b.item_desc "Description                    ", 
 a.cost_price "Unit Cost Price ", COALESCE(inv.get_csgmt_lst_tot_bls(a.consgmt_id),0) "QTY    ", 
 a.cost_price*COALESCE(inv.get_csgmt_lst_tot_bls(a.consgmt_id),0) "Total Cost    ",
 to_char(to_timestamp(a.expiry_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "Date of Expiry  ", 
 extract(''years'' from age(CASE WHEN a.expiry_date IS NULL or expiry_date='''' THEN 
 to_timestamp(''4000-12-31 23:59:59'',''YYYY-MM-DD HH24:MI:SS'') ELSE 
 to_timestamp(expiry_date || '' 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') END, now())) || '' yr(s) ''
 || extract(''months'' from age(CASE WHEN a.expiry_date IS NULL or expiry_date='''' THEN 
 to_timestamp(''4000-12-31 23:59:59'',''YYYY-MM-DD HH24:MI:SS'') ELSE 
 to_timestamp(expiry_date || '' 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') END, now())) || '' mon(s) ''
 || extract(''days'' from age(CASE WHEN a.expiry_date IS NULL or expiry_date='''' THEN 
 to_timestamp(''4000-12-31 23:59:59'',''YYYY-MM-DD HH24:MI:SS'') ELSE 
 to_timestamp(expiry_date || '' 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') END, now())) || '' day(s)'' "Time to Expire ",
 a.expiry_date "q"
 FROM inv.inv_consgmt_rcpt_det a, inv.inv_itm_list b
 WHERE a.itm_id=b.item_id and b.org_id={:orgID} and (b.enabled_flag=''1'' or b.enabled_flag IS NULL)
 and age(CASE WHEN a.expiry_date IS NULL or expiry_date='''' THEN 
 to_timestamp(''4000-12-31 23:59:59'',''YYYY-MM-DD HH24:MI:SS'') ELSE 
 to_timestamp(expiry_date || '' 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') END, now()) 
 between interval ''{:days1} Day'' and interval ''{:days2} Day'' 
 and COALESCE(inv.get_csgmt_lst_tot_bls(a.consgmt_id),0)>0
 ORDER BY a.expiry_date, b.item_desc, a.consgmt_id', owner_module = 'Stores And Inventory Manager', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:24', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '8', cols_to_average = '', cols_to_no_frmt = '6,7,8', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 29)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:24
UPDATE rpt.rpt_reports SET report_name = 'Items Sold Report', report_desc = 'Items Sold Report', rpt_sql_query = 'SELECT row_number() OVER (ORDER BY SUM(b.doc_qty) DESC, c.item_desc ASC) AS "No.  "
        , 
'''''''' || c.item_code "Item Code         ", 
        
c.item_desc   "Item Description      ", 
        
SUM(b.doc_qty) "QTY      ", 
        
d.uom_name "UOM   ", 
        
b.unit_selling_price "Selling Price", 
        
SUM(b.doc_qty * b.unit_selling_price) "Total Amount     "
        
FROM scm.scm_sales_invc_hdr a, sec.sec_users y, scm.scm_sales_invc_det b, inv.inv_itm_list c, inv.unit_of_measure d
        WHERE ((a.invc_hdr_id = b.invc_hdr_id AND b.itm_id = c.item_id AND c.base_uom_id = d.uom_id) 
AND (b.is_itm_delivered =''1'') AND (a.org_id = {:orgID}) AND 
(b.created_by=y.user_id) and (a.invc_type ilike ''{:doctype}'')  
     and (to_timestamp(b.creation_date,''YYYY-MM-DD HH24:MI:SS'') between 
to_timestamp(''{:strtDte}'',''DD-Mon-YYYY HH24:MI:SS'') 
AND 
    to_timestamp(''{:endDte}'',''DD-Mon-YYYY HH24:MI:SS''))) 

GROUP BY c.item_desc, b.itm_id, c.item_code, d.uom_name, b.unit_selling_price
  
ORDER BY SUM(b.doc_qty) DESC, c.item_desc ASC', owner_module = 'Stores And Inventory Manager', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:24', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '6', cols_to_average = '', cols_to_no_frmt = '6', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 28)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:25
UPDATE rpt.rpt_reports SET report_name = 'Automatic Database Backup', report_desc = 'Automatic Database Backup', rpt_sql_query = '@echo off
SET datestr=%Date:~0,4%%Date:~5,2%%Date:~8,2%%TIME:~0,2%
echo datestr is %datestr%
    
   
set BACKUP_FILE={:backup_dir}\{:dbase_name}_%datestr%.backup
   
echo backup file name is %BACKUP_FILE%
   
SET PGPASSWORD={:db_password}
   
echo on
cd /D {:pg_dmp_dir}

pg_dump.exe --host {:host_name} --port {:portnum} --username postgres --verbose --role "postgres" --format=c --blobs --encoding "UTF8" --file "%BACKUP_FILE%" {:dbase_name}



forfiles -p "{:backup_dir}" -s -m *.backup -d -5 -c "cmd /c del @path"

robocopy "C:\Databases\yilostar_live\DB_Backups" "Z:\DB_Backups" /E /M /XO /R:1 /W:', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:25', rpt_or_sys_prcs = 'Command Line Script-Windows', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 27)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:25
UPDATE rpt.rpt_reports SET report_name = 'Automatic Re-indexing of Database', report_desc = 'Automatic Re-indexing of Database', rpt_sql_query = 'REINDEX DATABASE {:dbase_name}', owner_module = 'System Administration', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:25', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 26)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:25
UPDATE rpt.rpt_reports SET report_name = 'Automatic Database Maintenance', report_desc = '', rpt_sql_query = 'VACUUM FULL FREEZE VERBOSE ANALYZE', owner_module = 'System Administration', is_enabled = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:25', rpt_or_sys_prcs = 'Database Function', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'None', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 25)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:25
UPDATE rpt.rpt_reports SET report_name = 'Journal Import from Internal Payments Module', report_desc = 'Journal Import from Internal Payments Module', rpt_sql_query = 'SELECT a.accnt_id, 
to_char(to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trnsdte
, SUM(a.dbt_amount) dbt_sum, SUM(a.crdt_amount) crdt_sum, SUM(a.net_amount) net_sum, 
a.func_cur_id FROM {:intrfc_tbl_name} a, accb.accb_chart_of_accnts b 
WHERE a.gl_batch_id = -1 and a.accnt_id = b.accnt_id and b.org_id={:orgID} and age(now(),
to_timestamp(a.last_update_date,''YYYY-MM-DD HH24:MI:SS'')) > interval ''5 minute'' /*and 
NOT EXISTS(select f.transctn_id from accb.accb_trnsctn_details f where f.batch_id IN 
(select g.batch_id from accb.accb_trnsctn_batches g where g.batch_name ilike ''{:glbatch_name}'' 
and to_timestamp(g.creation_date,''YYYY-MM-DD HH24:MI:SS'') between (to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS'') 
- interval ''6 months'') and (to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS'') + interval ''6 months'')) 
and f.source_trns_ids like ''%,'' || a.interface_id || '',%'' and f.trnsctn_date=a.trnsctn_date and f.accnt_id= a.accnt_id)*/  
GROUP BY a.accnt_id, a.trnsctn_date, func_cur_id 
ORDER BY to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS'')', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:25', rpt_or_sys_prcs = 'Journal Import', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 24)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:25
UPDATE rpt.rpt_reports SET report_name = 'Journal Import from Stores & Inventory Module', report_desc = 'Journal Import from Stores & Inventory Module', rpt_sql_query = 'SELECT a.accnt_id, 
to_char(to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') trnsdte
, SUM(a.dbt_amount) dbt_sum, SUM(a.crdt_amount) crdt_sum, SUM(a.net_amount) net_sum, 
a.func_cur_id FROM {:intrfc_tbl_name} a, accb.accb_chart_of_accnts b 
WHERE a.gl_batch_id = -1 and a.accnt_id = b.accnt_id and b.org_id={:orgID} and age(now(),
to_timestamp(a.last_update_date,''YYYY-MM-DD HH24:MI:SS'')) > interval ''5 minute'' /*and 
NOT EXISTS(select f.transctn_id from accb.accb_trnsctn_details f where f.batch_id IN 
(select g.batch_id from accb.accb_trnsctn_batches g where g.batch_name ilike ''{:glbatch_name}'' 
and to_timestamp(g.creation_date,''YYYY-MM-DD HH24:MI:SS'') between (to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS'') 
- interval ''6 months'') and (to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS'') + interval ''6 months'')) 
and f.source_trns_ids like ''%,'' || a.interface_id || '',%'' and f.trnsctn_date=a.trnsctn_date and f.accnt_id= a.accnt_id)*/  
GROUP BY a.accnt_id, a.trnsctn_date, func_cur_id 
ORDER BY to_timestamp(a.trnsctn_date,''YYYY-MM-DD HH24:MI:SS'')', owner_module = 'Stores And Inventory Manager', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:25', rpt_or_sys_prcs = 'Journal Import', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 23)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:25
UPDATE rpt.rpt_reports SET report_name = 'Post GL Transaction Batches', report_desc = 'Post GL Transaction Batches', rpt_sql_query = 'SELECT 
batch_id, 
batch_name, 
batch_source, 
batch_status mt, 

CASE WHEN batch_status=''1'' THEN ''POSTED'' ELSE ''NOT POSTED'' END "Posting Status", 

batch_description,  
org_id m1, 
avlbl_for_postng m2, 

(select count(1) from accb.accb_trnsctn_details y where y.batch_id=a.batch_id)  "No. of Trns.  "
 
FROM accb.accb_trnsctn_batches a 

WHERE org_id={:orgID} and batch_status=''0'' and avlbl_for_postng=''1'' 

and ((select count(1) from accb.accb_trnsctn_details y where y.batch_id=a.batch_id)>0 or batch_source=''Period Close Process'') 
and age(now(), 
to_timestamp(last_update_date,''YYYY-MM-DD HH24:MI:SS''))> interval ''10 minute'' 
ORDER BY 1 ASC;', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:25', rpt_or_sys_prcs = 'Posting of GL Trns. Batches', cols_to_group = '', cols_to_count = '', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 22)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:25
UPDATE rpt.rpt_reports SET report_name = 'Inventory Items Value Report', report_desc = 'Inventory Items Value Report', rpt_sql_query = 'select '''''''' || a.item_code "Item Code          ", 
a.item_desc "Description          ",
a.cat_name "Category  ",
a.subinv_name "Store  ", 
trim(to_char(a.totqty,''9999999999999999990D99'')) "QTY  ", 
a.uom_name "UOM ", 
trim(to_char(a.costprice*totqty,''9999999999999999990D99'')) "Total Cost Price     ",
trim(to_char(a.crnt_sllng_rpice*totqty,''9999999999999999990D99'')) "Total Selling Price"
FROM scm.get_inv_sllng_price({:orgID}, {:strID} , {:catID}, 10.00, ''2'') a, inv.inv_itm_list b
 WHERE a.item_id=b.item_id and (b.enabled_flag=''1'' or b.enabled_flag IS NULL);', owner_module = 'Stores And Inventory Manager', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:25', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '6,7', cols_to_average = '', cols_to_no_frmt = '4,6,7', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 21)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:25
UPDATE rpt.rpt_reports SET report_name = 'Inventory Items Stock Qty Report', report_desc = 'Inventory Items Stock Qty Report', rpt_sql_query = 'select '''''''' || a.item_code "Item Code     ", 
a.item_desc "Description          ",
a.cat_name "Category  ",
a.subinv_name "Store  ", 
trim(to_char(a.totqty,''9999999999999999990D99'')) "QTY  ", 
a.uom_name "UOM ", 
trim(to_char(a.costprice,''9999999999999999990D99'')) "Cost Price ", 
trim(to_char(a.crnt_sllng_rpice,''9999999999999999990D99'')) "Selling Price     ", 
trim(to_char(a.crnt_prft_mgn,''9999999999999999990D99'')) "Profit Margin (%)"
FROM scm.get_inv_sllng_price({:orgID}, {:strID} , {:catID}, 10.00, ''2'')  a, inv.inv_itm_list b
 WHERE a.item_id=b.item_id and (b.enabled_flag=''1'' or b.enabled_flag IS NULL)
 and a.totqty between {:qty1} and {:qty2} and a.crnt_prft_mgn between {:mrgn1} and {:mrgn2};', owner_module = 'Stores And Inventory Manager', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:25', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '6,7,10', cols_to_average = '', cols_to_no_frmt = '4,6,7,8,9,10', output_type = 'MICROSOFT EXCEL', portrait_lndscp = 'Landscape', rpt_layout='TABULAR', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 20)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:26
UPDATE rpt.rpt_reports SET report_name = 'Person Names-Detail Display', report_desc = 'Person Names', rpt_sql_query = 'SELECT a.local_id_no "ID No.     ", 
 trim(a.title || '' '' || a.sur_name || '', '' || 
a.first_name || '' '' || a.other_names) "Full Name      ",
       a.gender "Gender       ", a.marital_status "Marital Status   ", to_char(to_timestamp(a.date_of_birth,''YYYY-MM-DD''),''DD-Mon-YYYY'')  "Date of Birth     ", a.place_of_birth "Place of Birth        ",a.hometown, a.nationality, a.religion "Religion       ", 
       a.res_address "Residential Address     ", a.pstl_addrs "Postal Address     ", a.email "Email Address      ", a.cntct_no_tel "Tel No.                 ", a.cntct_no_mobl "Mobile No.           ", 
       a.cntct_no_fax "Fax No.          " , ''/Person/'' || a.img_location
       FROM prs.prsn_names_nos a  where ((a.org_id = {:orgID}
       )) ORDER BY a.local_id_no LIMIT {:limit} OFFSET {:offst};
/*01-Jan-2013

 a.title "Title   ", a.first_name "First Name     ", a.sur_name "Surname          ", a.other_names "Other Names          ", 
*/', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:26', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='DETAIL', imgs_col_nos='15', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 19)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:26
UPDATE rpt.rpt_reports SET report_name = 'Account Transactions Trend Chart', report_desc = 'Account Transactions Trend Chart', rpt_sql_query = 'SELECT  to_timestamp(a.as_at_date,''YYYY-MM-DD'') "_", to_char(to_timestamp(a.as_at_date,''YYYY-MM-DD''),''DD-Mon-YYYY'')  "Transaction Date       ", 
 COALESCE(accb.get_prd_usr_trns_sum(a.accnt_id, a.as_at_date || '' 00:00:00'', a.as_at_date || '' 
23:59:59''),0) "Amount     "  
from accb.accb_accnt_daily_bals a where a.accnt_id = COALESCE(NULLIF({:accntID},-1), a.accnt_id)  
and to_timestamp(a.as_at_date,''YYYY-MM-DD'')>=to_timestamp(''{:fromDate}'',''YYYY-MM-DD'') and 
to_timestamp(a.as_at_date,''YYYY-MM-DD'')<=to_timestamp(''{:toDate}'',''YYYY-MM-DD'') 
ORDER BY  to_timestamp(a.as_at_date,''YYYY-MM-DD'')', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:26', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '800,400', cols_to_count = '1,2', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'LINE CHART', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 18)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:26
UPDATE rpt.rpt_reports SET report_name = 'Account Balance Trend Line Chart', report_desc = 'Account Balance Trend Line Chart', rpt_sql_query = 'SELECT
  to_timestamp(a.as_at_date, ''YYYY-MM-DD'')           "_",
  a.as_at_date                                       "Balance Date ",
  accb.get_ltst_accnt_bals(a.accnt_id, a.as_at_date) "Amount "
from accb.accb_accnt_daily_bals a
where a.accnt_id = COALESCE(NULLIF({:accntID},-1), a.accnt_id) and to_timestamp
(a.as_at_date,''YYYY-MM-DD'')>=to_timestamp(''{:fromDate}'',''YYYY-MM-DD'') and  to_timestamp
(a.as_at_date,''YYYY-MM-DD'')<=to_timestamp(''{:toDate}'',''YYYY-MM-DD'') 
ORDER BY to_timestamp(a.as_at_date, ''YYYY-MM-DD'');', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:26', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '800,400', cols_to_count = '1,2', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'LINE CHART', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 17)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:26
UPDATE rpt.rpt_reports SET report_name = 'Daily Sales Comparison', report_desc = 'Sales Comparison Per Period', rpt_sql_query = 'SELECT SUM( scm.get_doc_smry_typ_amnt(a.invc_hdr_id, a.invc_type, ''5Grand Total'')) 
"Grand Total", a.invc_date "Document Date", to_timestamp(a.invc_date,''YYYY-MM-DD HH24:MI:SS'')
 "_" FROM scm.scm_sales_invc_hdr a, sec.sec_users y 
WHERE ((a.approval_status ilike ''Approved'') AND (a.org_id = {:orgID}) AND (a.created_by=y.user_id)
 and (y.user_name ilike ''{:userNm}'') and (a.invc_type ilike ''{:docTyp}'') 
and (to_timestamp(a.invc_date,''YYYY-MM-DD HH24:MI:SS'') between 
to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND 
to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS''))) 
GROUP BY to_timestamp(a.invc_date,''YYYY-MM-DD HH24:MI:SS''), a.invc_date 
ORDER BY to_timestamp(a.invc_date,''YYYY-MM-DD HH24:MI:SS'')', owner_module = 'Stores And Inventory Manager', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:26', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '800400', cols_to_count = '1,0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'LINE CHART', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 16)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:26
UPDATE rpt.rpt_reports SET report_name = 'Top 20 Income Accounts-Pie Chart', report_desc = 'ACC-Top 20 Income Accounts-Pie Chart', rpt_sql_query = 'SELECT a.accnt_id "_", a.accnt_num "Account No.    ", a.accnt_name "Account Name.    ", 
CASE WHEN a.accnt_type = ''R'' THEN accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'',
 ''{:toDate} 23:59:59'') ELSE -1*accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'', 
''{:toDate} 23:59:59'') END "Amount   ", CASE WHEN a.accnt_type = ''R'' THEN 
accb.prnt_usr_trns_sum_rcsv(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 23:59:59'')  
ELSE -1*accb.prnt_usr_trns_sum_rcsv(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 23:59:59'') END 
"TOTALS ", a.is_prnt_accnt "_" 
FROM accb.accb_chart_of_accnts a 
WHERE ((a.org_id = {:orgID}) 
and (a.is_prnt_accnt=''0'' and accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 
23:59:59'') IS NOT NULL) and (a.accnt_type = ''R'')) 
ORDER BY accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 23:59:59'') DESC LIMIT 20 OFFSET 0', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:26', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '1100,300', cols_to_count = '2,3', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'PIE CHART', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 15)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:26
UPDATE rpt.rpt_reports SET report_name = 'Profit & Loss Column Chart', report_desc = 'ACC-Profit & Loss', rpt_sql_query = 'SELECT a.accnt_id "_", a.accnt_num "Account No.    ", a.accnt_name "Account Name.    ", 
CASE WHEN a.accnt_type = ''R'' THEN accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'',
 ''{:toDate} 23:59:59'') ELSE -1*accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'', 
''{:toDate} 23:59:59'') END "Amount   ", CASE WHEN a.accnt_type = ''R'' THEN 
accb.prnt_usr_trns_sum_rcsv(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 23:59:59'')  
ELSE -1*accb.prnt_usr_trns_sum_rcsv(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate} 23:59:59'') END 
"TOTALS ", a.is_prnt_accnt "_" FROM accb.accb_chart_of_accnts a WHERE ((a.org_id = {:orgID}) 
and (a.is_prnt_accnt=''0'' and accb.get_prd_usr_trns_sum(a.accnt_id, ''{:fromDate} 00:00:00'', ''{:toDate}
 23:59:59'') IS NOT NULL) and (a.accnt_type = ''R'' or a.accnt_type = ''EX'')) 
AND a.accnt_id in (Select z.accnt_id from accb.accb_chart_of_accnts z WHERE (z.accnt_type = ''R'' or z.accnt_type = ''EX'') and z.is_prnt_accnt=''0'' and accb.get_prd_usr_trns_sum(z.accnt_id, ''{:fromDate} 00:00:00'',
 ''{:toDate} 23:59:59'') IS NOT NULL ORDER BY abs(accb.get_prd_usr_trns_sum(z.accnt_id, ''{:fromDate} 00:00:00'',
 ''{:toDate} 23:59:59'')) DESC LIMIT 30 OFFSET 0)
ORDER BY a.accnt_typ_id, a.accnt_num', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:26', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '800,500', cols_to_count = '2,3', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'COLUMN CHART', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 14)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:26
UPDATE rpt.rpt_reports SET report_name = 'Sales Per Period', report_desc = 'Sales Per Period', rpt_sql_query = 'SELECT a.invc_hdr_id "_", a.invc_number "Document No.   ",
y.user_name "Sales Agent", scm.get_doc_smry_typ_amnt(a.invc_hdr_id, a.invc_type, ''5Grand Total'') "Grand Total", 
scm.get_doc_smry_typ_amnt(a.invc_hdr_id, a.invc_type, ''6Total Payments Received'') "Amount Received ", scm.get_doc_smry_typ_amnt(a.invc_hdr_id, a.invc_type, ''7Change/Balance'') 
"Outstanding Amount", to_char(to_timestamp(a.invc_date,''YYYY-MM-DD''),''DD-Mon-YYYY'') "Document Date" FROM scm.scm_sales_invc_hdr a, 
sec.sec_users y WHERE ((a.approval_status ilike ''Approved'') AND (a.org_id = {:orgID}) AND 
(a.created_by=y.user_id) and (y.user_name ilike ''{:userNm}'') and (a.invc_type ilike ''{:docTyp}'') 
and (to_timestamp(a.invc_date,''YYYY-MM-DD HH24:MI:SS'') between 
to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND 
to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS''))) 
ORDER BY a.invc_hdr_id ASC
/*
 a.invc_type "Document Type ", 
, scm.get_doc_smry_typ_amnt(a.invc_hdr_id, a.invc_type, ''1Initial 
Amount'') "Basic Amount"
scm.get_doc_smry_typ_amnt(a.invc_hdr_id, a.invc_type, ''2Taxl'') 
"Tax Amount",scm.get_doc_smry_typ_amnt(a.invc_hdr_id, a.invc_type, ''3Discount'') 
"Discount",scm.get_doc_smry_typ_amnt(a.invc_hdr_id, a.invc_type, ''4Extra Charge'') "Special Charge 
",*/', owner_module = 'Stores And Inventory Manager', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:26', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '3,4,5', cols_to_average = '', cols_to_no_frmt = '3,4,5', output_type = 'HTML', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 12)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:26
UPDATE rpt.rpt_reports SET report_name = 'Pay Items Weekly Summary Per Date Range', report_desc = 'Internal  Payments Detail Per Date Range', rpt_sql_query = 'SELECT a.item_id "3", b.item_code_name 
"Item Name   ", SUM(a.amount_paid) "Amount Paid", to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''W (Mon YYYY)'') "Week(Month Year)", to_char(to_timestamp
(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''WW'') "Week(1-53) of the Year",  to_char(to_timestamp
(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''MM YYYY (W)'') "_"
FROM (pay.pay_itm_trnsctns a LEFT OUTER JOIN org.org_pay_items b ON a.item_id = 
b.item_id) LEFT OUTER JOIN prs.prsn_names_nos c on a.person_id = c.person_id 
WHERE((trim(c.title || '' '' || c.sur_name || '', '' || c.first_name || '' '' || 
c.other_names) ilike ''%'') and (b.org_id ={:orgID})
AND (b.item_code_name ilike ''{:itemNm}'') and 
(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS'') between 
to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND 
to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS''))) 
GROUP BY a.item_id, b.item_code_name, to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''MM YYYY (W)''),  to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''WW''),to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''W (Mon YYYY)'')
ORDER BY  to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''MM YYYY (W)''), to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''WW''),  b.item_code_name', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:26', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '2', cols_to_average = '', cols_to_no_frmt = '2', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 10)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:27
UPDATE rpt.rpt_reports SET report_name = 'Pay Items Monthly Summary Per Date Range', report_desc = 'Internal  Payments Detail Per Date Range', rpt_sql_query = 'SELECT a.item_id "3", b.item_code_name 
"Item Name   ", SUM(a.amount_paid) "Amount Paid", 
to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''Mon YYYY'') "Month         ", 
to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''MM YYYY'') "_",
 sec.get_usr_name(a.created_by) "Created By"
FROM (pay.pay_itm_trnsctns a LEFT OUTER JOIN org.org_pay_items b ON a.item_id = 
b.item_id) LEFT OUTER JOIN prs.prsn_names_nos c on a.person_id = c.person_id 
WHERE((trim(c.title || '' '' || c.sur_name || '', '' || c.first_name || '' '' || 
c.other_names) ilike ''%'') and (b.org_id ={:orgID}) 
AND (b.item_code_name ilike ''{:itemNm}'') and 
(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS'') between 
to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND 
to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS'')))
AND a.created_by=COALESCE(NULLIF({:rcvdBy},-1), a.created_by)
GROUP BY a.item_id, b.item_code_name, to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''MM YYYY''),  
to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),
''Mon YYYY''), a.paymnt_date, 6
 ORDER BY to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''MM YYYY''),  b.item_code_name', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:27', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '1', cols_to_sum = '2', cols_to_average = '', cols_to_no_frmt = '2', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 9)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:27
UPDATE rpt.rpt_reports SET report_name = 'Person Payments Detail', report_desc = 'Internal  Payments Detail Per Date Range', rpt_sql_query = 'SELECT a.pay_trns_id "1", a.person_id "2", a.item_id "3", 
c.local_id_no "ID No.         ", trim(c.title || '' '' || c.sur_name || '', '' || 
c.first_name || '' '' || c.other_names) "Full Name      ", b.item_code_name 
"Item Name                         ", a.amount_paid "Amount Paid", to_char(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS''),''DD-Mon-YYYY HH24:MI:SS'') 
"Payment Date", a.paymnt_source "4", a.pay_trns_type || '':'' || a.pymnt_desc "Description                            ", a.crncy_id "5" 
FROM (pay.pay_itm_trnsctns a LEFT OUTER JOIN org.org_pay_items b ON a.item_id = 
b.item_id) LEFT OUTER JOIN prs.prsn_names_nos c on a.person_id = c.person_id 
WHERE((trim(c.title || '' '' || c.sur_name || '', '' || c.first_name || '' '' || 
c.other_names) ilike ''%'') and (b.org_id ={:orgID}) and 
(to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS'') between 
to_timestamp(''{:fromDate} 00:00:00'',''YYYY-MM-DD HH24:MI:SS'') AND 
to_timestamp(''{:toDate} 23:59:59'',''YYYY-MM-DD HH24:MI:SS''))) 
AND c.local_id_no IN ({:IDNos})
AND b.item_code_name ilike ''{:itemNm}''  
AND a.pymnt_vldty_status=''VALID'' and a.src_py_trns_id<=0 
ORDER BY  to_timestamp(a.paymnt_date,''YYYY-MM-DD HH24:MI:SS'') ASC', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:27', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '3,4', cols_to_count = '3', cols_to_sum = '6', cols_to_average = '', cols_to_no_frmt = '6', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 8)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:27
UPDATE rpt.rpt_reports SET report_name = 'Balance Sheet', report_desc = 'ACC-Balance Sheet', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  (CASE WHEN ''{:p_pad_acnts}'' ilike ''Yes'' THEN tbl1.gnrl_data12||tbl1.gnrl_data2
ELSE tbl1.gnrl_data2 END) account_number,
  tbl1.gnrl_data3 accnt_name,
  tbl1.gnrl_data4::NUMERIC trns_amnt,
  tbl1.gnrl_data5::INTEGER accnt_id,
  tbl1.gnrl_data6 is_prnt_accnt,
  tbl1.gnrl_data7 has_sub_ledgers,
  tbl1.gnrl_data8 accnt_type,
  tbl1.gnrl_data9::NUMERIC trns_amntsm,
  tbl1.gnrl_data10 depth,
  tbl1.gnrl_data11 path,
  tbl1.gnrl_data12 lftpaddng,
  to_char(to_timestamp(''{:p_as_at_date}'',''YYYY-MM-DD''),''DD-Mon-YYYY'') p_as_at_date,
  (Select SUM(b.gnrl_data9::NUMERIC) FROM rpt.rpt_gnrl_data_storage b WHERE b.rpt_run_id={:rptRunID} and b.gnrl_data8=''A'') asset_sum,
  (Select SUM(b.gnrl_data9::NUMERIC) FROM rpt.rpt_gnrl_data_storage b WHERE b.rpt_run_id={:rptRunID} and b.gnrl_data8=''EQ'') equity_sum,
  (Select SUM(b.gnrl_data9::NUMERIC) FROM rpt.rpt_gnrl_data_storage b WHERE b.rpt_run_id={:rptRunID} and b.gnrl_data8=''L'') lblty_sum
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:27', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '0', cols_to_count = 'NO', cols_to_sum = '2', cols_to_average = '', cols_to_no_frmt = '2,5', output_type = 'PDF', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='7.jrxml', pre_rpt_sql_query='select accb.populate_bals_sheet(
{:rptRunID},
''{:p_as_at_date}'',
{:p_max_acnt_level},
{:p_sgmnt1_val},
{:p_sgmnt2_val},
{:p_sgmnt3_val},
{:p_sgmnt4_val},
{:p_sgmnt5_val},
{:p_sgmnt6_val},
{:p_sgmnt7_val},
{:p_sgmnt8_val},
{:p_sgmnt9_val},
{:p_sgmnt10_val},
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 7)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:27
UPDATE rpt.rpt_reports SET report_name = 'Person Payment Item Balances', report_desc = 'Person Payment Item Balances', rpt_sql_query = 'SELECT row_number() over (order by c.local_id_no,b.pay_run_priority ) as                                           Num,
       c.local_id_no                                                                            ID_No,
       trim(c.title || '' '' || c.sur_name ||
            '', '' || c.first_name || '' '' || c.other_names)                                       Full_Name,
       b.item_code_name                                                                         Pay_Item,
       CASE WHEN b.item_maj_type = ''Balance Item'' THEN b.item_maj_type ELSE b.item_min_type END m1,
       coalesce((CASE
                     WHEN b.item_maj_type = ''Balance Item'' THEN pay.get_ltst_blsitm_bals(c.person_id,
                                                                                         org.get_payitm_id(b.item_code_name),
                                                                                         ''{:pay_dte}'')
                     ELSE a.amount_paid END), 0)                                                Amount,
       b.pay_run_priority                                                                       m2,
       scm.get_cstmr_splr_name(c.lnkd_firm_org_id)
FROM prs.prsn_names_nos c
         LEFT OUTER JOIN pasn.prsn_bnfts_cntrbtns f ON (c.person_id = f.person_id and
                                                        (now() between to_timestamp(f.valid_start_date, ''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(f.valid_end_date, ''YYYY-MM-DD HH24:MI:SS'')))
         LEFT OUTER JOIN org.org_pay_items b ON (b.item_id = f.item_id)
         LEFT OUTER JOIN pay.pay_itm_trnsctns a ON (a.item_id = b.item_id and a.person_id = c.person_id and
                                                    (to_timestamp(a.paymnt_date, ''YYYY-MM-DD HH24:MI:SS'') between to_timestamp(''{:pay_dte} 00:00:00'', ''YYYY-MM-DD HH24:MI:SS'') AND to_timestamp(''{:pay_dte} 23:59:59'', ''YYYY-MM-DD HH24:MI:SS'')))
WHERE ((b.org_id = {:orgID}) and (b.local_classfctn ilike ''{:clsfctn}'')
    AND (b.item_code_name ilike ''{:itmNm}'')
    AND (c.local_id_no IN ({:id_num})) AND (b.item_maj_type = ''Balance Item''))
  AND coalesce((CASE
                    WHEN b.item_maj_type = ''Balance Item'' THEN pay.get_ltst_blsitm_bals(c.person_id,
                                                                                        org.get_payitm_id(b.item_code_name),
                                                                                        ''{:pay_dte}'')
                    ELSE a.amount_paid END), 0) > 0
  AND '''' || c.lnkd_firm_org_id = coalesce(NULLIF(''{:instu_id}'', ''''), '''' || c.lnkd_firm_org_id)
ORDER BY c.local_id_no, b.pay_run_priority', owner_module = 'Internal Payments', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:27', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '4', output_type = 'PDF', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='342.jrxml', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 6)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:27
UPDATE rpt.rpt_reports SET report_name = 'Person Divisions', report_desc = 'Persons & Groups', rpt_sql_query = 'select a.local_id_no "ID No.        ",(select j.div_code_name from org.org_divs_groups j 
where j.div_id = b.div_id) "Division/Group                           ", to_char(to_timestamp(b.valid_start_date ,''YYYY-MM-DD''),''DD-Mon-YYYY'')
"Start Date    ",
 to_char(to_timestamp(b.valid_end_date ,''YYYY-MM-DD''),''DD-Mon-YYYY'') "End Date      "
       from prs.prsn_names_nos a 
       LEFT OUTER JOIN pasn.prsn_divs_groups b ON a.person_id = b.person_id
       where a.org_id = {:orgID} order by a.local_id_no;', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:27', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '0', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 5)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:27
UPDATE rpt.rpt_reports SET report_name = 'Person Names', report_desc = 'Person Names', rpt_sql_query = 'SELECT a.local_id_no "ID No.     ", 
 trim(a.title || '' '' || a.sur_name || '', '' || 
a.first_name || '' '' || a.other_names) "Full Name      ",
       a.gender "Gender       ", a.marital_status "Marital Status   ", to_char(to_timestamp(a.date_of_birth,''YYYY-MM-DD''),''DD-Mon-YYYY'')  "Date of Birth     ", a.place_of_birth "Place of Birth        ", a.religion "Religion       ", 
       a.res_address "Residential Address     ", a.pstl_addrs "Postal Address     ", a.email "Email Address      ", a.cntct_no_tel "Tel No.                 ", a.cntct_no_mobl "Mobile No.           ", 
       a.cntct_no_fax "Fax No.          ", b.prsn_type "Person Type            ", b.prn_typ_asgnmnt_rsn "Person Type Assignment Reason     ", 
        b.further_details "Further Details         "
       FROM prs.prsn_names_nos a LEFT OUTER JOIN pasn.prsn_prsntyps b
       ON (a.person_id = b.person_id ) where ((a.org_id = {:orgID}
       ) and (to_timestamp(''{:as_at_dte}'',''YYYY-MM-DD HH24:MI:SS'') 
between to_timestamp(b.valid_start_date,''YYYY-MM-DD HH24:MI:SS'') 
AND to_timestamp(b.valid_end_date,''YYYY-MM-DD HH24:MI:SS''))) ORDER BY a.local_id_no;', owner_module = 'Basic Person Data', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:27', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Landscape', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 4)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:27
UPDATE rpt.rpt_reports SET report_name = 'Reversal of Posted Period Close Process', report_desc = 'Reversal of Posted Period Close Process', rpt_sql_query = 'select accb.rvrs_pstd_period_close(''{:closing_dte}'', {:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID})', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:27', rpt_or_sys_prcs = 'System Process', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 3)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:28
UPDATE rpt.rpt_reports SET report_name = 'Deletion of Unposted Period Close Process', report_desc = 'Deletion of Unposted Period Close Process', rpt_sql_query = 'select accb.rvrs_period_close(''{:closing_dte}'', {:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID})', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:28', rpt_or_sys_prcs = 'System Process', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 2)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:28
UPDATE rpt.rpt_reports SET report_name = 'Period Close Process', report_desc = 'Period Close Process', rpt_sql_query = 'select accb.close_period(''{:closing_dte}'', {:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID})', owner_module = 'Accounting', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:28', rpt_or_sys_prcs = 'System Process', cols_to_group = '', cols_to_count = 'NO', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'None', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='', process_runner='Standard Process Runner', jrxml_file_name='', pre_rpt_sql_query='', pst_rpt_sql_query='' WHERE (report_id = 1)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:47
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:47', lov_name_id = '32', param_data_type = 'TEXT', date_format = 'yyyy-MM-dd', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 2)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:48
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period End Date to Close', paramtr_rprstn_nm_in_query = '{:closing_dte}', default_value = '2017-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:48', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 1)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:48
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:48', lov_name_id = '32', param_data_type = 'TEXT', date_format = 'yyyy-MM-dd', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 3)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:48
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:48', lov_name_id = '32', param_data_type = 'TEXT', date_format = 'yyyy-MM-dd', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 5)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:48
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period End Date to Re-Open', paramtr_rprstn_nm_in_query = '{:closing_dte}', default_value = '31-Dec-2017', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:48', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 4)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:48
UPDATE rpt.rpt_report_parameters SET parameter_name = 'As at Date:', paramtr_rprstn_nm_in_query = '{:as_at_dte}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:48', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 6)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:48
UPDATE rpt.rpt_report_parameters SET parameter_name = 'LIMIT', paramtr_rprstn_nm_in_query = '{:limit}', default_value = '500', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:48', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 7)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:48
UPDATE rpt.rpt_report_parameters SET parameter_name = 'OFFSET', paramtr_rprstn_nm_in_query = '{:offst}', default_value = '0', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:48', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 8)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:49
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:49', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 9)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:49
UPDATE rpt.rpt_report_parameters SET parameter_name = 'LIMIT', paramtr_rprstn_nm_in_query = '{:limit}', default_value = '500', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:49', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 10)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:49
UPDATE rpt.rpt_report_parameters SET parameter_name = 'OFFSET', paramtr_rprstn_nm_in_query = '{:offst}', default_value = '0', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:49', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 11)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:49
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:49', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 12)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:49
UPDATE rpt.rpt_report_parameters SET parameter_name = 'ID No: E.g. ''RH001'', ''RH002''', paramtr_rprstn_nm_in_query = '{:id_num}', default_value = 'c.local_id_no', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:49', lov_name_id = '43', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Active Persons', shd_be_dsplyd = '1' WHERE (parameter_id = 13)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:49
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Item Name', paramtr_rprstn_nm_in_query = '{:itmNm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:49', lov_name_id = '202', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Balance Items', shd_be_dsplyd = '1' WHERE (parameter_id = 14)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:49
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Local Classification:', paramtr_rprstn_nm_in_query = '{:clsfctn}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:49', lov_name_id = '70', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Item Classifications', shd_be_dsplyd = '1' WHERE (parameter_id = 15)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:50
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Name of Workplace', paramtr_rprstn_nm_in_query = '{:instu_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:10:50', lov_name_id = '169', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Customers and Suppliers', shd_be_dsplyd = '1' WHERE (parameter_id = 16)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:50
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:50', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 17)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:50
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Date(DD-Mmm-YYYY):', paramtr_rprstn_nm_in_query = '{:pay_dte}', default_value = '2020-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:50', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 18)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:50
UPDATE rpt.rpt_report_parameters SET parameter_name = '00. Left Pad Account Numbers:', paramtr_rprstn_nm_in_query = '{:p_pad_acnts}', default_value = 'Yes', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:50', lov_name_id = '195', param_data_type = 'TEXT', date_format = 'None', lov_name = 'YesNo', shd_be_dsplyd = '1' WHERE (parameter_id = 403)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:50
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:50', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 19)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:50
UPDATE rpt.rpt_report_parameters SET parameter_name = '03. Account Level:', paramtr_rprstn_nm_in_query = '{:p_max_acnt_level}', default_value = '100', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:50', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 404)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:50
UPDATE rpt.rpt_report_parameters SET parameter_name = '04. Segment 1 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt1_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:50', lov_name_id = '350', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Segment 1 Values', shd_be_dsplyd = '0' WHERE (parameter_id = 405)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:51
UPDATE rpt.rpt_report_parameters SET parameter_name = '05. Segment 2 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt2_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:51', lov_name_id = '351', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Segment 2 Values', shd_be_dsplyd = '1' WHERE (parameter_id = 406)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:51
UPDATE rpt.rpt_report_parameters SET parameter_name = '06. Segment 3 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt3_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:51', lov_name_id = '352', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Segment 3 Values', shd_be_dsplyd = '0' WHERE (parameter_id = 407)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:51
UPDATE rpt.rpt_report_parameters SET parameter_name = '07. Segment 4 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt4_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:51', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 408)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:51
UPDATE rpt.rpt_report_parameters SET parameter_name = '08. Segment 5 Values', paramtr_rprstn_nm_in_query = '{:p_sgmnt5_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:51', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 409)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:51
UPDATE rpt.rpt_report_parameters SET parameter_name = '09. Segment 6 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt6_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:51', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 410)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:51
UPDATE rpt.rpt_report_parameters SET parameter_name = '10. Segment 7 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt7_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:51', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 411)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:51
UPDATE rpt.rpt_report_parameters SET parameter_name = '11. Segment 8 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt8_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:51', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 412)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:52
UPDATE rpt.rpt_report_parameters SET parameter_name = '12. Segment 9 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt9_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:52', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 413)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:52
UPDATE rpt.rpt_report_parameters SET parameter_name = '13. Segment 10 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt10_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:52', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 414)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:52
UPDATE rpt.rpt_report_parameters SET parameter_name = 'As At Date:', paramtr_rprstn_nm_in_query = '{:as_at_dte}', default_value = '2015-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:52', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 612)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:52
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:52', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 20)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:52
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:52', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 21)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:52
UPDATE rpt.rpt_report_parameters SET parameter_name = 'ID Nos E.g. ''RH001'', ''RH002''', paramtr_rprstn_nm_in_query = '{:IDNos}', default_value = 'c.local_id_no', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:52', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 22)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:52
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Item Name', paramtr_rprstn_nm_in_query = '{:itemNm}', default_value = '%Dues%(Payment)%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:52', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 23)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:53
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:53', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 24)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:53
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:53', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 25)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:53
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:53', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 26)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:53
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Item Name:', paramtr_rprstn_nm_in_query = '{:itemNm}', default_value = '%(Payment)%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:53', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 27)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:53
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:53', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 28)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:53
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Preparer', paramtr_rprstn_nm_in_query = '{:rcvdBy}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:53', lov_name_id = '38', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Active Users', shd_be_dsplyd = '1' WHERE (parameter_id = 29)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:53
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:53', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 30)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:54
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:54', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 31)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:54
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Item Name:', paramtr_rprstn_nm_in_query = '{:itemNm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:54', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 32)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:54
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:54', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 33)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:54
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:54', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 34)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:54
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Type:', paramtr_rprstn_nm_in_query = '{:docTyp}', default_value = 'Sales Invoice', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:54', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 37)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:54
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:54', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 38)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:54
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:54', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 39)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:55
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:55', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 40)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:55
UPDATE rpt.rpt_report_parameters SET parameter_name = 'User Name:', paramtr_rprstn_nm_in_query = '{:userNm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:55', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 41)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:55
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2018-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:55', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 45)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:55
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:55', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 46)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:55
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:55', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 47)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:55
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2018-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:55', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 48)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:55
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:55', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 49)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:56
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:56', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 50)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:56
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Type:', paramtr_rprstn_nm_in_query = '{:docTyp}', default_value = 'Sales Invoice', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:56', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 51)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:56
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:56', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 52)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:56
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:56', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 53)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:56
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:56', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 54)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:56
UPDATE rpt.rpt_report_parameters SET parameter_name = 'User Name:', paramtr_rprstn_nm_in_query = '{:userNm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:56', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 55)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:56
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Account:', paramtr_rprstn_nm_in_query = '{:accntID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:56', lov_name_id = '36', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Transaction Accounts', shd_be_dsplyd = '1' WHERE (parameter_id = 56)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:57
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Account Name:', paramtr_rprstn_nm_in_query = '{:accntNm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:57', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 604)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:57
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2018-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:57', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 57)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:57
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:57', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 58)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:57
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:57', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 59)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:57
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Account:', paramtr_rprstn_nm_in_query = '{:accntID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:57', lov_name_id = '36', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Transaction Accounts', shd_be_dsplyd = '1' WHERE (parameter_id = 60)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:57
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Account Name', paramtr_rprstn_nm_in_query = '{:accntNm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:57', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 603)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:57
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2018-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:57', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 61)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:58
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:58', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 62)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:58
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:58', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 63)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:58
UPDATE rpt.rpt_report_parameters SET parameter_name = 'As at Date:', paramtr_rprstn_nm_in_query = '{:as_at_dte}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:58', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 64)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:58
UPDATE rpt.rpt_report_parameters SET parameter_name = 'LIMIT', paramtr_rprstn_nm_in_query = '{:limit}', default_value = '500', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:58', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 65)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:58
UPDATE rpt.rpt_report_parameters SET parameter_name = 'OFFSET', paramtr_rprstn_nm_in_query = '{:offst}', default_value = '0', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:58', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 66)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:58
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:58', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 67)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:58
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Category', paramtr_rprstn_nm_in_query = '{:catID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:58', lov_name_id = '184', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Categories', shd_be_dsplyd = '1' WHERE (parameter_id = 68)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:59
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Max Profit Margin(%)', paramtr_rprstn_nm_in_query = '{:mrgn2}', default_value = '10000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:59', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 69)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:59
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Max Qty', paramtr_rprstn_nm_in_query = '{:qty2}', default_value = '10000000000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:59', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 70)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:59
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Min Profit Margin(%)', paramtr_rprstn_nm_in_query = '{:mrgn1}', default_value = '-10000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:59', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 71)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:59
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Min Quantity', paramtr_rprstn_nm_in_query = '{:qty1}', default_value = '-10000000000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:59', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 72)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:59
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Store', paramtr_rprstn_nm_in_query = '{:strID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:59', lov_name_id = '185', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Stores', shd_be_dsplyd = '1' WHERE (parameter_id = 73)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:59
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Category ID', paramtr_rprstn_nm_in_query = '{:catID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:59', lov_name_id = '184', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Categories', shd_be_dsplyd = '1' WHERE (parameter_id = 74)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:10:59
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Store ID', paramtr_rprstn_nm_in_query = '{:strID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:10:59', lov_name_id = '185', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Stores', shd_be_dsplyd = '1' WHERE (parameter_id = 75)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:00
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Batch Name', paramtr_rprstn_nm_in_query = '{:glbatch_name}', default_value = '%Inventory%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:00', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 76)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:00
UPDATE rpt.rpt_report_parameters SET parameter_name = 'GL Interface Table Name', paramtr_rprstn_nm_in_query = '{:intrfc_tbl_name}', default_value = 'scm.scm_gl_interface', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:00', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 77)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:00
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Batch Name', paramtr_rprstn_nm_in_query = '{:glbatch_name}', default_value = '%Internal%Payment%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:00', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 78)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:00
UPDATE rpt.rpt_report_parameters SET parameter_name = 'GL Interface Table Name', paramtr_rprstn_nm_in_query = '{:intrfc_tbl_name}', default_value = 'pay.pay_gl_interface', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:00', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 79)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:00
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Database Name', paramtr_rprstn_nm_in_query = '{:dbase_name}', default_value = 'yilostar_live', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:00', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 80)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:00
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Backup Directory', paramtr_rprstn_nm_in_query = '{:backup_dir}', default_value = 'C:\Databases\yilostar_live\DB_Backups', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:00', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 81)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:00
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Database Name', paramtr_rprstn_nm_in_query = '{:dbase_name}', default_value = 'yilostar_live', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:00', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 82)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:01
UPDATE rpt.rpt_report_parameters SET parameter_name = 'PG Dump Directory', paramtr_rprstn_nm_in_query = '{:pg_dmp_dir}', default_value = 'C:\Program Files (x86)\pgAdmin 4\v3\runtime', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:01', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 83)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:01
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Type:', paramtr_rprstn_nm_in_query = '{:doctype}', default_value = '%Sales Invoice%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:01', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 84)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:01
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:01', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 85)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:01
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:01', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 86)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:01
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:01', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 87)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:01
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Max Expiry Days:', paramtr_rprstn_nm_in_query = '{:days2}', default_value = '65', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:01', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 88)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:01
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Min Expiry Days:', paramtr_rprstn_nm_in_query = '{:days1}', default_value = '-1000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:01', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 89)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:02
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Order By:', paramtr_rprstn_nm_in_query = '{:ordrBy}', default_value = '2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:02', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 90)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:02
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Run Name/Number:', paramtr_rprstn_nm_in_query = '{:pay_run_name}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:02', lov_name_id = '200', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Run Names/Numbers', shd_be_dsplyd = '1' WHERE (parameter_id = 91)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:02
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Order By:', paramtr_rprstn_nm_in_query = '{:ordrBy}', default_value = '2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:02', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 92)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:02
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Run Name/Number:', paramtr_rprstn_nm_in_query = '{:pay_run_name}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:02', lov_name_id = '200', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Run Names/Numbers', shd_be_dsplyd = '1' WHERE (parameter_id = 93)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:02
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:02', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 94)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:02
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:02', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 95)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:02
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:02', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 96)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:03
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Approval Status', paramtr_rprstn_nm_in_query = '{:apprvl_status}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:03', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 97)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:03
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Customer Name:', paramtr_rprstn_nm_in_query = '{:cstmr_nm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:03', lov_name_id = '166', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Customer Names for Reports', shd_be_dsplyd = '1' WHERE (parameter_id = 98)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:03
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:03', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 99)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:03
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:03', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 100)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:03
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:03', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 101)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:03
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Approval Status', paramtr_rprstn_nm_in_query = '{:apprvl_status}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:03', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 102)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:03
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:03', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 103)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:04
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:04', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 104)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:04
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Supplier Name:', paramtr_rprstn_nm_in_query = '{:sppplr_nm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:04', lov_name_id = '167', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Supplier Names for Reports', shd_be_dsplyd = '1' WHERE (parameter_id = 105)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:04
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:04', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 106)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:04
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = 'Registered Member', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:04', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 107)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:04
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = 'Registered Member', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:04', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 108)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:04
UPDATE rpt.rpt_report_parameters SET parameter_name = 'As at Date', paramtr_rprstn_nm_in_query = '{:asAtDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:04', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 109)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:04
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Divisions', paramtr_rprstn_nm_in_query = '{:dv_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:04', lov_name_id = '33', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Divisions/Groups', shd_be_dsplyd = '1' WHERE (parameter_id = 110)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:05
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:05', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 111)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:05
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Grade', paramtr_rprstn_nm_in_query = '{:grd_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:05', lov_name_id = '45', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Grades', shd_be_dsplyd = '1' WHERE (parameter_id = 112)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:05
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Job', paramtr_rprstn_nm_in_query = '{:jb_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:05', lov_name_id = '34', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Jobs', shd_be_dsplyd = '1' WHERE (parameter_id = 113)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:05
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Name of Institution', paramtr_rprstn_nm_in_query = '{:instu_nm}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:05', lov_name_id = '92', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Schools/Organisations/Institutions', shd_be_dsplyd = '1' WHERE (parameter_id = 114)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:05
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Name', paramtr_rprstn_nm_in_query = '{:pers_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:05', lov_name_id = '43', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Active Persons', shd_be_dsplyd = '1' WHERE (parameter_id = 115)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:05
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:05', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 116)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:05
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type Reason', paramtr_rprstn_nm_in_query = '{:pstntyp_rsn}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:05', lov_name_id = '25', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Type Change Reasons', shd_be_dsplyd = '1' WHERE (parameter_id = 117)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:06
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Position', paramtr_rprstn_nm_in_query = '{:pstn_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:06', lov_name_id = '46', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Positions', shd_be_dsplyd = '1' WHERE (parameter_id = 118)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:06
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = 'Registered Member', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:06', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 119)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:06
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = 'Registered Member', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:06', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 120)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:06
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:06', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 121)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:06
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organization', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:06', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 122)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:06
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-12-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:06', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 123)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:06
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:06', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 124)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:07
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organization', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:07', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 125)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:07
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:07', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 126)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:07
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Visitor Classification', paramtr_rprstn_nm_in_query = '{:visClas}', default_value = 'Visitor', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:07', lov_name_id = '327', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Visitor Classifications', shd_be_dsplyd = '1' WHERE (parameter_id = 127)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:07
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:07', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 128)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:07
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organization', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:07', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 129)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:07
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:07', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 130)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:07
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Visitor Classification', paramtr_rprstn_nm_in_query = '{:visClas}', default_value = 'Visitor', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:07', lov_name_id = '327', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Visitor Classifications', shd_be_dsplyd = '1' WHERE (parameter_id = 131)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:08
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Grade', paramtr_rprstn_nm_in_query = '{:grd_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:08', lov_name_id = '45', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Grades', shd_be_dsplyd = '1' WHERE (parameter_id = 132)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:08
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Divisions', paramtr_rprstn_nm_in_query = '{:dv_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:08', lov_name_id = '33', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Divisions/Groups', shd_be_dsplyd = '1' WHERE (parameter_id = 133)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:08
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2019-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:08', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 134)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:08
UPDATE rpt.rpt_report_parameters SET parameter_name = 'ID Nos E.g. ''RH001'', ''RH002''', paramtr_rprstn_nm_in_query = '{:IDNos}', default_value = 'c.local_id_no', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:08', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 135)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:08
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:08', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 136)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:08
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2019-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:08', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 137)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:08
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:08', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 138)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:09
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Item Name', paramtr_rprstn_nm_in_query = '{:itmNm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:09', lov_name_id = '202', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Balance Items', shd_be_dsplyd = '1' WHERE (parameter_id = 139)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:09
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:09', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 140)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:09
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Name', paramtr_rprstn_nm_in_query = '{:pers_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:09', lov_name_id = '43', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Active Persons', shd_be_dsplyd = '1' WHERE (parameter_id = 141)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:09
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:09', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 142)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:09
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Item Name', paramtr_rprstn_nm_in_query = '{:itmNm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:09', lov_name_id = '202', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Balance Items', shd_be_dsplyd = '1' WHERE (parameter_id = 143)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:09
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:09', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 144)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:09
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Partner to Delete', paramtr_rprstn_nm_in_query = '{:childpartner}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:09', lov_name_id = '169', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Customers and Suppliers', shd_be_dsplyd = '1' WHERE (parameter_id = 145)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:10
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Partner to Remain', paramtr_rprstn_nm_in_query = '{:prntpartner}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:10', lov_name_id = '169', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Customers and Suppliers', shd_be_dsplyd = '1' WHERE (parameter_id = 146)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:10
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:10', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 147)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:10
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organization', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:10', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 148)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:10
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-12-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:10', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 149)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:10
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Source Excel File', paramtr_rprstn_nm_in_query = '{:excl_file_name}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:10', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 150)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:10
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Attendance Register', paramtr_rprstn_nm_in_query = '{:rgstr_id}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:10', lov_name_id = '332', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Attendance Registers', shd_be_dsplyd = '1' WHERE (parameter_id = 151)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:11
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Attendance Register', paramtr_rprstn_nm_in_query = '{:rgstr_id}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:11', lov_name_id = '332', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Attendance Registers', shd_be_dsplyd = '1' WHERE (parameter_id = 152)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:11
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:11', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 153)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:11
UPDATE rpt.rpt_report_parameters SET parameter_name = 'ID Nos E.g. ''RH001'', ''RH002''', paramtr_rprstn_nm_in_query = '{:IDNos}', default_value = 'c.local_id_no', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:11', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 154)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:11
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Item Name', paramtr_rprstn_nm_in_query = '{:itemNm}', default_value = '%SSF%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:11', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 155)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:11
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:11', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 156)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:11
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:11', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 157)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:11
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:11', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 158)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:12
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:11', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 159)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:12
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:12', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 160)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:12
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Customer', paramtr_rprstn_nm_in_query = '{:cstmrID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:12', lov_name_id = '169', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Customers and Suppliers', shd_be_dsplyd = '1' WHERE (parameter_id = 161)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:12
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:12', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 162)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:12
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:12', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 163)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:12
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Name of Institution', paramtr_rprstn_nm_in_query = '{:instu_nm}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:12', lov_name_id = '92', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Schools/Organisations/Institutions', shd_be_dsplyd = '1' WHERE (parameter_id = 164)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:12
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = 'Registered Member', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:12', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 165)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:13
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Local ID No.', paramtr_rprstn_nm_in_query = '{:toPrsnLocID}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:13', lov_name_id = '43', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Active Persons', shd_be_dsplyd = '1' WHERE (parameter_id = 166)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:13
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Loc. ID. No.', paramtr_rprstn_nm_in_query = '{:toPrsnLocID}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:13', lov_name_id = '43', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Active Persons', shd_be_dsplyd = '1' WHERE (parameter_id = 167)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:13
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Run Name/Number', paramtr_rprstn_nm_in_query = '{:msPayNameNumber}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:13', lov_name_id = '200', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Run Names/Numbers', shd_be_dsplyd = '1' WHERE (parameter_id = 168)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:13
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Institution ID', paramtr_rprstn_nm_in_query = '{:instu_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:13', lov_name_id = '169', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Customers and Suppliers', shd_be_dsplyd = '1' WHERE (parameter_id = 169)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:13
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Item Name', paramtr_rprstn_nm_in_query = '{:itmNm}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:13', lov_name_id = '202', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Balance Items', shd_be_dsplyd = '1' WHERE (parameter_id = 170)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:13
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:13', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 171)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:13
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Grade', paramtr_rprstn_nm_in_query = '{:grd_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:13', lov_name_id = '45', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Grades', shd_be_dsplyd = '1' WHERE (parameter_id = 172)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:14
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Institution ID', paramtr_rprstn_nm_in_query = '{:instu_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:14', lov_name_id = '169', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Customers and Suppliers', shd_be_dsplyd = '1' WHERE (parameter_id = 173)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:14
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Item Name', paramtr_rprstn_nm_in_query = '{:itmNm}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:14', lov_name_id = '202', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Balance Items', shd_be_dsplyd = '1' WHERE (parameter_id = 174)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:14
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Name', paramtr_rprstn_nm_in_query = '{:pers_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:14', lov_name_id = '43', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Active Persons', shd_be_dsplyd = '1' WHERE (parameter_id = 175)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:14
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:14', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 176)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:14
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Division/Group', paramtr_rprstn_nm_in_query = '{:dv_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:14', lov_name_id = '33', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Divisions/Groups', shd_be_dsplyd = '1' WHERE (parameter_id = 177)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:14
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Grade', paramtr_rprstn_nm_in_query = '{:grd_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:14', lov_name_id = '45', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Grades', shd_be_dsplyd = '1' WHERE (parameter_id = 178)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:14
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Item Name', paramtr_rprstn_nm_in_query = '{:itmNm}', default_value = '%', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:14', lov_name_id = '202', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Balance Items', shd_be_dsplyd = '1' WHERE (parameter_id = 179)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:15
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Name', paramtr_rprstn_nm_in_query = '{:pers_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:15', lov_name_id = '43', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Active Persons', shd_be_dsplyd = '1' WHERE (parameter_id = 180)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:15
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:15', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 181)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:15
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:15', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 182)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:15
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Grade', paramtr_rprstn_nm_in_query = '{:grd_id}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:15', lov_name_id = '45', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Grades', shd_be_dsplyd = '1' WHERE (parameter_id = 183)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:15
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:15', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 184)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:15
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Customer Name:', paramtr_rprstn_nm_in_query = '{:cstmr_nm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:15', lov_name_id = '166', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Customer Names for Reports', shd_be_dsplyd = '1' WHERE (parameter_id = 185)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:15
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:15', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 186)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:16
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:16', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 187)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:16
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:16', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 188)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:16
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:16', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 189)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:16
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:16', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 190)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:16
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Supplier Name:', paramtr_rprstn_nm_in_query = '{:sppplr_nm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:16', lov_name_id = '167', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Supplier Names for Reports', shd_be_dsplyd = '1' WHERE (parameter_id = 191)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:16
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:16', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 192)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:16
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Type:', paramtr_rprstn_nm_in_query = '{:doctype}', default_value = '%Sales Invoice%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:16', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 193)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:17
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:17', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 194)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:17
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:17', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 195)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:17
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:17', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 196)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:17
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Asset ID', paramtr_rprstn_nm_in_query = '{:asset_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:17', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 197)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:17
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Type:', paramtr_rprstn_nm_in_query = '{:doctype}', default_value = '%Sales Invoice%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:17', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 198)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:17
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:17', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 199)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:17
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:17', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 200)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:18
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:18', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 201)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:18
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Asset ID', paramtr_rprstn_nm_in_query = '{:asset_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:18', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 202)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:18
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:18', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 203)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:18
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:18', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 204)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:18
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:18', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 205)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:18
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Transaction Type:', paramtr_rprstn_nm_in_query = '{:assetTrnsTyp}', default_value = '%6Maintain%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:18', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 206)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:18
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Asset ID', paramtr_rprstn_nm_in_query = '{:asset_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:18', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 207)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:19
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:19', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 208)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:19
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:19', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 209)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:19
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:19', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 210)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:19
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Transaction Type:', paramtr_rprstn_nm_in_query = '{:assetTrnsTyp}', default_value = '%6Maintain%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:19', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 211)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:19
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:19', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 212)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:19
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:19', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 213)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:19
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:19', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 214)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:20
UPDATE rpt.rpt_report_parameters SET parameter_name = 'INVOICE ID:', paramtr_rprstn_nm_in_query = '{:invoice_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:20', lov_name_id = '176', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Sales Documents', shd_be_dsplyd = '1' WHERE (parameter_id = 215)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:20
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:20', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 216)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:20
UPDATE rpt.rpt_report_parameters SET parameter_name = 'INVOICE ID:', paramtr_rprstn_nm_in_query = '{:invoice_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:20', lov_name_id = '176', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Sales Documents', shd_be_dsplyd = '1' WHERE (parameter_id = 217)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:20
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = 'INVOICE', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:20', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 218)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:20
UPDATE rpt.rpt_report_parameters SET parameter_name = 'INVOICE ID:', paramtr_rprstn_nm_in_query = '{:invoice_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:20', lov_name_id = '176', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Sales Documents', shd_be_dsplyd = '1' WHERE (parameter_id = 219)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:20
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:20', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 220)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:20
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:20', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 221)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:21
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Supplier Name:', paramtr_rprstn_nm_in_query = '{:sppplr_nm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:21', lov_name_id = '167', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Supplier Names for Reports', shd_be_dsplyd = '1' WHERE (parameter_id = 222)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:21
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:21', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 223)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:21
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Customer Name:', paramtr_rprstn_nm_in_query = '{:cstmr_nm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:21', lov_name_id = '166', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Customer Names for Reports', shd_be_dsplyd = '1' WHERE (parameter_id = 224)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:21
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:21', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 225)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:21
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:21', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 226)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:21
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:21', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 227)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:22
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = 'Pay Slip', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:22', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 228)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:22
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2017-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:22', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 229)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:22
UPDATE rpt.rpt_report_parameters SET parameter_name = 'ID Nos E.g. ''RH001'', ''RH002''', paramtr_rprstn_nm_in_query = '{:IDNos}', default_value = 'c.local_id_no', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:22', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 230)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:22
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:22', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 231)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:22
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2017-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:22', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 232)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:22
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:22', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 233)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:22
UPDATE rpt.rpt_report_parameters SET parameter_name = 'INVOICE ID:', paramtr_rprstn_nm_in_query = '{:invoice_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:22', lov_name_id = '178', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Receivables Documents', shd_be_dsplyd = '1' WHERE (parameter_id = 234)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:23
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:23', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 235)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:23
UPDATE rpt.rpt_report_parameters SET parameter_name = 'INVOICE ID:', paramtr_rprstn_nm_in_query = '{:invoice_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:23', lov_name_id = '179', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Payables Documents', shd_be_dsplyd = '1' WHERE (parameter_id = 236)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:23
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:23', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 237)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:23
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Supplier Name:', paramtr_rprstn_nm_in_query = '{:sppplr_nm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:23', lov_name_id = '167', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Supplier Names for Reports', shd_be_dsplyd = '1' WHERE (parameter_id = 238)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:23
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:23', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 239)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:23
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:23', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 240)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:23
UPDATE rpt.rpt_report_parameters SET parameter_name = 'INVOICE ID:', paramtr_rprstn_nm_in_query = '{:invoice_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:23', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Petty Cash Documents', shd_be_dsplyd = '1' WHERE (parameter_id = 241)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:24
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:24', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 242)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:24
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Supplier Name:', paramtr_rprstn_nm_in_query = '{:sppplr_nm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:24', lov_name_id = '167', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Supplier Names for Reports', shd_be_dsplyd = '1' WHERE (parameter_id = 243)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:24
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:24', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 244)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:24
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:24', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 245)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:24
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Supplier Name:', paramtr_rprstn_nm_in_query = '{:sppplr_nm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:24', lov_name_id = '167', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Supplier Names for Reports', shd_be_dsplyd = '1' WHERE (parameter_id = 246)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:24
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:24', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 247)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:24
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:strtDte}', default_value = '01-Jan-2017 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:24', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 248)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:25
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Supplier Name:', paramtr_rprstn_nm_in_query = '{:sppplr_nm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:25', lov_name_id = '167', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Supplier Names for Reports', shd_be_dsplyd = '1' WHERE (parameter_id = 249)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:25
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:endDte}', default_value = '31-Dec-4000 23:59:59', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:25', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 250)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:25
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Batch ID:', paramtr_rprstn_nm_in_query = '{:msg_batch_id}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:25', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 251)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:25
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Batch Name', paramtr_rprstn_nm_in_query = '{:glbatch_name}', default_value = '%Banking%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:25', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 252)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:25
UPDATE rpt.rpt_report_parameters SET parameter_name = 'GL Interface Table Name', paramtr_rprstn_nm_in_query = '{:intrfc_tbl_name}', default_value = 'mcf.mcf_gl_interface', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:25', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 253)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:25
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Batch Name', paramtr_rprstn_nm_in_query = '{:glbatch_name}', default_value = '%Vault%Management%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:25', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 254)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:25
UPDATE rpt.rpt_report_parameters SET parameter_name = 'GL Interface Table Name', paramtr_rprstn_nm_in_query = '{:intrfc_tbl_name}', default_value = 'vms.vms_gl_interface', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:25', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 255)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:26
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Process Type', paramtr_rprstn_nm_in_query = '{:prcsType}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:26', lov_name_id = '302', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF End of Day Process Types', shd_be_dsplyd = '1' WHERE (parameter_id = 256)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:26
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Run Mode', paramtr_rprstn_nm_in_query = '{:runMode}', default_value = 'Draft', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:26', lov_name_id = '301', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF End of Day Run Modes', shd_be_dsplyd = '1' WHERE (parameter_id = 257)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:26
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:26', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 258)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:26
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Transaction ID:', paramtr_rprstn_nm_in_query = '{:trns_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:26', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 260)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:26
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:26', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 261)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:26
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Transaction ID:', paramtr_rprstn_nm_in_query = '{:trns_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:26', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 262)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:26
UPDATE rpt.rpt_report_parameters SET parameter_name = 'DB Name:', paramtr_rprstn_nm_in_query = '{:dbase_name}', default_value = 'yilostar_live', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:26', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 398)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:27
UPDATE rpt.rpt_report_parameters SET parameter_name = 'No. of Days to Keep:', paramtr_rprstn_nm_in_query = '{:p_days_to_keep}', default_value = '15', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:27', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 399)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:27
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Name of Institution', paramtr_rprstn_nm_in_query = '{:instu_nm}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:27', lov_name_id = '92', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Schools/Organisations/Institutions', shd_be_dsplyd = '1' WHERE (parameter_id = 263)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:27
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:27', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 264)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:27
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Transaction ID:', paramtr_rprstn_nm_in_query = '{:trns_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:27', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 265)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:27
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Cage ID:', paramtr_rprstn_nm_in_query = '{:P_CAGE_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:27', lov_name_id = '309', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'VMS Vault Cages', shd_be_dsplyd = '1' WHERE (parameter_id = 266)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:27
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:27', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 267)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:27
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Item ID:', paramtr_rprstn_nm_in_query = '{:P_ITM_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:27', lov_name_id = '310', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Vault Item List', shd_be_dsplyd = '1' WHERE (parameter_id = 268)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:28
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:28', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 269)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:28
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:28', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 270)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:28
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Transaction ID:', paramtr_rprstn_nm_in_query = '{:trns_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:28', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 271)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:28
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Database Name', paramtr_rprstn_nm_in_query = '{:dbase_name}', default_value = 'ys_live_new', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:28', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 272)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:28
UPDATE rpt.rpt_report_parameters SET parameter_name = 'DB FTP DIR:', paramtr_rprstn_nm_in_query = '{:db_ftp_dir}', default_value = 'yslive', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:28', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 273)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:28
UPDATE rpt.rpt_report_parameters SET parameter_name = 'FTP PARENT DIR:', paramtr_rprstn_nm_in_query = '{:db_ftp_prnt}', default_value = '/opt/apache', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:28', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 274)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:29
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Order/Transfer ID:', paramtr_rprstn_nm_in_query = '{:ordr_trnsfr_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:29', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 275)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:29
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person:', paramtr_rprstn_nm_in_query = '{:p_for_prsn_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:29', lov_name_id = '211', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Person IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 276)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:29
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Cage ID:', paramtr_rprstn_nm_in_query = '{:P_CAGE_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:29', lov_name_id = '311', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All VMS Vault Cages', shd_be_dsplyd = '1' WHERE (parameter_id = 277)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:29
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:29', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 278)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:29
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:29', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 279)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:29
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:29', lov_name_id = '252', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 282)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:29
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:29', lov_name_id = '252', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 283)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:30
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Type', paramtr_rprstn_nm_in_query = '{:crdtType}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:30', lov_name_id = '333', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF Credit Types', shd_be_dsplyd = '1' WHERE (parameter_id = 284)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:30
UPDATE rpt.rpt_report_parameters SET parameter_name = 'End Date:', paramtr_rprstn_nm_in_query = '{:pEndDte}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:30', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 540)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:30
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:pStartDte}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:30', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 285)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:30
UPDATE rpt.rpt_report_parameters SET parameter_name = '0. Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:30', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 286)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:30
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Credit Type', paramtr_rprstn_nm_in_query = '{:crdtType}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:30', lov_name_id = '333', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF Credit Types', shd_be_dsplyd = '1' WHERE (parameter_id = 287)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:30
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. Approval Status', paramtr_rprstn_nm_in_query = '{:apprvlStatus}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:30', lov_name_id = '334', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF Approval Statuses', shd_be_dsplyd = '1' WHERE (parameter_id = 288)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:30
UPDATE rpt.rpt_report_parameters SET parameter_name = '3. Start Date', paramtr_rprstn_nm_in_query = '{:pStartDte}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:30', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 289)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:31
UPDATE rpt.rpt_report_parameters SET parameter_name = '4. End Date', paramtr_rprstn_nm_in_query = '{:pEndDte}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:31', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 290)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:31
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:31', lov_name_id = '252', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 291)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:31
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. As At Date', paramtr_rprstn_nm_in_query = '{:pAsAtDte}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:31', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 292)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:31
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:31', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 301)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:31
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Loan Account Number', paramtr_rprstn_nm_in_query = '{:dsbmntDetID}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:31', lov_name_id = '316', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF Disbursed Loans', shd_be_dsplyd = '1' WHERE (parameter_id = 293)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:31
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Cage ID:', paramtr_rprstn_nm_in_query = '{:P_CAGE_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:31', lov_name_id = '311', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All VMS Vault Cages', shd_be_dsplyd = '1' WHERE (parameter_id = 294)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:32
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:32', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 295)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:32
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:32', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 296)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:32
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Batch ID:', paramtr_rprstn_nm_in_query = '{:batch_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:32', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 297)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:32
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Batch ID:', paramtr_rprstn_nm_in_query = '{:P_BATCH_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:32', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 298)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:32
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:32', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 302)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:32
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Loan Account Number', paramtr_rprstn_nm_in_query = '{:dsbmntDetID}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:32', lov_name_id = '316', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Disbursed Loans', shd_be_dsplyd = '1' WHERE (parameter_id = 303)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:32
UPDATE rpt.rpt_report_parameters SET parameter_name = 'COB date', paramtr_rprstn_nm_in_query = '{:p_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:32', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 304)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:33
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Account No.:', paramtr_rprstn_nm_in_query = '{:p_account_no}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:33', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 306)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:33
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Customer No.:', paramtr_rprstn_nm_in_query = '{:p_customer_no}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:33', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 305)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:33
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Database Name', paramtr_rprstn_nm_in_query = '{:dbase_name}', default_value = 'yilostar_live', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:33', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 307)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:33
UPDATE rpt.rpt_report_parameters SET parameter_name = 'DB FTP DIR:', paramtr_rprstn_nm_in_query = '{:db_ftp_dir}', default_value = 'yslive', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:33', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 308)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:33
UPDATE rpt.rpt_report_parameters SET parameter_name = 'FTP PARENT DIR:', paramtr_rprstn_nm_in_query = '{:db_ftp_prnt}', default_value = '/home/apache', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:33', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 309)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:33
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch ID:', paramtr_rprstn_nm_in_query = '{:P_BRNCH_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:33', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 310)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:33
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:33', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 311)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:34
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:34', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 312)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:34
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Transaction Type:', paramtr_rprstn_nm_in_query = '{:P_TRANS_TYPE}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:34', lov_name_id = '306', param_data_type = 'TEXT', date_format = 'None', lov_name = 'VMS Transaction Types', shd_be_dsplyd = '1' WHERE (parameter_id = 391)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:34
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Account ID:', paramtr_rprstn_nm_in_query = '{:P_ACCT_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:34', lov_name_id = '299', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF All Customer Accounts', shd_be_dsplyd = '1' WHERE (parameter_id = 313)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:34
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Date From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-1990', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:34', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 314)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:34
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Date To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:34', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 315)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:34
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:34', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 316)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:34
UPDATE rpt.rpt_report_parameters SET parameter_name = 'As At Date;', paramtr_rprstn_nm_in_query = '{:pAsAtDte}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:34', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 318)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:35
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch:', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:35', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 320)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:35
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Currency', paramtr_rprstn_nm_in_query = '{:pCurrency}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:35', lov_name_id = '234', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Bank Currencies (Select List)', shd_be_dsplyd = '1' WHERE (parameter_id = 319)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:35
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:35', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 317)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:35
UPDATE rpt.rpt_report_parameters SET parameter_name = '1.Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:35', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 322)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:35
UPDATE rpt.rpt_report_parameters SET parameter_name = '2.Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:35', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 321)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:35
UPDATE rpt.rpt_report_parameters SET parameter_name = '3.Start Date', paramtr_rprstn_nm_in_query = '{:p_start_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:35', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 568)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:36
UPDATE rpt.rpt_report_parameters SET parameter_name = '4. End Date', paramtr_rprstn_nm_in_query = '{:p_asat_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:35', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 569)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:36
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:36', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 323)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:36
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:36', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 325)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:36
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Payment Date', paramtr_rprstn_nm_in_query = '{:pAsAtDte}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:36', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 324)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:36
UPDATE rpt.rpt_report_parameters SET parameter_name = '1.Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:36', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 327)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:36
UPDATE rpt.rpt_report_parameters SET parameter_name = '2.Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:36', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 326)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:36
UPDATE rpt.rpt_report_parameters SET parameter_name = '3.Start Date', paramtr_rprstn_nm_in_query = '{:p_start_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:36', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 566)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:37
UPDATE rpt.rpt_report_parameters SET parameter_name = '4.End Date', paramtr_rprstn_nm_in_query = '{:p_end_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:37', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 567)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:37
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Account ID:', paramtr_rprstn_nm_in_query = '{:P_ACCT_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:37', lov_name_id = '299', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF All Customer Accounts', shd_be_dsplyd = '1' WHERE (parameter_id = 328)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:37
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Date From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-1990', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:37', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 329)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:37
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Date To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:37', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 330)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:37
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:37', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 331)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:37
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. Product Name', paramtr_rprstn_nm_in_query = '{:P_PRODUCT}', default_value = '%', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:37', lov_name_id = '360', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Bank Product Types (for Reports)', shd_be_dsplyd = '1' WHERE (parameter_id = 576)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:37
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:P_BRANCH_ID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:37', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 332)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:38
UPDATE rpt.rpt_report_parameters SET parameter_name = 'No. of Accounts:', paramtr_rprstn_nm_in_query = '{:P_LIMIT_BY}', default_value = '20', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:38', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 333)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:38
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:P_BRANCH_ID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:38', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 334)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:38
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '2018-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:38', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 336)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:38
UPDATE rpt.rpt_report_parameters SET parameter_name = 'No. of Accounts:', paramtr_rprstn_nm_in_query = '{:P_LIMIT_BY}', default_value = '20', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:38', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 335)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:38
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '4000-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:38', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 337)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:38
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:P_BRANCH_ID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:38', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 338)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:38
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '2018-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:38', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 339)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:39
UPDATE rpt.rpt_report_parameters SET parameter_name = 'No. of Accounts:', paramtr_rprstn_nm_in_query = '{:P_LIMIT_BY}', default_value = '20', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:39', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 340)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:39
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '4000-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:39', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 341)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:39
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:P_BRANCH_ID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:39', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 342)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:39
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '2018-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:39', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 343)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:39
UPDATE rpt.rpt_report_parameters SET parameter_name = 'No. of Accounts:', paramtr_rprstn_nm_in_query = '{:P_LIMIT_BY}', default_value = '20', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:39', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 344)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:39
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '4000-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:39', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 345)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:40
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:P_BRNCH_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:40', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 346)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:40
UPDATE rpt.rpt_report_parameters SET parameter_name = 'No. of Accounts:', paramtr_rprstn_nm_in_query = '{:P_LIMIT_BY}', default_value = '20', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:40', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 347)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:40
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:P_BRANCH_ID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:40', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 596)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:40
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Sales Executive:', paramtr_rprstn_nm_in_query = '{:P_PERSON_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:40', lov_name_id = '211', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Person IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 349)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:40
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. Branch ID:', paramtr_rprstn_nm_in_query = '{:P_BRNCH_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:40', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 350)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:40
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:40', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 351)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:40
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:40', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 352)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:41
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Relations Officer:', paramtr_rprstn_nm_in_query = '{:P_PERSON_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:41', lov_name_id = '211', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Person IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 597)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:41
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. Branch ID:', paramtr_rprstn_nm_in_query = '{:P_BRNCH_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:41', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 598)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:41
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:41', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 599)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:41
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:41', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 600)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:41
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Relations Officer:', paramtr_rprstn_nm_in_query = '{:P_PERSON_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:41', lov_name_id = '211', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Person IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 357)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:41
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. Branch ID:', paramtr_rprstn_nm_in_query = '{:P_BRNCH_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:41', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 358)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:41
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:41', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 359)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:42
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:42', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 360)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:42
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Branch ID:', paramtr_rprstn_nm_in_query = '{:P_BRNCH_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:42', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 362)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:42
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:42', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 363)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:42
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:42', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 364)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:42
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Sales Executive:', paramtr_rprstn_nm_in_query = '{:P_PERSON_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:42', lov_name_id = '211', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Person IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 365)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:42
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. Branch ID:', paramtr_rprstn_nm_in_query = '{:P_BRNCH_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:42', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 366)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:43
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:43', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 367)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:43
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:43', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 368)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:43
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Branch ID:', paramtr_rprstn_nm_in_query = '{:P_BRNCH_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:43', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 370)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:43
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. Product Name', paramtr_rprstn_nm_in_query = '{:P_PRODUCT}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:43', lov_name_id = '360', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Bank Product Types (for Reports)', shd_be_dsplyd = '1' WHERE (parameter_id = 547)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:43
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:43', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 371)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:43
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:43', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 372)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:43
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:43', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 374)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:44
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Officer', paramtr_rprstn_nm_in_query = '{:rltnshpOffcrID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:44', lov_name_id = '318', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Credit Officers', shd_be_dsplyd = '1' WHERE (parameter_id = 377)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:44
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Disbursement Period From:', paramtr_rprstn_nm_in_query = '{:pStartDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:44', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 375)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:44
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Disbursement Period To:', paramtr_rprstn_nm_in_query = '{:pEndDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:44', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 376)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:44
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:44', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 373)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:44
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:44', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 378)
-------------------------Next Msg:-------------------------

RHOMICOM ERROR: [8] Trying to get property 'percent' of non-object<br />
 This Rhomicom Error happened on line 424 in file /usr/share/nginx/html/app_code/rpt/rpts_rnnr.php
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:44
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Disbursement Period From:', paramtr_rprstn_nm_in_query = '{:pStartDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:44', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 380)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:44
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Disbursement Period To:', paramtr_rprstn_nm_in_query = '{:pEndDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:44', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 381)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:45
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:45', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 382)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:45
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Loan Product', paramtr_rprstn_nm_in_query = '{:lnPrdtID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:45', lov_name_id = '249', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Loan Products', shd_be_dsplyd = '1' WHERE (parameter_id = 379)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:45
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:45', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 383)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:45
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Officer', paramtr_rprstn_nm_in_query = '{:rltnshpOffcrID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:45', lov_name_id = '318', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Credit Officers', shd_be_dsplyd = '1' WHERE (parameter_id = 388)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:45
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Type', paramtr_rprstn_nm_in_query = '{:crdtType}', default_value = '%', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:45', lov_name_id = '333', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF Credit Types', shd_be_dsplyd = '1' WHERE (parameter_id = 389)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:45
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Disbursement Period From:', paramtr_rprstn_nm_in_query = '{:pStartDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:45', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 384)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:45
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Disbursement Period To:', paramtr_rprstn_nm_in_query = '{:pEndDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:45', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 385)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:46
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:46', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 386)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:46
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Loan Product', paramtr_rprstn_nm_in_query = '{:lnPrdtID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:46', lov_name_id = '249', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Loan Products', shd_be_dsplyd = '1' WHERE (parameter_id = 387)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:46
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:46', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 390)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:46
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Cage ID:', paramtr_rprstn_nm_in_query = '{:P_CAGE_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:46', lov_name_id = '309', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'VMS Vault Cages', shd_be_dsplyd = '1' WHERE (parameter_id = 392)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:46
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:46', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 393)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:46
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:46', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 395)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:47
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Account No.:', paramtr_rprstn_nm_in_query = '{:p_account_no}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:47', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 396)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:47
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Customer No.:', paramtr_rprstn_nm_in_query = '{:p_customer_no}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:47', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 397)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:47
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Loan Account Number', paramtr_rprstn_nm_in_query = '{:account_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:47', lov_name_id = '259', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF All Bank Loan Accounts', shd_be_dsplyd = '1' WHERE (parameter_id = 400)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:47
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Number of Deductions', paramtr_rprstn_nm_in_query = '{:no_of_recs}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:47', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 401)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:47
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Reversal Reason', paramtr_rprstn_nm_in_query = '{:rvsl_reason}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:47', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 402)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:47
UPDATE rpt.rpt_report_parameters SET parameter_name = '00. Left Pad Account Numbers:', paramtr_rprstn_nm_in_query = '{:p_pad_acnts}', default_value = 'Yes', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:47', lov_name_id = '195', param_data_type = 'TEXT', date_format = 'None', lov_name = 'YesNo', shd_be_dsplyd = '1' WHERE (parameter_id = 415)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:47
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. From Date:', paramtr_rprstn_nm_in_query = '{:p_from_date}', default_value = '2018-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:47', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 416)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:48
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. To Date', paramtr_rprstn_nm_in_query = '{:p_to_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:48', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 429)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:48
UPDATE rpt.rpt_report_parameters SET parameter_name = '03. Account Level:', paramtr_rprstn_nm_in_query = '{:p_max_acnt_level}', default_value = '100', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:48', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 417)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:48
UPDATE rpt.rpt_report_parameters SET parameter_name = '04. Segment 1 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt1_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:48', lov_name_id = '350', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Segment 1 Values', shd_be_dsplyd = '0' WHERE (parameter_id = 418)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:48
UPDATE rpt.rpt_report_parameters SET parameter_name = '05. Segment 2 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt2_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:48', lov_name_id = '351', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Segment 2 Values', shd_be_dsplyd = '1' WHERE (parameter_id = 419)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:48
UPDATE rpt.rpt_report_parameters SET parameter_name = '06. Segment 3 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt3_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:48', lov_name_id = '352', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Segment 3 Values', shd_be_dsplyd = '0' WHERE (parameter_id = 420)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:48
UPDATE rpt.rpt_report_parameters SET parameter_name = '07. Segment 4 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt4_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:48', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 421)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:49
UPDATE rpt.rpt_report_parameters SET parameter_name = '08. Segment 5 Values', paramtr_rprstn_nm_in_query = '{:p_sgmnt5_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:49', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 422)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:49
UPDATE rpt.rpt_report_parameters SET parameter_name = '09. Segment 6 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt6_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:49', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 423)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:49
UPDATE rpt.rpt_report_parameters SET parameter_name = '10. Segment 7 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt7_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:49', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 424)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:49
UPDATE rpt.rpt_report_parameters SET parameter_name = '11. Segment 8 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt8_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:49', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 425)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:49
UPDATE rpt.rpt_report_parameters SET parameter_name = '12. Segment 9 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt9_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:49', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 426)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:49
UPDATE rpt.rpt_report_parameters SET parameter_name = '13. Segment 10 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt10_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:49', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 427)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:50
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2015-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:50', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 608)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:50
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:50', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 609)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:50
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:50', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 428)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:50
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2015-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:50', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 610)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:50
UPDATE rpt.rpt_report_parameters SET parameter_name = '00. Left Pad Account Numbers:', paramtr_rprstn_nm_in_query = '{:p_pad_acnts}', default_value = 'Yes', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:50', lov_name_id = '195', param_data_type = 'TEXT', date_format = 'None', lov_name = 'YesNo', shd_be_dsplyd = '1' WHERE (parameter_id = 430)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:50
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:50', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 431)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:51
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. Use Net Positions:', paramtr_rprstn_nm_in_query = '{:p_use_net_pos}', default_value = 'Yes', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:51', lov_name_id = '195', param_data_type = 'TEXT', date_format = 'None', lov_name = 'YesNo', shd_be_dsplyd = '1' WHERE (parameter_id = 444)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:51
UPDATE rpt.rpt_report_parameters SET parameter_name = '03. Account Level:', paramtr_rprstn_nm_in_query = '{:p_max_acnt_level}', default_value = '100', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:51', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 432)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:51
UPDATE rpt.rpt_report_parameters SET parameter_name = '04. Segment 1 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt1_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:51', lov_name_id = '350', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Segment 1 Values', shd_be_dsplyd = '0' WHERE (parameter_id = 433)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:51
UPDATE rpt.rpt_report_parameters SET parameter_name = '05. Segment 2 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt2_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:51', lov_name_id = '351', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Segment 2 Values', shd_be_dsplyd = '1' WHERE (parameter_id = 434)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:51
UPDATE rpt.rpt_report_parameters SET parameter_name = '06. Segment 3 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt3_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:51', lov_name_id = '352', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Segment 3 Values', shd_be_dsplyd = '0' WHERE (parameter_id = 435)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:51
UPDATE rpt.rpt_report_parameters SET parameter_name = '07. Segment 4 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt4_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:51', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 436)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:52
UPDATE rpt.rpt_report_parameters SET parameter_name = '08. Segment 5 Values', paramtr_rprstn_nm_in_query = '{:p_sgmnt5_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:52', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 437)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:52
UPDATE rpt.rpt_report_parameters SET parameter_name = '09. Segment 6 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt6_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:52', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 438)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:52
UPDATE rpt.rpt_report_parameters SET parameter_name = '10. Segment 7 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt7_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:52', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 439)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:52
UPDATE rpt.rpt_report_parameters SET parameter_name = '11. Segment 8 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt8_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:52', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 440)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:52
UPDATE rpt.rpt_report_parameters SET parameter_name = '12. Segment 9 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt9_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:52', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 441)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:52
UPDATE rpt.rpt_report_parameters SET parameter_name = '13. Segment 10 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt10_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:52', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 442)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:53
UPDATE rpt.rpt_report_parameters SET parameter_name = 'As at Date:', paramtr_rprstn_nm_in_query = '{:as_at_dte}', default_value = '2015-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:53', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 611)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:53
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:53', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 443)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:53
UPDATE rpt.rpt_report_parameters SET parameter_name = '00. Left Pad Account Numbers:', paramtr_rprstn_nm_in_query = '{:p_pad_acnts}', default_value = 'Yes', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:53', lov_name_id = '195', param_data_type = 'TEXT', date_format = 'None', lov_name = 'YesNo', shd_be_dsplyd = '1' WHERE (parameter_id = 445)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:53
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:53', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 446)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:53
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. Use Net Positions:', paramtr_rprstn_nm_in_query = '{:p_use_net_pos}', default_value = 'Yes', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:53', lov_name_id = '195', param_data_type = 'TEXT', date_format = 'None', lov_name = 'YesNo', shd_be_dsplyd = '1' WHERE (parameter_id = 447)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:53
UPDATE rpt.rpt_report_parameters SET parameter_name = '03. Account Level:', paramtr_rprstn_nm_in_query = '{:p_max_acnt_level}', default_value = '100', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:53', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 448)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:54
UPDATE rpt.rpt_report_parameters SET parameter_name = '04. Segment 1 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt1_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:54', lov_name_id = '350', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Segment 1 Values', shd_be_dsplyd = '0' WHERE (parameter_id = 449)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:54
UPDATE rpt.rpt_report_parameters SET parameter_name = '05. Segment 2 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt2_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:54', lov_name_id = '351', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Segment 2 Values', shd_be_dsplyd = '1' WHERE (parameter_id = 450)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:54
UPDATE rpt.rpt_report_parameters SET parameter_name = '06. Segment 3 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt3_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:54', lov_name_id = '352', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Segment 3 Values', shd_be_dsplyd = '0' WHERE (parameter_id = 451)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:54
UPDATE rpt.rpt_report_parameters SET parameter_name = '07. Segment 4 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt4_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:54', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 452)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:54
UPDATE rpt.rpt_report_parameters SET parameter_name = '08. Segment 5 Values', paramtr_rprstn_nm_in_query = '{:p_sgmnt5_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:54', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 453)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:54
UPDATE rpt.rpt_report_parameters SET parameter_name = '09. Segment 6 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt6_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:54', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 454)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:55
UPDATE rpt.rpt_report_parameters SET parameter_name = '10. Segment 7 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt7_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:55', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 455)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:55
UPDATE rpt.rpt_report_parameters SET parameter_name = '11. Segment 8 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt8_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:55', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 456)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:55
UPDATE rpt.rpt_report_parameters SET parameter_name = '12. Segment 9 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt9_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:55', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 457)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:55
UPDATE rpt.rpt_report_parameters SET parameter_name = '13. Segment 10 Value:', paramtr_rprstn_nm_in_query = '{:p_sgmnt10_val}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:55', lov_name_id = '353', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Segment Value IDs', shd_be_dsplyd = '0' WHERE (parameter_id = 458)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:55
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:55', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 459)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:55
UPDATE rpt.rpt_report_parameters SET parameter_name = '00. Account ID:', paramtr_rprstn_nm_in_query = '{:p_accnt_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:55', lov_name_id = '36', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Transaction Accounts', shd_be_dsplyd = '1' WHERE (parameter_id = 460)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:56
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. From Date:', paramtr_rprstn_nm_in_query = '{:p_from_date}', default_value = '2018-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:56', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 461)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:56
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. To Date', paramtr_rprstn_nm_in_query = '{:p_to_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:56', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 462)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:56
UPDATE rpt.rpt_report_parameters SET parameter_name = '03. Show Interface Trns.:', paramtr_rprstn_nm_in_query = '{:p_shw_intrfc_trns}', default_value = 'Yes', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:56', lov_name_id = '195', param_data_type = 'TEXT', date_format = 'None', lov_name = 'YesNo', shd_be_dsplyd = '1' WHERE (parameter_id = 463)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:56
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:56', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 474)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:56
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2018-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:56', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 475)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:56
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:56', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 476)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:57
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:57', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 477)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:57
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Age Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:57', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 520)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:57
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period End Date:', paramtr_rprstn_nm_in_query = '{:p_end_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:57', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 539)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:57
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period Start Date:', paramtr_rprstn_nm_in_query = '{:p_start_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:57', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 538)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:57
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:57', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 522)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:57
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:57', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 478)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:58
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:11:58', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 530)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:58
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:58', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 479)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:58
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. MFI Category:', paramtr_rprstn_nm_in_query = '{:p_mfi_ctgry}', default_value = 'Tier 2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:58', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '0' WHERE (parameter_id = 480)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:58
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:58', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 481)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:58
UPDATE rpt.rpt_report_parameters SET parameter_name = '01 As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:58', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 482)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:58
UPDATE rpt.rpt_report_parameters SET parameter_name = 'No. of Accounts:', paramtr_rprstn_nm_in_query = '{:P_LIMIT_BY}', default_value = '10', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:58', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 483)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:59
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:59', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 484)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:59
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:59', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 485)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:59
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:59', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 486)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:59
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. MFI Category:', paramtr_rprstn_nm_in_query = '{:p_mfi_ctgry}', default_value = 'Tier 2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:59', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '0' WHERE (parameter_id = 487)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:59
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:59', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 488)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:11:59
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:11:59', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 489)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:00
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:00', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 490)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:00
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:00', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 491)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:00
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. MFI Category:', paramtr_rprstn_nm_in_query = '{:p_mfi_ctgry}', default_value = 'Tier 2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:00', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '0' WHERE (parameter_id = 492)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:00
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:00', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 493)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:00
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:00', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 494)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:01
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. MFI Category:', paramtr_rprstn_nm_in_query = '{:p_mfi_ctgry}', default_value = 'Tier 2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:01', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '0' WHERE (parameter_id = 495)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:01
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:01', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 496)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:01
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:01', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 497)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:01
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. MFI Category:', paramtr_rprstn_nm_in_query = '{:p_mfi_ctgry}', default_value = 'Tier 2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:01', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '0' WHERE (parameter_id = 498)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:01
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:01', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 499)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:01
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:01', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 500)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:02
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. MFI Category:', paramtr_rprstn_nm_in_query = '{:p_mfi_ctgry}', default_value = 'Tier 2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:02', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '0' WHERE (parameter_id = 501)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:02
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:02', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 502)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:02
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:02', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 503)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:02
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. MFI Category:', paramtr_rprstn_nm_in_query = '{:p_mfi_ctgry}', default_value = 'Tier 2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:02', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '0' WHERE (parameter_id = 504)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:02
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:02', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 505)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:02
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:02', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 536)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:03
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:03', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 535)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:03
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:03', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 521)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:03
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:03', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 506)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:03
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. MFI Category:', paramtr_rprstn_nm_in_query = '{:p_mfi_ctgry}', default_value = 'Tier 2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:03', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '0' WHERE (parameter_id = 507)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:03
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:03', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 508)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:03
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:03', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 509)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:04
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. MFI Category:', paramtr_rprstn_nm_in_query = '{:p_mfi_ctgry}', default_value = 'Tier 2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:04', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '0' WHERE (parameter_id = 510)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:04
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:04', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 511)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:04
UPDATE rpt.rpt_report_parameters SET parameter_name = '01. As At Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '2018-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:04', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 512)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:04
UPDATE rpt.rpt_report_parameters SET parameter_name = '02. MFI Category:', paramtr_rprstn_nm_in_query = '{:p_mfi_ctgry}', default_value = 'Tier 2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:04', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '0' WHERE (parameter_id = 513)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:04
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation:', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:04', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 514)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:05
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:p_branch_id}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:04', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 515)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:05
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Officer', paramtr_rprstn_nm_in_query = '{:rltnshpOffcrID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:05', lov_name_id = '318', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Credit Officers', shd_be_dsplyd = '1' WHERE (parameter_id = 516)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:05
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Date Select From', paramtr_rprstn_nm_in_query = '{:p_start_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:05', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 517)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:05
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Date Select To', paramtr_rprstn_nm_in_query = '{:p_end_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:05', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 518)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:05
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:05', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 519)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:05
UPDATE rpt.rpt_report_parameters SET parameter_name = 'ID Nos E.g. ''RH001'', ''RH002''', paramtr_rprstn_nm_in_query = '{:IDNos}', default_value = 'c.local_id_no', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:05', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 524)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:06
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:06', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 525)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:06
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Run Number:', paramtr_rprstn_nm_in_query = '{:pay_run_no}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:06', lov_name_id = '200', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Run Names/Numbers', shd_be_dsplyd = '1' WHERE (parameter_id = 527)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:06
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Order By:', paramtr_rprstn_nm_in_query = '{:ordrBy}', default_value = '2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:06', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 528)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:06
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Run Name/Number:', paramtr_rprstn_nm_in_query = '{:pay_run_name}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:06', lov_name_id = '200', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Run Names/Numbers', shd_be_dsplyd = '1' WHERE (parameter_id = 529)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:06
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Account Status', paramtr_rprstn_nm_in_query = '{:P_ACNT_STATUS}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:06', lov_name_id = '358', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF Account Status', shd_be_dsplyd = '1' WHERE (parameter_id = 537)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:06
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:P_BRANCH_ID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:06', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 531)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:07
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Age Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:07', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 541)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:07
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. Loan Classification', paramtr_rprstn_nm_in_query = '{:p_loan_class}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:07', lov_name_id = '359', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF Loan Aging Classifications', shd_be_dsplyd = '1' WHERE (parameter_id = 545)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:07
UPDATE rpt.rpt_report_parameters SET parameter_name = '3. Period Start Date:', paramtr_rprstn_nm_in_query = '{:p_start_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:07', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 542)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:07
UPDATE rpt.rpt_report_parameters SET parameter_name = '4. Period End Date:', paramtr_rprstn_nm_in_query = '{:p_end_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:07', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 543)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:07
UPDATE rpt.rpt_report_parameters SET parameter_name = '5. Selected Branch:', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:07', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 544)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:08
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Account Number:', paramtr_rprstn_nm_in_query = '{:p_account_id}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:08', lov_name_id = '257', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF All Bank Accounts', shd_be_dsplyd = '1' WHERE (parameter_id = 546)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:08
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:08', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 548)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:08
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:08', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 549)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:08
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:08', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 550)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:08
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch:', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:08', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 595)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:08
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:08', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 551)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:09
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:09', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '0' WHERE (parameter_id = 552)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:09
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Investment:', paramtr_rprstn_nm_in_query = '{:invstmnt_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:09', lov_name_id = '361', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF All Customer Investments', shd_be_dsplyd = '1' WHERE (parameter_id = 553)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:09
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch:', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:09', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 555)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:09
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Officer:', paramtr_rprstn_nm_in_query = '{:rltnshpOffcrID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:09', lov_name_id = '318', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Credit Officers', shd_be_dsplyd = '1' WHERE (parameter_id = 556)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:09
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:09', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '0' WHERE (parameter_id = 554)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:09
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:09', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 557)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:10
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Loan Account', paramtr_rprstn_nm_in_query = '{:p_account_id}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:10', lov_name_id = '259', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF All Bank Loan Accounts', shd_be_dsplyd = '1' WHERE (parameter_id = 558)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:10
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Balance as At:', paramtr_rprstn_nm_in_query = '{:p_asAtDate}', default_value = '01-Jan-2018 00:00:00', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:10', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 561)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:10
UPDATE rpt.rpt_report_parameters SET parameter_name = 'GL Batch ID:', paramtr_rprstn_nm_in_query = '{:p_batch_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:10', lov_name_id = '119', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Unposted Batches', shd_be_dsplyd = '1' WHERE (parameter_id = 562)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:10
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:p_branch_id}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:10', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 563)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:10
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:p_branch_id}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:10', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 564)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:10
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Group', paramtr_rprstn_nm_in_query = '{:p_grp_id}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:10', lov_name_id = '269', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Customer Groups', shd_be_dsplyd = '1' WHERE (parameter_id = 565)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:11
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:p_branch_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:11', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 572)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:11
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:p_branch_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:11', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 573)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:11
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Payment Batch ID:', paramtr_rprstn_nm_in_query = '{:p_batch_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:11', lov_name_id = '374', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Unprocessed Payment Batches', shd_be_dsplyd = '1' WHERE (parameter_id = 574)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:11
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Payment Batch ID:', paramtr_rprstn_nm_in_query = '{:p_batch_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:11', lov_name_id = '374', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Unprocessed Payment Batches', shd_be_dsplyd = '1' WHERE (parameter_id = 575)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:11
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Budget ID:', paramtr_rprstn_nm_in_query = '{:p_bdgtID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:11', lov_name_id = '372', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Budgets', shd_be_dsplyd = '1' WHERE (parameter_id = 577)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:12
UPDATE rpt.rpt_report_parameters SET parameter_name = 'End Date:', paramtr_rprstn_nm_in_query = '{:p_endDte}', default_value = '31-Dec-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:12', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 580)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:12
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period Type', paramtr_rprstn_nm_in_query = '{:p_periodTyp}', default_value = 'Yearly', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:12', lov_name_id = '375', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Period Types', shd_be_dsplyd = '1' WHERE (parameter_id = 579)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:12
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Start Date:', paramtr_rprstn_nm_in_query = '{:p_startDte}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:12', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 578)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:12
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:12', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 582)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:12
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Officer', paramtr_rprstn_nm_in_query = '{:rltnshpOffcrID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:12', lov_name_id = '318', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Credit Officers', shd_be_dsplyd = '1' WHERE (parameter_id = 583)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:12
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Year', paramtr_rprstn_nm_in_query = '{:pYear}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:12', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 584)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:13
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:13', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 585)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:13
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Officer', paramtr_rprstn_nm_in_query = '{:rltnshpOffcrID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:13', lov_name_id = '318', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Credit Officers', shd_be_dsplyd = '1' WHERE (parameter_id = 586)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:13
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Year', paramtr_rprstn_nm_in_query = '{:pYear}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:13', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 587)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:13
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:13', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 588)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:13
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Officer', paramtr_rprstn_nm_in_query = '{:rltnshpOffcrID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:13', lov_name_id = '318', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Credit Officers', shd_be_dsplyd = '1' WHERE (parameter_id = 589)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:13
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Year', paramtr_rprstn_nm_in_query = '{:pYear}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:13', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 590)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:14
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2015-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:14', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 605)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:14
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:14', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 606)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:14
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2015-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:14', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 607)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:14
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Relations Officer:', paramtr_rprstn_nm_in_query = '{:P_PERSON_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:14', lov_name_id = '211', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Person IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 597)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:14
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. Branch ID:', paramtr_rprstn_nm_in_query = '{:P_BRNCH_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:14', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 598)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:15
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:15', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 599)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:15
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:15', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 600)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:15
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:P_BRANCH_ID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:15', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 596)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:15
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:15', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 613)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:15
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Officer', paramtr_rprstn_nm_in_query = '{:rltnshpOffcrID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:15', lov_name_id = '318', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Credit Officers', shd_be_dsplyd = '1' WHERE (parameter_id = 614)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:16
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Product', paramtr_rprstn_nm_in_query = '{:lnPrdtID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:16', lov_name_id = '249', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Loan Products', shd_be_dsplyd = '1' WHERE (parameter_id = 615)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:16
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:16', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 616)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:16
UPDATE rpt.rpt_report_parameters SET parameter_name = 'INVOICE ID:', paramtr_rprstn_nm_in_query = '{:invoice_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:16', lov_name_id = '176', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Sales Documents', shd_be_dsplyd = '1' WHERE (parameter_id = 617)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:16
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = 'Pay Slip', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:16', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 626)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:16
UPDATE rpt.rpt_report_parameters SET parameter_name = 'ID Nos E.g. ''RH001'', ''RH002''', paramtr_rprstn_nm_in_query = '{:IDNos}', default_value = 'c.local_id_no', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:16', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 627)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:17
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:17', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 628)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:17
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Run ID:', paramtr_rprstn_nm_in_query = '{:pay_run_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:17', lov_name_id = '393', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Pay Run IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 629)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:17
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Order By:', paramtr_rprstn_nm_in_query = '{:ordrBy}', default_value = '2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:17', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 624)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:17
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Run ID:', paramtr_rprstn_nm_in_query = '{:pay_run_name}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:17', lov_name_id = '393', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Run IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 625)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:17
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Order By:', paramtr_rprstn_nm_in_query = '{:ordrBy}', default_value = '2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:17', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 621)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:18
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:18', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 622)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:18
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Run ID:', paramtr_rprstn_nm_in_query = '{:pay_run_no}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:18', lov_name_id = '393', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Pay Run IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 623)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:18
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Mass Pay ID:', paramtr_rprstn_nm_in_query = '{:p_mass_py_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:18', lov_name_id = '393', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Pay Run IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 620)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:18
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Mass Pay ID:', paramtr_rprstn_nm_in_query = '{:p_mass_py_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:18', lov_name_id = '393', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Pay Run IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 619)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:18
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Mass Pay ID:', paramtr_rprstn_nm_in_query = '{:p_mass_py_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:18', lov_name_id = '393', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Pay Run IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 618)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:18
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:18', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 631)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:19
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Category', paramtr_rprstn_nm_in_query = '{:ctgry}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:19', lov_name_id = '394', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Account Categories', shd_be_dsplyd = '1' WHERE (parameter_id = 630)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:19
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Transaction No', paramtr_rprstn_nm_in_query = '{:trns_no}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:19', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 640)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:19
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Invoice ID:', paramtr_rprstn_nm_in_query = '{:invoice_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:19', lov_name_id = '139', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Approved Sales Invoices/Item Issues', shd_be_dsplyd = '1' WHERE (parameter_id = 632)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:19
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Store ID:', paramtr_rprstn_nm_in_query = '{:p_storeid}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:19', lov_name_id = '134', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Users'' Sales Stores', shd_be_dsplyd = '1' WHERE (parameter_id = 633)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:19
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Sales Executive:', paramtr_rprstn_nm_in_query = '{:P_PERSON_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:19', lov_name_id = '211', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Person IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 634)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:19
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. Branch ID:', paramtr_rprstn_nm_in_query = '{:P_BRNCH_ID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:19', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 635)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:20
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From:', paramtr_rprstn_nm_in_query = '{:P_FROM_DATE}', default_value = '01-Jan-2018', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:20', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 636)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:20
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To:', paramtr_rprstn_nm_in_query = '{:P_TO_DATE}', default_value = '31-Dec-4000', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:20', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 637)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:20
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Process Type', paramtr_rprstn_nm_in_query = '{:prcsType}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:20', lov_name_id = '302', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF End of Day Process Types', shd_be_dsplyd = '1' WHERE (parameter_id = 638)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:20
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Run Mode', paramtr_rprstn_nm_in_query = '{:runMode}', default_value = 'Draft', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:20', lov_name_id = '301', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF End of Day Run Modes', shd_be_dsplyd = '1' WHERE (parameter_id = 639)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:20
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Acct Trns ID', paramtr_rprstn_nm_in_query = '{:acct_trns_id}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:20', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 642)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:21
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Cleared Bal', paramtr_rprstn_nm_in_query = '{:amnt}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:21', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 641)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:21
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Unclred Bal', paramtr_rprstn_nm_in_query = '{:uncld_bal}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:21', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 643)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:21
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Account Number', paramtr_rprstn_nm_in_query = '{:acct_number}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:21', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 650)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:21
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Account Number', paramtr_rprstn_nm_in_query = '{:acct_number}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:21', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 651)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:21
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:21', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 652)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:21
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:21', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 653)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:22
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:22', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 654)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:22
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Officer', paramtr_rprstn_nm_in_query = '{:rltnshpOffcrID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:22', lov_name_id = '318', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Credit Officers', shd_be_dsplyd = '1' WHERE (parameter_id = 655)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:22
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Type', paramtr_rprstn_nm_in_query = '{:crdtType}', default_value = '%', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:22', lov_name_id = '333', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF Credit Types', shd_be_dsplyd = '1' WHERE (parameter_id = 656)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:22
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Disbursement Period From:', paramtr_rprstn_nm_in_query = '{:pStartDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:22', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 657)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:22
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Disbursement Period To:', paramtr_rprstn_nm_in_query = '{:pEndDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:22', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 658)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:22
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:22', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 659)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:23
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Loan Product', paramtr_rprstn_nm_in_query = '{:lnPrdtID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:23', lov_name_id = '249', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Loan Products', shd_be_dsplyd = '1' WHERE (parameter_id = 660)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:23
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:23', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 661)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:23
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Officer', paramtr_rprstn_nm_in_query = '{:rltnshpOffcrID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:23', lov_name_id = '318', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Credit Officers', shd_be_dsplyd = '1' WHERE (parameter_id = 662)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:23
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Type', paramtr_rprstn_nm_in_query = '{:crdtType}', default_value = '%', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:23', lov_name_id = '333', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF Credit Types', shd_be_dsplyd = '1' WHERE (parameter_id = 663)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:23
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Disbursement Period From:', paramtr_rprstn_nm_in_query = '{:pStartDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:23', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 664)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:24
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Disbursement Period To:', paramtr_rprstn_nm_in_query = '{:pEndDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:24', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 665)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:24
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:24', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 666)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:24
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Loan Product', paramtr_rprstn_nm_in_query = '{:lnPrdtID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:24', lov_name_id = '249', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Loan Products', shd_be_dsplyd = '1' WHERE (parameter_id = 667)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:24
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Application Period From:', paramtr_rprstn_nm_in_query = '{:pStartDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:24', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 671)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:24
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Application Period To:', paramtr_rprstn_nm_in_query = '{:pEndDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:24', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 672)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:24
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:24', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 668)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:25
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Officer', paramtr_rprstn_nm_in_query = '{:rltnshpOffcrID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:25', lov_name_id = '318', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Credit Officers', shd_be_dsplyd = '1' WHERE (parameter_id = 669)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:25
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Type', paramtr_rprstn_nm_in_query = '{:crdtType}', default_value = '%', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:25', lov_name_id = '333', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF Credit Types', shd_be_dsplyd = '1' WHERE (parameter_id = 670)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:25
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:25', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 673)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:25
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Loan Product', paramtr_rprstn_nm_in_query = '{:lnPrdtID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:25', lov_name_id = '249', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Loan Products', shd_be_dsplyd = '1' WHERE (parameter_id = 674)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:25
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Report Title', paramtr_rprstn_nm_in_query = '-1', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:25', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 675)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:26
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Branch', paramtr_rprstn_nm_in_query = '{:branchID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:26', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 676)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:26
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Officer', paramtr_rprstn_nm_in_query = '{:rltnshpOffcrID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:26', lov_name_id = '318', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'MCF Credit Officers', shd_be_dsplyd = '1' WHERE (parameter_id = 677)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:26
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Credit Type', paramtr_rprstn_nm_in_query = '{:crdtType}', default_value = '%', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:26', lov_name_id = '333', param_data_type = 'TEXT', date_format = 'None', lov_name = 'MCF Credit Types', shd_be_dsplyd = '1' WHERE (parameter_id = 678)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:26
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Disbursement Period From:', paramtr_rprstn_nm_in_query = '{:pStartDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:26', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 679)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:26
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Disbursement Period To:', paramtr_rprstn_nm_in_query = '{:pEndDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:26', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MMM-yyyy', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 680)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:26
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:26', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 681)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:27
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Loan Product', paramtr_rprstn_nm_in_query = '{:lnPrdtID}', default_value = '-1', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:27', lov_name_id = '249', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Loan Products', shd_be_dsplyd = '1' WHERE (parameter_id = 682)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:27
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Age Date:', paramtr_rprstn_nm_in_query = '{:p_as_at_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:27', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 683)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:27
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period End Date:', paramtr_rprstn_nm_in_query = '{:p_end_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:27', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 684)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:27
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Period Start Date:', paramtr_rprstn_nm_in_query = '{:p_start_date}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:27', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 685)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:27
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Document Title', paramtr_rprstn_nm_in_query = '{:documentTitle}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:27', lov_name_id = '-1', param_data_type = 'TEXT', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 724)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:28
UPDATE rpt.rpt_report_parameters SET parameter_name = 'INVOICE ID:', paramtr_rprstn_nm_in_query = '{:invoice_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:28', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 725)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:28
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Order By:', paramtr_rprstn_nm_in_query = '{:ordrBy}', default_value = '2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:28', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 721)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:28
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:28', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 722)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:28
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Request ID:', paramtr_rprstn_nm_in_query = '{:pay_rqst_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:28', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 723)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:28
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Order By:', paramtr_rprstn_nm_in_query = '{:ordrBy}', default_value = '2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:28', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 718)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:28
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:28', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 719)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:29
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Request ID:', paramtr_rprstn_nm_in_query = '{:pay_rqst_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:29', lov_name_id = '429', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Internal Pay Loan Requests', shd_be_dsplyd = '1' WHERE (parameter_id = 720)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:29
UPDATE rpt.rpt_report_parameters SET parameter_name = '01.From Date:', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '2020-01-01', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:29', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 712)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:29
UPDATE rpt.rpt_report_parameters SET parameter_name = '02.To Date:', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '2020-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:29', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 713)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:29
UPDATE rpt.rpt_report_parameters SET parameter_name = '03.Person', paramtr_rprstn_nm_in_query = '{:IDNos}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:29', lov_name_id = '211', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Person IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 714)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:29
UPDATE rpt.rpt_report_parameters SET parameter_name = '04.Item Name', paramtr_rprstn_nm_in_query = '{:itemID}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:29', lov_name_id = '52', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Items', shd_be_dsplyd = '1' WHERE (parameter_id = 715)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:30
UPDATE rpt.rpt_report_parameters SET parameter_name = '05.Local Classification:', paramtr_rprstn_nm_in_query = '{:clsfctn}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:30', lov_name_id = '432', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Internal Pay Item Classifications', shd_be_dsplyd = '1' WHERE (parameter_id = 716)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:30
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:30', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 717)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:30
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Order By:', paramtr_rprstn_nm_in_query = '{:ordrBy}', default_value = '2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:30', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 709)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:30
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:30', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 710)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:30
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Run ID:', paramtr_rprstn_nm_in_query = '{:pay_run_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:30', lov_name_id = '393', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Pay Run IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 711)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:30
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Order By:', paramtr_rprstn_nm_in_query = '{:ordrBy}', default_value = '2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:30', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 706)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:31
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:31', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 707)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:31
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Run ID:', paramtr_rprstn_nm_in_query = '{:pay_run_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:31', lov_name_id = '393', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Pay Run IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 708)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:31
UPDATE rpt.rpt_report_parameters SET parameter_name = 'ID No: E.g. ''RH001'', ''RH002''', paramtr_rprstn_nm_in_query = '{:id_num}', default_value = 'c.local_id_no', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:31', lov_name_id = '43', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Active Persons', shd_be_dsplyd = '1' WHERE (parameter_id = 699)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:31
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Item Name', paramtr_rprstn_nm_in_query = '{:itmNm}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:31', lov_name_id = '202', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Balance Items', shd_be_dsplyd = '1' WHERE (parameter_id = 700)
-------------------------Next Msg:-------------------------

RHOMICOM ERROR: [8] Trying to get property 'percent' of non-object<br />
 This Rhomicom Error happened on line 424 in file /usr/share/nginx/html/app_code/rpt/rpts_rnnr.php
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:31
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Local Classification:', paramtr_rprstn_nm_in_query = '{:clsfctn}', default_value = '%', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:31', lov_name_id = '432', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Internal Pay Item Classifications', shd_be_dsplyd = '1' WHERE (parameter_id = 701)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:31
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Name of Workplace', paramtr_rprstn_nm_in_query = '{:instu_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:31', lov_name_id = '169', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'All Customers and Suppliers', shd_be_dsplyd = '1' WHERE (parameter_id = 702)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:32
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:32', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 703)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:32
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Date(DD-Mmm-YYYY):', paramtr_rprstn_nm_in_query = '{:pay_dte}', default_value = '2020-12-31', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:32', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 704)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:32
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Run ID:', paramtr_rprstn_nm_in_query = '{:pay_run_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:32', lov_name_id = '393', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Pay Run IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 705)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:32
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Order By:', paramtr_rprstn_nm_in_query = '{:ordrBy}', default_value = '2', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:32', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 696)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:32
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Organisation', paramtr_rprstn_nm_in_query = '{:orgID}', default_value = '1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:32', lov_name_id = '32', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Organisations', shd_be_dsplyd = '1' WHERE (parameter_id = 697)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:33
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Pay Run ID:', paramtr_rprstn_nm_in_query = '{:pay_run_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:33', lov_name_id = '393', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Pay Run IDs', shd_be_dsplyd = '1' WHERE (parameter_id = 698)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:33
UPDATE rpt.rpt_report_parameters SET parameter_name = 'As at Date', paramtr_rprstn_nm_in_query = '{:asAtDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:33', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 686)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:33
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Divisions', paramtr_rprstn_nm_in_query = '{:dv_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:33', lov_name_id = '33', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Divisions/Groups', shd_be_dsplyd = '1' WHERE (parameter_id = 687)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:33
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:33', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'yyyy-MM-dd', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 688)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:33
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Grade', paramtr_rprstn_nm_in_query = '{:grd_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:33', lov_name_id = '45', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Grades', shd_be_dsplyd = '1' WHERE (parameter_id = 689)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:33
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Job', paramtr_rprstn_nm_in_query = '{:jb_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:33', lov_name_id = '34', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Jobs', shd_be_dsplyd = '1' WHERE (parameter_id = 690)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:34
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Name of Institution', paramtr_rprstn_nm_in_query = '{:instu_nm}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:34', lov_name_id = '92', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Schools/Organisations/Institutions', shd_be_dsplyd = '1' WHERE (parameter_id = 691)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:34
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Name', paramtr_rprstn_nm_in_query = '{:pers_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:34', lov_name_id = '43', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Active Persons', shd_be_dsplyd = '1' WHERE (parameter_id = 692)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:34
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type', paramtr_rprstn_nm_in_query = '{:pstntyp}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:34', lov_name_id = '26', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Types', shd_be_dsplyd = '1' WHERE (parameter_id = 693)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:34
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Person Type Reason', paramtr_rprstn_nm_in_query = '{:pstntyp_rsn}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:34', lov_name_id = '25', param_data_type = 'TEXT', date_format = 'None', lov_name = 'Person Type Change Reasons', shd_be_dsplyd = '1' WHERE (parameter_id = 694)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:34
UPDATE rpt.rpt_report_parameters SET parameter_name = 'Position', paramtr_rprstn_nm_in_query = '{:pstn_id}', default_value = '', is_required = '0', last_update_by = 130, last_update_date = '2020-11-02 09:12:34', lov_name_id = '46', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Positions', shd_be_dsplyd = '1' WHERE (parameter_id = 695)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:35
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:34', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 727)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:35
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:35', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 726)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:35
UPDATE rpt.rpt_report_parameters SET parameter_name = 'From Date', paramtr_rprstn_nm_in_query = '{:fromDate}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:35', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 728)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:35
UPDATE rpt.rpt_report_parameters SET parameter_name = 'To Date', paramtr_rprstn_nm_in_query = '{:toDate}', default_value = '', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:35', lov_name_id = '-1', param_data_type = 'DATE', date_format = 'dd-MM-yyyy HH:mm:ss', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 729)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:35
INSERT INTO rpt.rpt_report_parameters(report_id, parameter_name, paramtr_rprstn_nm_in_query, created_by, creation_date, last_update_by, last_update_date, default_value, is_required, lov_name_id, param_data_type, date_format, lov_name, shd_be_dsplyd) VALUES (271, '1. Branch ID:', '{:p_branch_id}', 130, '2020-11-02 09:12:35', 130, '2020-11-02 09:12:35', '-1', '1', '252', 'NUMBER', 'None', 'Sites/Locations New', '1')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:35
INSERT INTO rpt.rpt_report_parameters(report_id, parameter_name, paramtr_rprstn_nm_in_query, created_by, creation_date, last_update_by, last_update_date, default_value, is_required, lov_name_id, param_data_type, date_format, lov_name, shd_be_dsplyd) VALUES (271, '2. Year', '{:p_year}', 130, '2020-11-02 09:12:35', 130, '2020-11-02 09:12:35', '2020', '1', '-1', 'NUMBER', 'None', '', '1')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:36
INSERT INTO rpt.rpt_report_parameters(report_id, parameter_name, paramtr_rprstn_nm_in_query, created_by, creation_date, last_update_by, last_update_date, default_value, is_required, lov_name_id, param_data_type, date_format, lov_name, shd_be_dsplyd) VALUES (270, '1. Branch ID:', '{:p_branch_id}', 130, '2020-11-02 09:12:36', 130, '2020-11-02 09:12:36', '-1', '1', '252', 'NUMBER', 'None', 'Sites/Locations New', '1')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:36
INSERT INTO rpt.rpt_report_parameters(report_id, parameter_name, paramtr_rprstn_nm_in_query, created_by, creation_date, last_update_by, last_update_date, default_value, is_required, lov_name_id, param_data_type, date_format, lov_name, shd_be_dsplyd) VALUES (270, '2. Year', '{:p_year}', 130, '2020-11-02 09:12:36', 130, '2020-11-02 09:12:36', '2020', '1', '-1', 'NUMBER', 'None', '', '1')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:56
UPDATE rpt.rpt_reports SET report_name = 'Deposit Trend - Per Year', report_desc = 'Deposit Trend - Per Year', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 accnt_num,
  tbl1.gnrl_data3 accnt_name,
  tbl1.gnrl_data4 account_type,
  tbl1.gnrl_data5 tel_number,
  tbl1.gnrl_data6 branch,
  tbl1.gnrl_data7::NUMERIC Jan,
  tbl1.gnrl_data9::NUMERIC Feb,
  tbl1.gnrl_data11::NUMERIC March,
  tbl1.gnrl_data13::NUMERIC April,
  tbl1.gnrl_data15::NUMERIC May,
  tbl1.gnrl_data17::NUMERIC June,
  tbl1.gnrl_data19::NUMERIC July,
  tbl1.gnrl_data21::NUMERIC August,
  tbl1.gnrl_data23::NUMERIC September,
  tbl1.gnrl_data25::NUMERIC October,
  tbl1.gnrl_data27::NUMERIC November,
  tbl1.gnrl_data29::NUMERIC December, 
''01-Jan-{:p_year}'' P_FROM_DATE, 
''31-Dec-{:p_year}'' P_TO_DATE ,
-1 staff_id, 
'''' relations_officer, 
tbl1.gnrl_data6 branch_param
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:56', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='268.jrxml', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='C:\fakepath\268.jrxml', pre_rpt_sql_query='select mcf.populate_monthly_trns_sums(
{:rptRunID},
''{:p_year}'',
{:p_branch_id},
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 271)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:57
UPDATE rpt.rpt_reports
                            SET jrxml_file_name='271.jrxml', last_update_by=130, last_update_date='2020-11-02 09:12:57' WHERE report_id=271
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:57
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Branch ID:', paramtr_rprstn_nm_in_query = '{:p_branch_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:57', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 738)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:12:57
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. Year', paramtr_rprstn_nm_in_query = '{:p_year}', default_value = '2020', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:12:57', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 739)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:13:09
UPDATE rpt.rpt_reports SET report_name = 'Withdrawal Trend - Per Year', report_desc = 'Withdrawal Trend - Per Year', rpt_sql_query = 'SELECT
  tbl1.gnrl_data1::INTEGER rownumbr,
  tbl1.gnrl_data2 accnt_num,
  tbl1.gnrl_data3 accnt_name,
  tbl1.gnrl_data4 account_type,
  tbl1.gnrl_data5 tel_number,
  tbl1.gnrl_data6 branch,
  tbl1.gnrl_data8::NUMERIC Jan,
  tbl1.gnrl_data10::NUMERIC Feb,
  tbl1.gnrl_data12::NUMERIC March,
  tbl1.gnrl_data14::NUMERIC April,
  tbl1.gnrl_data16::NUMERIC May,
  tbl1.gnrl_data18::NUMERIC June,
  tbl1.gnrl_data20::NUMERIC July,
  tbl1.gnrl_data22::NUMERIC August,
  tbl1.gnrl_data24::NUMERIC September,
  tbl1.gnrl_data26::NUMERIC October,
  tbl1.gnrl_data28::NUMERIC November,
  tbl1.gnrl_data30::NUMERIC December, 
''01-Jan-{:p_year}'' P_FROM_DATE, 
''31-Dec-{:p_year}'' P_TO_DATE ,
-1 staff_id, 
'''' relations_officer, 
tbl1.gnrl_data6 branch_param 
 FROM rpt.rpt_gnrl_data_storage tbl1
 WHERE tbl1.rpt_run_id={:rptRunID} 
 ORDER BY tbl1.gnrl_data1::INTEGER', owner_module = 'Banking', is_enabled = '1', last_update_by = 130, last_update_date = '2020-11-02 09:13:09', rpt_or_sys_prcs = 'SQL Report', cols_to_group = '', cols_to_count = '0', cols_to_sum = '', cols_to_average = '', cols_to_no_frmt = '', output_type = 'HTML', portrait_lndscp = 'Portrait', rpt_layout='None', imgs_col_nos='', csv_delimiter='None', process_runner='Jasper Process Runner', jrxml_file_name='C:\fakepath\268.jrxml', pre_rpt_sql_query='select mcf.populate_monthly_trns_sums(
{:rptRunID},
''{:p_year}'',
{:p_branch_id},
{:usrID}, to_char(now(),''YYYY-MM-DD HH24:MI:SS''), {:orgID}, {:msgID});', pst_rpt_sql_query='' WHERE (report_id = 270)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:13:09
UPDATE rpt.rpt_reports
                            SET jrxml_file_name='270.jrxml', last_update_by=130, last_update_date='2020-11-02 09:13:09' WHERE report_id=270
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:13:09
UPDATE rpt.rpt_report_parameters SET parameter_name = '1. Branch ID:', paramtr_rprstn_nm_in_query = '{:p_branch_id}', default_value = '-1', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:13:09', lov_name_id = '252', param_data_type = 'NUMBER', date_format = 'None', lov_name = 'Sites/Locations New', shd_be_dsplyd = '1' WHERE (parameter_id = 740)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:13:09
UPDATE rpt.rpt_report_parameters SET parameter_name = '2. Year', paramtr_rprstn_nm_in_query = '{:p_year}', default_value = '2020', is_required = '1', last_update_by = 130, last_update_date = '2020-11-02 09:13:09', lov_name_id = '-1', param_data_type = 'NUMBER', date_format = 'None', lov_name = '', shd_be_dsplyd = '1' WHERE (parameter_id = 741)
-------------------------Next Msg:-------------------------
Inside generateReportRun, RPTID=271==738~5|739~2020|-130~Deposit Trend - Per Year|-190~HTML
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:13:23
INSERT INTO rpt.rpt_report_runs(
            run_by, run_date, rpt_run_output, run_status_txt, 
            run_status_prct, report_id, rpt_rn_param_ids, rpt_rn_param_vals, 
            output_used, orntn_used, last_actv_date_tme, is_this_from_schdler, alert_id) 
            VALUES (130, '2020-11-02 09:13:23', '', 'Not Started!', 0, 271, 
            '', 
            '', 
            '', 
            '', '2020-11-02 09:13:23', '0', -1)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:13:23
INSERT INTO rpt.rpt_run_msgs(log_messages, process_typ, process_id, created_by, creation_date, last_update_by, last_update_date) VALUES ('2020-11-02 09:13:23 .... Report/Process Run is about to Start...(Being run by Consultant1)','Process Run',156573, 130, '2020-11-02 09:13:23', 130, '2020-11-02 09:13:23')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:13:23
UPDATE rpt.rpt_run_msgs SET log_messages=log_messages || '

738|739|-130|-190
5|2020|Deposit Trend - Per Year|HTML

OUTPUT FORMAT: HTML
ORIENTATION: ', last_update_by=130, last_update_date='2020-11-02 09:13:23' WHERE msg_id = 156558
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:13:23
UPDATE rpt.rpt_report_runs SET rpt_rn_param_ids = '738|739|-130|-190', rpt_rn_param_vals = '5|2020|Deposit Trend - Per Year|HTML', output_used = 'HTML', orntn_used= '' WHERE (rpt_run_id = 156573)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:13:23
UPDATE rpt.rpt_prcss_rnnrs SET 
            shld_rnnr_stop='0', last_update_by=130, last_update_date=to_char(now(),'YYYY-MM-DD HH24:MI:SS') WHERE rnnr_name = 'Jasper Process Runner'
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:13:23
UPDATE rpt.rpt_report_runs SET shld_run_stop = '0' WHERE (rpt_run_id = 156573)
-------------------------Next Msg:-------------------------
java -jar /opt/apache/adbs/bin/REMSProcessRunner.jar "rho-pgdb" "5432" "postgres" "***************" "ys_db" "Jasper Process Runner" "156573" "/opt/apache/adbs/bin" WEB "/opt/apache/adbs" "http://localhost:8000/"
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:15:23
UPDATE sec.sec_track_user_logins SET last_active_time='2020-11-02 09:13:32', logout_time='' WHERE login_number=144475
-------------------------Next Msg:-------------------------
Inside generateReportRun, RPTID=271==738~5|739~2020|-130~Deposit Trend - Per Year|-190~HTML
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:15:31
INSERT INTO rpt.rpt_report_runs(
            run_by, run_date, rpt_run_output, run_status_txt, 
            run_status_prct, report_id, rpt_rn_param_ids, rpt_rn_param_vals, 
            output_used, orntn_used, last_actv_date_tme, is_this_from_schdler, alert_id) 
            VALUES (130, '2020-11-02 09:15:31', '', 'Not Started!', 0, 271, 
            '', 
            '', 
            '', 
            '', '2020-11-02 09:15:31', '0', -1)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:15:31
INSERT INTO rpt.rpt_run_msgs(log_messages, process_typ, process_id, created_by, creation_date, last_update_by, last_update_date) VALUES ('2020-11-02 09:15:31 .... Report/Process Run is about to Start...(Being run by Consultant1)','Process Run',156574, 130, '2020-11-02 09:15:31', 130, '2020-11-02 09:15:31')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:15:31
UPDATE rpt.rpt_run_msgs SET log_messages=log_messages || '

738|739|-130|-190
5|2020|Deposit Trend - Per Year|HTML

OUTPUT FORMAT: HTML
ORIENTATION: ', last_update_by=130, last_update_date='2020-11-02 09:15:31' WHERE msg_id = 156559
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:15:31
UPDATE rpt.rpt_report_runs SET rpt_rn_param_ids = '738|739|-130|-190', rpt_rn_param_vals = '5|2020|Deposit Trend - Per Year|HTML', output_used = 'HTML', orntn_used= '' WHERE (rpt_run_id = 156574)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:15:31
UPDATE rpt.rpt_prcss_rnnrs SET 
            shld_rnnr_stop='0', last_update_by=130, last_update_date=to_char(now(),'YYYY-MM-DD HH24:MI:SS') WHERE rnnr_name = 'Jasper Process Runner'
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:15:31
UPDATE rpt.rpt_report_runs SET shld_run_stop = '0' WHERE (rpt_run_id = 156574)
-------------------------Next Msg:-------------------------
java -jar /opt/apache/adbs/bin/REMSProcessRunner.jar "rho-pgdb" "5432" "postgres" "***************" "ys_db" "Jasper Process Runner" "156574" "/opt/apache/adbs/bin" WEB "/opt/apache/adbs" "http://localhost:8000/"
-------------------------Next Msg:-------------------------
Inside generateReportRun, RPTID=271==738~5|739~2020|-130~Deposit Trend - Per Year|-190~PDF
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:16:26
INSERT INTO rpt.rpt_report_runs(
            run_by, run_date, rpt_run_output, run_status_txt, 
            run_status_prct, report_id, rpt_rn_param_ids, rpt_rn_param_vals, 
            output_used, orntn_used, last_actv_date_tme, is_this_from_schdler, alert_id) 
            VALUES (130, '2020-11-02 09:16:26', '', 'Not Started!', 0, 271, 
            '', 
            '', 
            '', 
            '', '2020-11-02 09:16:26', '0', -1)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:16:26
INSERT INTO rpt.rpt_run_msgs(log_messages, process_typ, process_id, created_by, creation_date, last_update_by, last_update_date) VALUES ('2020-11-02 09:16:26 .... Report/Process Run is about to Start...(Being run by Consultant1)','Process Run',156575, 130, '2020-11-02 09:16:26', 130, '2020-11-02 09:16:26')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:16:26
UPDATE rpt.rpt_run_msgs SET log_messages=log_messages || '

738|739|-130|-190
5|2020|Deposit Trend - Per Year|PDF

OUTPUT FORMAT: PDF
ORIENTATION: ', last_update_by=130, last_update_date='2020-11-02 09:16:26' WHERE msg_id = 156560
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:16:26
UPDATE rpt.rpt_report_runs SET rpt_rn_param_ids = '738|739|-130|-190', rpt_rn_param_vals = '5|2020|Deposit Trend - Per Year|PDF', output_used = 'PDF', orntn_used= '' WHERE (rpt_run_id = 156575)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:16:27
UPDATE rpt.rpt_prcss_rnnrs SET 
            shld_rnnr_stop='0', last_update_by=130, last_update_date=to_char(now(),'YYYY-MM-DD HH24:MI:SS') WHERE rnnr_name = 'Jasper Process Runner'
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:16:27
UPDATE rpt.rpt_report_runs SET shld_run_stop = '0' WHERE (rpt_run_id = 156575)
-------------------------Next Msg:-------------------------
java -jar /opt/apache/adbs/bin/REMSProcessRunner.jar "rho-pgdb" "5432" "postgres" "***************" "ys_db" "Jasper Process Runner" "156575" "/opt/apache/adbs/bin" WEB "/opt/apache/adbs" "http://localhost:8000/"
-------------------------Next Msg:-------------------------
Inside generateReportRun, RPTID=271==738~4|739~2020|-130~Deposit Trend - Per Year|-190~MICROSOFT EXCEL
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:17:26
INSERT INTO rpt.rpt_report_runs(
            run_by, run_date, rpt_run_output, run_status_txt, 
            run_status_prct, report_id, rpt_rn_param_ids, rpt_rn_param_vals, 
            output_used, orntn_used, last_actv_date_tme, is_this_from_schdler, alert_id) 
            VALUES (130, '2020-11-02 09:17:26', '', 'Not Started!', 0, 271, 
            '', 
            '', 
            '', 
            '', '2020-11-02 09:17:26', '0', -1)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:17:26
INSERT INTO rpt.rpt_run_msgs(log_messages, process_typ, process_id, created_by, creation_date, last_update_by, last_update_date) VALUES ('2020-11-02 09:17:26 .... Report/Process Run is about to Start...(Being run by Consultant1)','Process Run',156576, 130, '2020-11-02 09:17:26', 130, '2020-11-02 09:17:26')
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:17:26
UPDATE rpt.rpt_run_msgs SET log_messages=log_messages || '

738|739|-130|-190
4|2020|Deposit Trend - Per Year|MICROSOFT EXCEL

OUTPUT FORMAT: MICROSOFT EXCEL
ORIENTATION: ', last_update_by=130, last_update_date='2020-11-02 09:17:26' WHERE msg_id = 156561
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:17:26
UPDATE rpt.rpt_report_runs SET rpt_rn_param_ids = '738|739|-130|-190', rpt_rn_param_vals = '4|2020|Deposit Trend - Per Year|MICROSOFT EXCEL', output_used = 'MICROSOFT EXCEL', orntn_used= '' WHERE (rpt_run_id = 156576)
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:17:26
UPDATE rpt.rpt_prcss_rnnrs SET 
            shld_rnnr_stop='0', last_update_by=130, last_update_date=to_char(now(),'YYYY-MM-DD HH24:MI:SS') WHERE rnnr_name = 'Jasper Process Runner'
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:17:27
UPDATE rpt.rpt_report_runs SET shld_run_stop = '0' WHERE (rpt_run_id = 156576)
-------------------------Next Msg:-------------------------
java -jar /opt/apache/adbs/bin/REMSProcessRunner.jar "rho-pgdb" "5432" "postgres" "***************" "ys_db" "Jasper Process Runner" "156576" "/opt/apache/adbs/bin" WEB "/opt/apache/adbs" "http://localhost:8000/"
-------------------------Next Msg:-------------------------
@02-Nov-2020 09:40:35
UPDATE sec.sec_track_user_logins SET last_active_time='2020-11-02 09:18:05', logout_time='2020-11-02 09:18:05' WHERE login_number=144475
-------------------------Next Msg:-------------------------

/usr/share/nginx/html/dwnlds/amcharts_2100/samples/5c684v68FV1R3_86565c34932393.html|/usr/share/nginx/html/dwnlds/amcharts_2100/samples/c256vc56FV1R3_96565c76746574.html|/usr/share/nginx/html/dwnlds/amcharts_2100/samples/39282828FV1R3_v7565c67v256v2.html|/usr/share/nginx/html/dwnlds/amcharts_2100/samples/v9369736FV1R3_c7565c74726372.html|/usr/share/nginx/html/dwnlds/amcharts_2100/samples/6vv85997FV1R3_27565c275cc65c.html|/usr/share/nginx/html/dwnlds/amcharts_2100/samples/54264326FV1R3_47565c98758775.html|/usr/share/nginx/html/dwnlds/tmp/93569256GTX3_57565cc555c455.pdf|/usr/share/nginx/html/dwnlds/tmp/29862886IFA3_67565cc373c273.xls|
-------------------------Next Msg:-------------------------

/usr/share/nginx/html/dwnlds/amcharts_2100/samples/5c684v68FV1R3_86565c34932393.html
-------------------------Next Msg:-------------------------

/usr/share/nginx/html/dwnlds/amcharts_2100/samples/c256vc56FV1R3_96565c76746574.html
-------------------------Next Msg:-------------------------

/usr/share/nginx/html/dwnlds/amcharts_2100/samples/39282828FV1R3_v7565c67v256v2.html
-------------------------Next Msg:-------------------------

/usr/share/nginx/html/dwnlds/amcharts_2100/samples/v9369736FV1R3_c7565c74726372.html
-------------------------Next Msg:-------------------------

/usr/share/nginx/html/dwnlds/amcharts_2100/samples/6vv85997FV1R3_27565c275cc65c.html
-------------------------Next Msg:-------------------------

/usr/share/nginx/html/dwnlds/amcharts_2100/samples/54264326FV1R3_47565c98758775.html
-------------------------Next Msg:-------------------------

/usr/share/nginx/html/dwnlds/tmp/93569256GTX3_57565cc555c455.pdf
-------------------------Next Msg:-------------------------

/usr/share/nginx/html/dwnlds/tmp/29862886IFA3_67565cc373c273.xls
-------------------------Next Msg:-------------------------


-------------------------Next Msg:-------------------------
